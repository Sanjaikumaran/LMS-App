{"ast":null,"code":"var _jsxFileName = \"/home/sk/Documents/quiz-app/src/pages/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { CgProfile } from \"react-icons/cg\";\nimport \"../styles/Quiz.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = props => {\n  _s();\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState();\n  const [isAutoSubmit, setIsAutoSubmit] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(1);\n  const [totalTime, setTotalTime] = useState(1);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\n  const [hosts, setHosts] = useState([]);\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem(\"userData\") || \"{}\"),\n      localIps = localStorage.getItem(\"localIps\");\n    userData && setUserData(userData);\n    if (localIps) {\n      setHosts(localIps.split(\",\"));\n    }\n  }, [props]);\n  useEffect(() => {\n    hosts.length && axios.post(`http://${hosts[0]}:5000/load-data`, {\n      collection: \"Tests\"\n    }).then(result => {\n      result.data.forEach(qn => {\n        delete qn[\"_id\"];\n      });\n      const questionsObj = result.data.map(question => {\n        if (question.title) {\n          const minutes = question.Hours * 60 + question.Minutes;\n          const seconds = minutes * 60 + question.Seconds;\n\n          // Set total time and time left only once, using the last question's time values\n          setTotalTime(prev => seconds);\n          setTimeLeft(prev => seconds);\n\n          // Do not include this question in the final array\n          return null;\n        } else {\n          // Return the question with a modified 'type'\n          return {\n            ...question,\n            type: question.Answer.length > 1 ? \"checkbox\" : \"radio\" // Multiple answers => checkbox, single answer => radio\n          };\n        }\n      });\n      setQuestions(questionsObj.filter(question => question !== null));\n    });\n  }, [hosts]);\n  useEffect(() => {\n    if (questions.length) {\n      const intTimer = setInterval(() => {\n        setTimeLeft(prevTimeLeft => {\n          if (prevTimeLeft <= -1) {\n            clearInterval(intTimer);\n            return 0;\n          }\n          return prevTimeLeft - 1;\n        });\n      }, 1000);\n      return () => clearInterval(intTimer);\n    }\n  }, [questions]);\n  useEffect(() => {\n    if (timeLeft === 0 && !isAutoSubmit) {\n      window.alert(\"Time Out!\\nYour test will be submitted in 10 secs\");\n      setTimeLeft(11);\n      setIsAutoSubmit(true);\n    }\n  }, [timeLeft]);\n  useEffect(() => {\n    if (isAutoSubmit) {\n      setTimeout(() => {\n        console.log(\"Quiz Submitted:\", selectedOptions);\n        alert(\"Quiz Submitted!\");\n        navigate(\"/\");\n      }, 10000);\n    }\n  }, [isAutoSubmit]);\n  const totalQuestions = questions.length;\n  const handleOptionSelect = (option, type) => {\n    const updatedSelections = [...highlightedOptions];\n    if (type === \"radio\") {\n      // Toggle selection for radio buttons\n      if (updatedSelections[currentQuestionIndex] === option) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\"; // Deselect if clicked again\n      } else {\n        updatedSelections[currentQuestionIndex] = option !== undefined ? option : \"not-answered\";\n      }\n    } else if (type === \"checkbox\") {\n      const currentSelections = updatedSelections[currentQuestionIndex] || [];\n\n      // Toggle checkbox selection\n      if (currentSelections.includes(option)) {\n        updatedSelections[currentQuestionIndex] = currentSelections.filter(o => o !== option);\n      } else {\n        updatedSelections[currentQuestionIndex] = [...currentSelections, option];\n      }\n\n      // Check if any selections are made\n      if (updatedSelections[currentQuestionIndex].length === 0) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\"; // Mark as not-answered\n      } else if (updatedSelections[currentQuestionIndex] === \"not-answered\" || updatedSelections[currentQuestionIndex] === \"skipped\") {\n        updatedSelections[currentQuestionIndex] = []; // Clear \"not-answered\" status\n      }\n    }\n\n    // Update states\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n  };\n  const handleNextQuestion = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    // If no option is selected, mark as 'not-answered'\n    if (updatedSelections[currentQuestionIndex] === undefined) {\n      updatedSelections[currentQuestionIndex] = \"not-answered\";\n    }\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handlePreviousQuestion = () => {\n    const updatedSelections = [...highlightedOptions];\n    if (updatedSelections[currentQuestionIndex] === undefined) {\n      updatedSelections[currentQuestionIndex] = \"not-answered\";\n    }\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const handleSkip = () => {\n    const updatedSelections = [...highlightedOptions];\n    updatedSelections[currentQuestionIndex] = \"skipped\";\n    setHighlightedOptions(updatedSelections);\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handleQuestionClick = index => {\n    const updatedSelections = [...highlightedOptions];\n\n    // If the question is neither answered nor skipped, mark it as not-answered\n    if (updatedSelections[index] === undefined) {\n      updatedSelections[index] = \"not-answered\";\n    }\n    setHighlightedOptions(updatedSelections);\n    setCurrentQuestionIndex(index);\n  };\n  const handleSubmit = () => {\n    if (window.confirm(\"Are you sure you want to start the test?\")) {\n      //console.log(\"Quiz Submitted:\", selectedOptions);\n      let correctAnswers = [];\n      questions.forEach(question => {\n        if (!question[\"title\"]) {\n          if (question[\"Answer\"].length === 1) {\n            correctAnswers.push(question[\"Answer\"][0]);\n          } else {\n            correctAnswers.push(question[\"Answer\"]);\n          }\n        }\n      });\n      //console.log(correctAnswers);\n      correctAnswers.forEach((val, index) => {\n        if (correctAnswers[index] == selectedOptions[index]) {}\n        console.log(correctAnswers[index], selectedOptions[index]);\n      });\n      alert(\"Quiz Submitted!\");\n\n      //navigate(\"/\");\n    }\n  };\n  const showProfile = profileDetails => {\n    const isExist = document.querySelector(\".profile-container\");\n    if (isExist) {\n      return;\n    }\n    const profileContainer = document.createElement(\"div\");\n    profileContainer.className = \"profile-container\";\n    const profileInfo = document.createElement(\"div\");\n    profileInfo.className = \"profile-info\";\n    Object.keys(profileDetails).map(async detail => {\n      const detailList = document.createElement(\"li\");\n      detailList.classList = \"detail\";\n      detailList.innerHTML = `<p><span>${detail}:</span>&nbsp;<span> ${profileDetails[detail]}</span></p>`;\n      profileInfo.appendChild(detailList);\n    });\n    profileContainer.appendChild(profileInfo);\n    document.body.appendChild(profileContainer);\n  };\n  useEffect(() => {\n    const bodyClick = event => {\n      if (event.target.closest(\"li.profile\")) {\n        return;\n      } else if (event.target.closest(\"div.profile-container\")) {\n        return;\n      }\n      const profileExist = document.querySelector(\".profile-container\");\n      if (profileExist) {\n        profileExist.remove();\n      }\n    };\n    document.body.addEventListener(\"click\", bodyClick);\n    return () => {\n      document.body.removeEventListener(\"click\", bodyClick);\n    };\n  }, []);\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedOption = highlightedOptions[currentQuestionIndex] || [];\n  const radius = 50;\n  const circumference = 2 * Math.PI * radius;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: \"Quizzards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => {\n              navigate(\"/admin\");\n            },\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#about\",\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            href: \"https://sanjaikumaran.online/contact/\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              showProfile(userData);\n            },\n            className: \"profile\",\n            children: /*#__PURE__*/_jsxDEV(CgProfile, {\n              style: {\n                fontSize: \"1.5rem\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-app\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.Question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"options\",\n              children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.Option.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleOptionSelect(option, currentQuestion.type),\n                className: `\n                option \n                ${currentQuestion.type === \"radio\" && selectedOption === option ? \"selected\" : \"\"}\n                ${currentQuestion.type === \"checkbox\" && selectedOption.includes(option) ? \"selected\" : \"\"}\n            `,\n                children: (currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.type) === \"radio\" ? /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: `question-${currentQuestionIndex}`,\n                    value: option,\n                    checked: selectedOption === option // Will reflect deselection\n                    ,\n                    onChange: () => handleOptionSelect(option, \"radio\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 25\n                  }, this), option]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: `question-${currentQuestionIndex}`,\n                    value: option,\n                    checked: selectedOption.includes(option),\n                    onChange: () => handleOptionSelect(option, \"checkbox\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 25\n                  }, this), option]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [currentQuestionIndex !== 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePreviousQuestion,\n            disabled: currentQuestionIndex === 0,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: currentQuestionIndex !== totalQuestions - 1 ? handleNextQuestion : handleSubmit,\n            className: currentQuestionIndex !== totalQuestions - 1 ? \"\" : \"submit-button\",\n            children: currentQuestionIndex !== totalQuestions - 1 ? \"Next\" : \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), currentQuestionIndex !== totalQuestions - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSkip,\n            children: \"Skip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question \", currentQuestionIndex + 1, \" of \", totalQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"header\",\n            children: \"Timer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer-circle\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"120\",\n                height: \"120\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  r: radius,\n                  cx: \"60\",\n                  cy: \"60\",\n                  fill: \"none\",\n                  stroke: \"#e7e7e7\",\n                  strokeWidth: \"8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                  r: radius,\n                  cx: \"60\",\n                  cy: \"60\",\n                  fill: \"none\",\n                  stroke: \"#007BFF\",\n                  strokeWidth: \"8\",\n                  strokeDasharray: circumference,\n                  strokeDashoffset: circumference - timeLeft / totalTime * circumference,\n                  style: {\n                    transition: \"stroke-dashoffset 1s linear\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timer-text\",\n                children: [Math.floor(timeLeft / 60), \"m \", timeLeft % 60, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Time Remaining\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-number-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"header\",\n            children: \"Questions List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-layout\",\n            children: Array.from({\n              length: totalQuestions\n            }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `question-number ${i === currentQuestionIndex ? \"current-question\" : \"\"} ${highlightedOptions[i] === \"skipped\" ? \"skipped\" : highlightedOptions[i] === \"not-answered\" ? \"not-answered\" : highlightedOptions[i] !== undefined ? \"answered\" : \"\"}`,\n              onClick: () => handleQuestionClick(i) // Handle question click\n              ,\n              children: i + 1\n            }, i + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Quiz, \"TWey/ZpCMDImI/bTMY90WfJVfv0=\", false, function () {\n  return [useNavigate];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","CgProfile","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","props","_s","navigate","userData","setUserData","isAutoSubmit","setIsAutoSubmit","timeLeft","setTimeLeft","totalTime","setTotalTime","currentQuestionIndex","setCurrentQuestionIndex","selectedOptions","setSelectedOptions","questions","setQuestions","highlightedOptions","setHighlightedOptions","hosts","setHosts","JSON","parse","localStorage","getItem","localIps","split","length","post","collection","then","result","data","forEach","qn","questionsObj","map","question","title","minutes","Hours","Minutes","seconds","Seconds","prev","type","Answer","filter","intTimer","setInterval","prevTimeLeft","clearInterval","window","alert","setTimeout","console","log","totalQuestions","handleOptionSelect","option","updatedSelections","undefined","currentSelections","includes","o","handleNextQuestion","handlePreviousQuestion","handleSkip","handleQuestionClick","index","handleSubmit","confirm","correctAnswers","push","val","showProfile","profileDetails","isExist","document","querySelector","profileContainer","createElement","className","profileInfo","Object","keys","detail","detailList","classList","innerHTML","appendChild","body","bodyClick","event","target","closest","profileExist","remove","addEventListener","removeEventListener","currentQuestion","selectedOption","radius","circumference","Math","PI","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","rel","style","fontSize","Question","Option","name","value","checked","onChange","disabled","width","height","r","cx","cy","fill","stroke","strokeWidth","strokeDasharray","strokeDashoffset","transition","floor","Array","from","_","i","_c","$RefreshReg$"],"sources":["/home/sk/Documents/quiz-app/src/pages/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { CgProfile } from \"react-icons/cg\";\n\nimport \"../styles/Quiz.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Quiz = (props) => {\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState();\n\n  const [isAutoSubmit, setIsAutoSubmit] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(1);\n  const [totalTime, setTotalTime] = useState(1);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\n\n  const [hosts, setHosts] = useState([]);\n\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem(\"userData\") || \"{}\"),\n      localIps = localStorage.getItem(\"localIps\");\n    userData && setUserData(userData);\n\n    if (localIps) {\n      setHosts(localIps.split(\",\"));\n    }\n  }, [props]);\n\n  useEffect(() => {\n    hosts.length &&\n      axios\n        .post(`http://${hosts[0]}:5000/load-data`, { collection: \"Tests\" })\n        .then((result) => {\n          result.data.forEach((qn) => {\n            delete qn[\"_id\"];\n          });\n          const questionsObj = result.data.map((question) => {\n            if (question.title) {\n              const minutes = question.Hours * 60 + question.Minutes;\n              const seconds = minutes * 60 + question.Seconds;\n\n              // Set total time and time left only once, using the last question's time values\n              setTotalTime((prev) => seconds);\n              setTimeLeft((prev) => seconds);\n\n              // Do not include this question in the final array\n              return null;\n            } else {\n              // Return the question with a modified 'type'\n              return {\n                ...question,\n                type: question.Answer.length > 1 ? \"checkbox\" : \"radio\", // Multiple answers => checkbox, single answer => radio\n              };\n            }\n          });\n\n          setQuestions(questionsObj.filter((question) => question !== null));\n        });\n  }, [hosts]);\n\n  useEffect(() => {\n    if (questions.length) {\n      const intTimer = setInterval(() => {\n        setTimeLeft((prevTimeLeft) => {\n          if (prevTimeLeft <= -1) {\n            clearInterval(intTimer);\n            return 0;\n          }\n          return prevTimeLeft - 1;\n        });\n      }, 1000);\n\n      return () => clearInterval(intTimer);\n    }\n  }, [questions]);\n\n  useEffect(() => {\n    if (timeLeft === 0 && !isAutoSubmit) {\n      window.alert(\"Time Out!\\nYour test will be submitted in 10 secs\");\n      setTimeLeft(11);\n\n      setIsAutoSubmit(true);\n    }\n  }, [timeLeft]);\n  useEffect(() => {\n    if (isAutoSubmit) {\n      setTimeout(() => {\n        console.log(\"Quiz Submitted:\", selectedOptions);\n        alert(\"Quiz Submitted!\");\n        navigate(\"/\");\n      }, 10000);\n    }\n  }, [isAutoSubmit]);\n\n  const totalQuestions = questions.length;\n\n  const handleOptionSelect = (option, type) => {\n    const updatedSelections = [...highlightedOptions];\n\n    if (type === \"radio\") {\n      // Toggle selection for radio buttons\n      if (updatedSelections[currentQuestionIndex] === option) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\"; // Deselect if clicked again\n      } else {\n        updatedSelections[currentQuestionIndex] =\n          option !== undefined ? option : \"not-answered\";\n      }\n    } else if (type === \"checkbox\") {\n      const currentSelections = updatedSelections[currentQuestionIndex] || [];\n\n      // Toggle checkbox selection\n      if (currentSelections.includes(option)) {\n        updatedSelections[currentQuestionIndex] = currentSelections.filter(\n          (o) => o !== option\n        );\n      } else {\n        updatedSelections[currentQuestionIndex] = [\n          ...currentSelections,\n          option,\n        ];\n      }\n\n      // Check if any selections are made\n      if (updatedSelections[currentQuestionIndex].length === 0) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\"; // Mark as not-answered\n      } else if (\n        updatedSelections[currentQuestionIndex] === \"not-answered\" ||\n        updatedSelections[currentQuestionIndex] === \"skipped\"\n      ) {\n        updatedSelections[currentQuestionIndex] = []; // Clear \"not-answered\" status\n      }\n    }\n\n    // Update states\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n  };\n\n  const handleNextQuestion = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    // If no option is selected, mark as 'not-answered'\n    if (updatedSelections[currentQuestionIndex] === undefined) {\n      updatedSelections[currentQuestionIndex] = \"not-answered\";\n    }\n\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const handlePreviousQuestion = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    if (updatedSelections[currentQuestionIndex] === undefined) {\n      updatedSelections[currentQuestionIndex] = \"not-answered\";\n    }\n\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const handleSkip = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    updatedSelections[currentQuestionIndex] = \"skipped\";\n\n    setHighlightedOptions(updatedSelections);\n\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handleQuestionClick = (index) => {\n    const updatedSelections = [...highlightedOptions];\n\n    // If the question is neither answered nor skipped, mark it as not-answered\n    if (updatedSelections[index] === undefined) {\n      updatedSelections[index] = \"not-answered\";\n    }\n\n    setHighlightedOptions(updatedSelections);\n    setCurrentQuestionIndex(index);\n  };\n\n  const handleSubmit = () => {\n    if (window.confirm(\"Are you sure you want to start the test?\")) {\n      //console.log(\"Quiz Submitted:\", selectedOptions);\n      let correctAnswers = [];\n      questions.forEach((question) => {\n        if (!question[\"title\"]) {\n          if (question[\"Answer\"].length === 1) {\n            correctAnswers.push(question[\"Answer\"][0]);\n          } else {\n            correctAnswers.push(question[\"Answer\"]);\n          }\n        }\n      });\n      //console.log(correctAnswers);\n      correctAnswers.forEach((val, index) => {\n        if (correctAnswers[index] == selectedOptions[index]) {\n        }\n        console.log(correctAnswers[index], selectedOptions[index]);\n      });\n\n      alert(\"Quiz Submitted!\");\n\n      //navigate(\"/\");\n    }\n  };\n  const showProfile = (profileDetails) => {\n    const isExist = document.querySelector(\".profile-container\");\n    if (isExist) {\n      return;\n    }\n    const profileContainer = document.createElement(\"div\");\n    profileContainer.className = \"profile-container\";\n    const profileInfo = document.createElement(\"div\");\n    profileInfo.className = \"profile-info\";\n    Object.keys(profileDetails).map(async (detail) => {\n      const detailList = document.createElement(\"li\");\n      detailList.classList = \"detail\";\n      detailList.innerHTML = `<p><span>${detail}:</span>&nbsp;<span> ${profileDetails[detail]}</span></p>`;\n      profileInfo.appendChild(detailList);\n    });\n    profileContainer.appendChild(profileInfo);\n    document.body.appendChild(profileContainer);\n  };\n\n  useEffect(() => {\n    const bodyClick = (event) => {\n      if (event.target.closest(\"li.profile\")) {\n        return;\n      } else if (event.target.closest(\"div.profile-container\")) {\n        return;\n      }\n\n      const profileExist = document.querySelector(\".profile-container\");\n\n      if (profileExist) {\n        profileExist.remove();\n      }\n    };\n    document.body.addEventListener(\"click\", bodyClick);\n    return () => {\n      document.body.removeEventListener(\"click\", bodyClick);\n    };\n  }, []);\n\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedOption = highlightedOptions[currentQuestionIndex] || [];\n\n  const radius = 50;\n  const circumference = 2 * Math.PI * radius;\n\n  return (\n    <>\n      {/* Top Navigation Bar */}\n      <div>\n        <nav className=\"navbar\">\n          <div className=\"logo\">Quizzards</div>\n          <div className=\"nav-links\">\n            {/*{console.log(questions)}*/}\n            <span\n              onClick={() => {\n                navigate(\"/admin\");\n              }}\n            >\n              Home\n            </span>\n            <a href=\"#about\">About</a>\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://sanjaikumaran.online/contact/\"\n            >\n              Contact\n            </a>{\" \"}\n            <li\n              onClick={() => {\n                showProfile(userData);\n              }}\n              className=\"profile\"\n            >\n              {<CgProfile style={{ fontSize: \"1.5rem\" }} />}\n            </li>\n          </div>\n        </nav>\n      </div>\n\n      <div className=\"quiz-body\">\n        <div className=\"quiz-app\">\n          <div className=\"quiz-content\">\n            <div className=\"question-section\">\n              <h1>{currentQuestion?.Question}</h1>\n              <ul className=\"options\">\n                {currentQuestion?.Option.map((option, index) => (\n                  <li\n                    key={index}\n                    onClick={() =>\n                      handleOptionSelect(option, currentQuestion.type)\n                    }\n                    className={`\n                option \n                ${\n                  currentQuestion.type === \"radio\" && selectedOption === option\n                    ? \"selected\"\n                    : \"\"\n                }\n                ${\n                  currentQuestion.type === \"checkbox\" &&\n                  selectedOption.includes(option)\n                    ? \"selected\"\n                    : \"\"\n                }\n            `}\n                  >\n                    {currentQuestion?.type === \"radio\" ? (\n                      <label>\n                        <input\n                          type=\"radio\"\n                          name={`question-${currentQuestionIndex}`}\n                          value={option}\n                          checked={selectedOption === option} // Will reflect deselection\n                          onChange={() => handleOptionSelect(option, \"radio\")}\n                        />\n                        {option}\n                      </label>\n                    ) : (\n                      <label>\n                        <input\n                          type=\"checkbox\"\n                          name={`question-${currentQuestionIndex}`}\n                          value={option}\n                          checked={selectedOption.includes(option)}\n                          onChange={() =>\n                            handleOptionSelect(option, \"checkbox\")\n                          }\n                        />\n                        {option}\n                      </label>\n                    )}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"footer\">\n            {currentQuestionIndex !== 0 ? (\n              <button\n                onClick={handlePreviousQuestion}\n                disabled={currentQuestionIndex === 0}\n              >\n                Previous\n              </button>\n            ) : (\n              \"\"\n            )}\n            <button\n              onClick={\n                currentQuestionIndex !== totalQuestions - 1\n                  ? handleNextQuestion\n                  : handleSubmit\n              }\n              className={\n                currentQuestionIndex !== totalQuestions - 1\n                  ? \"\"\n                  : \"submit-button\"\n              }\n            >\n              {currentQuestionIndex !== totalQuestions - 1 ? \"Next\" : \"Submit\"}\n            </button>\n            {currentQuestionIndex !== totalQuestions - 1 && (\n              <button onClick={handleSkip}>Skip</button>\n            )}\n\n            <p>\n              Question {currentQuestionIndex + 1} of {totalQuestions}\n            </p>\n          </div>\n        </div>\n        <div>\n          {/* Timer Section */}\n          <div className=\"timer-section\">\n            <h1 className=\"header\">Timer</h1>\n            <div className=\"timer-container\">\n              <div className=\"timer-circle\">\n                <svg width=\"120\" height=\"120\">\n                  <circle\n                    r={radius}\n                    cx=\"60\"\n                    cy=\"60\"\n                    fill=\"none\"\n                    stroke=\"#e7e7e7\"\n                    strokeWidth=\"8\"\n                  ></circle>\n                  <circle\n                    r={radius}\n                    cx=\"60\"\n                    cy=\"60\"\n                    fill=\"none\"\n                    stroke=\"#007BFF\"\n                    strokeWidth=\"8\"\n                    strokeDasharray={circumference}\n                    strokeDashoffset={\n                      circumference - (timeLeft / totalTime) * circumference\n                    }\n                    style={{\n                      transition: \"stroke-dashoffset 1s linear\",\n                    }}\n                  ></circle>\n                </svg>\n                <div className=\"timer-text\">\n                  {Math.floor(timeLeft / 60)}m {timeLeft % 60}s\n                </div>\n              </div>\n              <div>Time Remaining</div>\n            </div>\n          </div>\n\n          {/* Question Number Section */}\n          <div className=\"question-number-container\">\n            <h1 className=\"header\">Questions List</h1>\n            <div className=\"grid-layout\">\n              {Array.from({ length: totalQuestions }, (_, i) => (\n                <div\n                  className={`question-number ${\n                    i === currentQuestionIndex ? \"current-question\" : \"\"\n                  } ${\n                    highlightedOptions[i] === \"skipped\"\n                      ? \"skipped\"\n                      : highlightedOptions[i] === \"not-answered\"\n                      ? \"not-answered\"\n                      : highlightedOptions[i] !== undefined\n                      ? \"answered\"\n                      : \"\"\n                  }`}\n                  key={i + 1}\n                  onClick={() => handleQuestionClick(i)} // Handle question click\n                >\n                  {i + 1}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}