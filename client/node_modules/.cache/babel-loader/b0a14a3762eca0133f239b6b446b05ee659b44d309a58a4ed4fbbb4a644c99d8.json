{"ast":null,"code":"var _jsxFileName = \"/home/sk/Documents/quiz-app/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/Quiz.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  initialTime,\n  questions = []\n}) => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(initialTime); // Initial time from DB\n  const [totalTime, setTotalTime] = useState(initialTime); // Also store total time\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0); // Index to track the current question\n  const [selectedOptions, setSelectedOptions] = useState([]); // Store selected options for each question\n  const [highlightedOption, setHighlightedOption] = useState(null); // Store highlighted option for the current question\n\n  const totalQuestions = questions.length; // Total number of questions\n\n  // Timer logic, decrements timeLeft every second\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer); // Clear the timer on component unmount\n    }\n  }, [timeLeft]);\n\n  // Handle option selection\n  // Handle option selection\n  const handleOptionSelect = option => {\n    const currentQuestion = questions[currentQuestionIndex];\n\n    // Highlight the selected option\n    setHighlightedOption(option);\n    if (currentQuestion.type === \"radio\") {\n      // For radio buttons, only one option is allowed\n      const updatedSelections = [...selectedOptions];\n      updatedSelections[currentQuestionIndex] = option; // Save selected option\n      setSelectedOptions(updatedSelections);\n    } else if (currentQuestion.type === \"checkbox\") {\n      // For checkboxes, toggle the option in the selected array\n      const updatedSelections = [...selectedOptions];\n      const currentSelections = updatedSelections[currentQuestionIndex] || [];\n      if (currentSelections.includes(option)) {\n        // Remove if already selected\n        updatedSelections[currentQuestionIndex] = currentSelections.filter(o => o !== option);\n      } else {\n        // Add if not selected\n        updatedSelections[currentQuestionIndex] = [...currentSelections, option];\n      }\n      setSelectedOptions(updatedSelections);\n    }\n  };\n\n  // Go to the next question\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < totalQuestions - 1) {\n      const updatedSelections = [...selectedOptions];\n      updatedSelections[currentQuestionIndex] = highlightedOption; // Save highlighted option to selected options\n      setSelectedOptions(updatedSelections);\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1); // Go to the next question\n      setHighlightedOption(null); // Clear highlighted option\n    }\n  };\n\n  // Go to the previous question\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      const updatedSelections = [...selectedOptions];\n      updatedSelections[currentQuestionIndex] = highlightedOption; // Save highlighted option to selected options\n      setSelectedOptions(updatedSelections);\n      setCurrentQuestionIndex(prevIndex => prevIndex - 1); // Go to the previous question\n      setHighlightedOption(null); // Clear highlighted option\n    }\n  };\n\n  // Handle quiz submission\n  const handleSubmit = () => {\n    console.log(\"Quiz Submitted:\", selectedOptions);\n    alert(\"Quiz Submitted!\");\n  };\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedOption = selectedOptions[currentQuestionIndex] || [];\n  const radius = 50; // Radius of the circle\n  const circumference = 2 * Math.PI * radius; // Circumference of the circle\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: \"Company Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#home\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#about\",\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#contact\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-app\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"options\",\n              children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleOptionSelect(option),\n                className: `option ${highlightedOption === option ? \"selected\" : \"\"}`,\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: currentQuestion.type,\n                    name: `question-${currentQuestionIndex}`,\n                    value: option,\n                    checked: selectedOption === option,\n                    readOnly: true // Prevent checking directly on input\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 23\n                  }, this), option]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePreviousQuestion,\n            disabled: currentQuestionIndex === 0,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), currentQuestionIndex < totalQuestions - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextQuestion,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question \", currentQuestionIndex + 1, \" of \", totalQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer-circle\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"120\",\n              height: \"120\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                r: radius,\n                cx: \"60\",\n                cy: \"60\",\n                fill: \"none\",\n                stroke: \"#e7e7e7\",\n                strokeWidth: \"8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                r: radius,\n                cx: \"60\",\n                cy: \"60\",\n                fill: \"none\",\n                stroke: \"#007BFF\",\n                strokeWidth: \"8\",\n                strokeDasharray: circumference,\n                strokeDashoffset: circumference - timeLeft / totalTime * circumference // Dynamic time calculation\n                ,\n                style: {\n                  transition: \"stroke-dashoffset 1s linear\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer-text\",\n              children: [Math.floor(timeLeft / 60), \"m \", timeLeft % 60, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Time Remaining\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-number-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Questions List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-layout\",\n            children: Array.from({\n              length: totalQuestions\n            }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `question-number ${selectedOptions[i] != undefined ? \"selected\" : \"\"}`,\n              children: i + 1\n            }, i + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Quiz, \"0AYwXrhIH1CtFzp4sYjKWnvcGWE=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","initialTime","questions","_s","timeLeft","setTimeLeft","totalTime","setTotalTime","currentQuestionIndex","setCurrentQuestionIndex","selectedOptions","setSelectedOptions","highlightedOption","setHighlightedOption","totalQuestions","length","timer","setTimeout","clearTimeout","handleOptionSelect","option","currentQuestion","type","updatedSelections","currentSelections","includes","filter","o","handleNextQuestion","prevIndex","handlePreviousQuestion","handleSubmit","console","log","alert","selectedOption","radius","circumference","Math","PI","children","className","fileName","_jsxFileName","lineNumber","columnNumber","href","question","options","map","index","onClick","name","value","checked","readOnly","disabled","width","height","r","cx","cy","fill","stroke","strokeWidth","strokeDasharray","strokeDashoffset","style","transition","floor","Array","from","_","i","undefined","_c","$RefreshReg$"],"sources":["/home/sk/Documents/quiz-app/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/Quiz.css\";\n\nconst Quiz = ({ initialTime, questions = [] }) => {\n  const [timeLeft, setTimeLeft] = useState(initialTime); // Initial time from DB\n  const [totalTime, setTotalTime] = useState(initialTime); // Also store total time\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0); // Index to track the current question\n  const [selectedOptions, setSelectedOptions] = useState([]); // Store selected options for each question\n  const [highlightedOption, setHighlightedOption] = useState(null); // Store highlighted option for the current question\n\n  const totalQuestions = questions.length; // Total number of questions\n\n  // Timer logic, decrements timeLeft every second\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer); // Clear the timer on component unmount\n    }\n  }, [timeLeft]);\n\n  // Handle option selection\n  // Handle option selection\n  const handleOptionSelect = (option) => {\n    const currentQuestion = questions[currentQuestionIndex];\n\n    // Highlight the selected option\n    setHighlightedOption(option);\n\n    if (currentQuestion.type === \"radio\") {\n      // For radio buttons, only one option is allowed\n      const updatedSelections = [...selectedOptions];\n      updatedSelections[currentQuestionIndex] = option; // Save selected option\n      setSelectedOptions(updatedSelections);\n    } else if (currentQuestion.type === \"checkbox\") {\n      // For checkboxes, toggle the option in the selected array\n      const updatedSelections = [...selectedOptions];\n      const currentSelections = updatedSelections[currentQuestionIndex] || [];\n\n      if (currentSelections.includes(option)) {\n        // Remove if already selected\n        updatedSelections[currentQuestionIndex] = currentSelections.filter(\n          (o) => o !== option\n        );\n      } else {\n        // Add if not selected\n        updatedSelections[currentQuestionIndex] = [\n          ...currentSelections,\n          option,\n        ];\n      }\n      setSelectedOptions(updatedSelections);\n    }\n  };\n\n  // Go to the next question\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < totalQuestions - 1) {\n      const updatedSelections = [...selectedOptions];\n      updatedSelections[currentQuestionIndex] = highlightedOption; // Save highlighted option to selected options\n      setSelectedOptions(updatedSelections);\n      setCurrentQuestionIndex((prevIndex) => prevIndex + 1); // Go to the next question\n      setHighlightedOption(null); // Clear highlighted option\n    }\n  };\n\n  // Go to the previous question\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      const updatedSelections = [...selectedOptions];\n      updatedSelections[currentQuestionIndex] = highlightedOption; // Save highlighted option to selected options\n      setSelectedOptions(updatedSelections);\n      setCurrentQuestionIndex((prevIndex) => prevIndex - 1); // Go to the previous question\n      setHighlightedOption(null); // Clear highlighted option\n    }\n  };\n\n  // Handle quiz submission\n  const handleSubmit = () => {\n    console.log(\"Quiz Submitted:\", selectedOptions);\n    alert(\"Quiz Submitted!\");\n  };\n\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedOption = selectedOptions[currentQuestionIndex] || [];\n\n  const radius = 50; // Radius of the circle\n  const circumference = 2 * Math.PI * radius; // Circumference of the circle\n\n  return (\n    <>\n      {/* Top Navigation Bar */}\n      <div>\n        <nav className=\"navbar\">\n          <div className=\"logo\">Company Name</div>\n          <div className=\"nav-links\">\n            <a href=\"#home\">Home</a>\n            <a href=\"#about\">About</a>\n            <a href=\"#contact\">Contact</a>\n          </div>\n        </nav>\n      </div>\n      {/* Main Content Area */}\n      <div className=\"quiz-body\">\n        <div className=\"quiz-app\">\n          <div className=\"quiz-content\">\n            <div className=\"question-section\">\n              <h1>{currentQuestion?.question}</h1>\n              <ul className=\"options\">\n                {currentQuestion?.options.map((option, index) => (\n                  <li\n                    key={index}\n                    onClick={() => handleOptionSelect(option)}\n                    className={`option ${\n                      highlightedOption === option ? \"selected\" : \"\"\n                    }`}\n                  >\n                    <label>\n                      <input\n                        type={currentQuestion.type}\n                        name={`question-${currentQuestionIndex}`}\n                        value={option}\n                        checked={selectedOption === option}\n                        readOnly // Prevent checking directly on input\n                      />\n                      {option}\n                    </label>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n\n          {/* Navigation and Footer Section */}\n          <div className=\"footer\">\n            <button\n              onClick={handlePreviousQuestion}\n              disabled={currentQuestionIndex === 0}\n            >\n              Previous\n            </button>\n            {currentQuestionIndex < totalQuestions - 1 ? (\n              <button onClick={handleNextQuestion}>Next</button>\n            ) : (\n              <button onClick={handleSubmit}>Submit</button>\n            )}\n            <p>\n              Question {currentQuestionIndex + 1} of {totalQuestions}\n            </p>\n          </div>\n        </div>\n        <div>\n          {/* Timer Section */}\n          <div className=\"timer-section\">\n            <div className=\"timer-circle\">\n              <svg width=\"120\" height=\"120\">\n                <circle\n                  r={radius}\n                  cx=\"60\"\n                  cy=\"60\"\n                  fill=\"none\"\n                  stroke=\"#e7e7e7\"\n                  strokeWidth=\"8\"\n                ></circle>\n                <circle\n                  r={radius}\n                  cx=\"60\"\n                  cy=\"60\"\n                  fill=\"none\"\n                  stroke=\"#007BFF\"\n                  strokeWidth=\"8\"\n                  strokeDasharray={circumference}\n                  strokeDashoffset={\n                    circumference - (timeLeft / totalTime) * circumference\n                  } // Dynamic time calculation\n                  style={{\n                    transition: \"stroke-dashoffset 1s linear\",\n                  }}\n                ></circle>\n              </svg>\n              <div className=\"timer-text\">\n                {Math.floor(timeLeft / 60)}m {timeLeft % 60}s\n              </div>\n            </div>\n            <div>Time Remaining</div>\n          </div>\n          {/* Question Number Section */}\n          <div className=\"question-number-container\">\n            <h1>Questions List</h1>\n            <div className=\"grid-layout\">\n              {Array.from({ length: totalQuestions }, (_, i) => (\n                <div\n                  className={`question-number ${\n                    selectedOptions[i] != undefined ? \"selected\" : \"\"\n                  }`}\n                  key={i + 1}\n                >\n                  {i + 1}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}