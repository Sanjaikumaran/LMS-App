{"ast":null,"code":"var _jsxFileName = \"/home/sk/Documents/quiz-app/client/src/pages/components.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/components.css\";\nimport axios from \"axios\";\nimport { CgProfile } from \"react-icons/cg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navbar = props => {\n  _s();\n  const [userData, setUserData] = useState();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem(\"userData\") || \"{}\");\n    userData && setUserData(userData);\n  }, []);\n  const showProfile = profileDetails => {\n    const isExist = document.querySelector(\".profile-container\");\n    if (isExist) {\n      return;\n    }\n    const profileContainer = document.createElement(\"div\");\n    profileContainer.className = \"profile-container\";\n    const profileInfo = document.createElement(\"div\");\n    profileInfo.className = \"profile-info\";\n    Object.keys(profileDetails).map(async detail => {\n      const detailList = document.createElement(\"li\");\n      detailList.classList = \"detail\";\n      detailList.innerHTML = `<p><span>${detail}:</span>&nbsp;<span> ${profileDetails[detail]}</span></p>`;\n      profileInfo.appendChild(detailList);\n    });\n    profileContainer.appendChild(profileInfo);\n    document.body.appendChild(profileContainer);\n  };\n  useEffect(() => {\n    const bodyClick = event => {\n      if (event.target.closest(\"li.profile\")) {\n        return;\n      } else if (event.target.closest(\"div.profile-container\")) {\n        return;\n      }\n      const profileExist = document.querySelector(\".profile-container\");\n      if (profileExist) {\n        profileExist.remove();\n      }\n    };\n    document.body.addEventListener(\"click\", bodyClick);\n    return () => {\n      document.body.removeEventListener(\"click\", bodyClick);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              margin: 0\n            },\n            children: \"Quizzards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#home\",\n            onClick: () => {\n              navigate(\"/admin\");\n            },\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#about\",\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            href: \"https://sanjaikumaran.online/contact/\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), !props.page && /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              showProfile(userData);\n            },\n            className: \"profile\",\n            children: /*#__PURE__*/_jsxDEV(CgProfile, {\n              style: {\n                fontSize: \"1.5rem\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Navbar, \"XSW88lFJy9xoqYMoYqRL+JobCIc=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nconst Response = (buttons, response) => {\n  return response === buttons[0] ? true : false;\n};\n_c2 = Response;\nconst Modal = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: props.modalType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: props.modalMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: props.buttons.map((button, index) => {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => props.response(button),\n              children: button\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c3 = Modal;\nconst MessageBox = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      style: {\n        color: \"red\"\n      },\n      children: props.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c4 = MessageBox;\nconst handleApiCall = async props => {\n  const localIps = localStorage.getItem(\"localIps\").split(\",\");\n  try {\n    return await axios.post(`http://${localIps[0]}:5000/${props.API}`, {\n      data: props.data\n    }).then(result => {\n      if (result.status === 200) {\n        return {\n          data: result.data,\n          flag: true\n        };\n      }\n    }).catch(error => {\n      return {\n        error: error.response.data.message,\n        flag: false\n      };\n    });\n  } catch (error) {\n    return {\n      error: error.message,\n      flag: false\n    };\n  }\n};\nconst ModuleCard = props => {\n  _s2();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"card-header\",\n      children: props.header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.imageSrc,\n          alt: props.altText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(props.navigateTo),\n        type: \"button\",\n        children: \"Open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s2(ModuleCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c5 = ModuleCard;\nconst DataTableManagement = props => {\n  _s3();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalOptions, setModalOptions] = useState();\n  const [isFormModalOpen, setIsFormModalOpen] = useState(false);\n  const [tableColumns, setTableColumns] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [isSelectable, setIsSelectable] = useState(false);\n  const [selectedRows, setSelectedRows] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  async function fetchData() {\n    try {\n      const response = await handleApiCall({\n        API: \"load-data\",\n        data: {\n          collection: \"Users\"\n        }\n      });\n      if (response.flag) {\n        response.data.forEach(value => {\n          delete value[\"_id\"];\n        });\n        if (response.data.length > 0) {\n          setTableColumns(Object.keys(response.data[0]));\n          setTableData(response.data);\n        } else {\n          setTableColumns([]);\n          setTableData([]);\n          setModalOptions({\n            type: \"Info\",\n            message: \"No data available.\",\n            buttons: [\"Ok\"],\n            responseFunc: () => setIsModalOpen(false)\n          });\n          setIsModalOpen(true);\n        }\n      } else {\n        setModalOptions({\n          type: \"Error\",\n          message: response.error,\n          buttons: [\"Retry\", \"Ok\"],\n          responseFunc: button => {\n            if (button === \"Retry\") {\n              fetchData();\n            }\n            setIsModalOpen(false);\n          }\n        });\n        setIsModalOpen(true);\n      }\n    } catch (error) {\n      setModalOptions({\n        type: \"Error\",\n        message: `Uncaught error: ${error.message}`,\n        buttons: [\"Retry\", \"Ok\"],\n        responseFunc: button => {\n          if (button === \"Retry\") {\n            fetchData();\n          }\n          setIsModalOpen(false);\n        }\n      });\n      setIsModalOpen(true);\n    }\n  }\n  const fileUpload = fetchData => {\n    const file = document.querySelector(\"#students-list\");\n    if (!file.files[0]) return;\n    const reader = new FileReader();\n    reader.readAsText(file.files[0]);\n    reader.onload = async () => {\n      try {\n        const response = await handleApiCall({\n          API: \"Upload-data\",\n          data: reader.result\n        });\n        if (response.flag) {\n          fetchData();\n          setModalOptions({\n            type: \"Info\",\n            message: \"Data Uploaded Successfully!\",\n            buttons: [\"Ok\"],\n            responseFunc: button => {\n              if (button === \"Ok\") {\n                file.value = \"\";\n                setIsModalOpen(false);\n              }\n            }\n          });\n        } else {\n          setModalOptions({\n            type: \"Error\",\n            message: response.error,\n            buttons: [\"Retry\", \"Ok\"],\n            responseFunc: button => {\n              if (button === \"Retry\") {\n                fileUpload(fetchData); // Retry with the same callback\n              } else {\n                file.value = \"\";\n                setIsModalOpen(false);\n              }\n            }\n          });\n        }\n      } catch (error) {\n        setModalOptions({\n          type: \"Error\",\n          message: `Uncaught error: ${error.message}`,\n          buttons: [\"Retry\", \"Ok\"],\n          responseFunc: button => {\n            if (button === \"Retry\") {\n              fileUpload(fetchData);\n            } else {\n              file.value = \"\";\n              setIsModalOpen(false);\n            }\n          }\n        });\n      } finally {\n        setIsModalOpen(true);\n      }\n    };\n  };\n  const addNew = () => {\n    if (isFormModalOpen) return;\n    setIsFormModalOpen(true);\n\n    // Create overlay and modal elements\n    const overlay = document.createElement(\"div\");\n    overlay.className = \"overlay\";\n    document.body.appendChild(overlay);\n    const modalContainer = document.createElement(\"div\");\n    modalContainer.className = \"modal-container\";\n    const heading = document.createElement(\"h1\");\n    heading.innerText = \"Add New User\";\n    modalContainer.appendChild(heading);\n\n    // Create input fields for each column\n    const inputs = {};\n    tableColumns.forEach(column => {\n      const inputField = document.createElement(\"input\");\n      inputField.className = column;\n      inputField.placeholder = column;\n      modalContainer.appendChild(inputField);\n      inputs[column] = inputField;\n    });\n\n    // Save button logic\n    const saveButton = document.createElement(\"button\");\n    saveButton.innerText = \"Save\";\n    saveButton.onclick = async () => {\n      const data = {};\n      tableColumns.forEach(column => {\n        data[column] = inputs[column].value;\n      });\n      try {\n        const response = await handleApiCall({\n          API: \"insert-data\",\n          data: {\n            data,\n            collection: \"Users\"\n          }\n        });\n        if (response.flag) {\n          setTableData([...tableData, data]);\n          setModalOptions({\n            type: \"Info\",\n            message: \"Data Inserted successfully!\",\n            buttons: [\"Ok\"],\n            responseFunc: () => {\n              setIsModalOpen(false);\n            }\n          });\n        } else {\n          setModalOptions({\n            type: \"Error\",\n            message: response.error,\n            buttons: [\"Retry\", \"Ok\"],\n            responseFunc: async button => {\n              if (button === \"Retry\") await saveButton.onclick();\n              setIsModalOpen(false);\n            }\n          });\n        }\n      } catch (error) {\n        setModalOptions({\n          type: \"Uncaught Error\",\n          message: error.message,\n          buttons: [\"Retry\", \"Ok\"],\n          responseFunc: async button => {\n            if (button === \"Retry\") await saveButton.onclick();\n            setIsModalOpen(false);\n          }\n        });\n      } finally {\n        setIsModalOpen(true);\n      }\n      closeModal();\n    };\n    const closeButton = document.createElement(\"button\");\n    closeButton.innerText = \"Close\";\n    closeButton.onclick = closeModal;\n    modalContainer.appendChild(saveButton);\n    modalContainer.appendChild(closeButton);\n    document.body.appendChild(modalContainer);\n    function closeModal() {\n      isFormModalOpen && setIsFormModalOpen(false);\n      modalContainer.remove();\n      overlay.remove();\n    }\n  };\n  const remove = async () => {\n    if (!isSelectable) {\n      setIsSelectable(true);\n      return;\n    }\n    if (selectedRows.length === 0) return;\n    const filteredData = tableData.filter(row => !selectedRows.includes(row));\n    setTableData(filteredData);\n    try {\n      const response = await handleApiCall({\n        API: \"delete-data\",\n        data: {\n          collection: \"Users\",\n          data: selectedRows.map(row => row.Contact)\n        }\n      });\n      if (response.flag) {\n        setModalOptions({\n          type: \"Info\",\n          message: `${response.data.deletedCount} ${response.data.message}`,\n          buttons: [\"Ok\"],\n          responseFunc: () => {\n            setIsModalOpen(false);\n            setSelectedRows([]);\n            setIsSelectable(false);\n          }\n        });\n      } else {\n        setModalOptions({\n          type: \"Error\",\n          message: response.error,\n          buttons: [\"Retry\", \"Ok\"],\n          responseFunc: button => {\n            if (button === \"Retry\") {\n              remove();\n            } else {\n              setIsModalOpen(false);\n              setSelectedRows([]);\n              setIsSelectable(false);\n            }\n          }\n        });\n      }\n    } catch (error) {\n      setModalOptions({\n        type: \"Uncaught Error\",\n        message: error.message,\n        buttons: [\"Retry\", \"Ok\"],\n        responseFunc: button => {\n          if (button === \"Retry\") {\n            remove();\n          } else {\n            setIsModalOpen(false);\n            setSelectedRows([]);\n            setIsSelectable(false);\n          }\n        }\n      });\n    } finally {\n      setIsModalOpen(true);\n    }\n  };\n  const handleRowSelected = state => {\n    setSelectedRows(state.selectedRows);\n  };\n  const columns = [{\n    name: \"S.No\",\n    selector: (row, index) => index + 1,\n    sortable: true,\n    width: \"70px\"\n  }, ...tableColumns.map(column => ({\n    name: column,\n    selector: row => row[column],\n    sortable: true\n  }))];\n  const data = tableData;\n  const customStyles = {\n    rows: {\n      style: {\n        maxHeight: \"72px\"\n      }\n    },\n    headCells: {\n      style: {\n        color: \"white\",\n        fontSize: \"larger\",\n        fontWeight: \"bold\",\n        backgroundColor: \"#007bff\",\n        paddingLeft: \"8px\",\n        paddingRight: \"8px\"\n      }\n    },\n    cells: {\n      style: {\n        paddingLeft: \"8px\",\n        paddingRight: \"8px\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"students-action-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-flex\",\n          textAlign: \"start\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginLeft: \"5px\",\n            marginBottom: \"5px\"\n          },\n          children: \"Upload Students List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"student-list\",\n          id: \"students-list\",\n          type: \"file\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => fileUpload(fetchData),\n          className: \"upload-button\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addNew,\n          className: \"upload-button\",\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: remove,\n          className: \"upload-button\",\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"datatable\",\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        columns: columns,\n        data: data,\n        highlightOnHover: true,\n        striped: true,\n        fixedHeaderScrollHeight: \"80vh\",\n        defaultSortFieldId: 1,\n        customStyles: customStyles,\n        responsive: true,\n        fixedHeader: true,\n        selectableRows: isSelectable,\n        onSelectedRowsChange: handleRowSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      modalType: modalOptions.type || \"Info\",\n      modalMessage: modalOptions.message || \"An unexpected issue occurred.\",\n      buttons: modalOptions.buttons || [\"Ok\"],\n      response: modalOptions.responseFunc || (() => setIsModalOpen(false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n// eslint-disable-next-line import/no-anonymous-default-export\n_s3(DataTableManagement, \"mIOkUokXlSXMqPVnPgN48nbA3xE=\");\n_c6 = DataTableManagement;\nexport default {\n  Navbar,\n  Modal,\n  Response,\n  MessageBox,\n  handleApiCall,\n  ModuleCard,\n  DataTableManagement\n};\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"Response\");\n$RefreshReg$(_c3, \"Modal\");\n$RefreshReg$(_c4, \"MessageBox\");\n$RefreshReg$(_c5, \"ModuleCard\");\n$RefreshReg$(_c6, \"DataTableManagement\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","CgProfile","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","props","_s","userData","setUserData","navigate","JSON","parse","localStorage","getItem","showProfile","profileDetails","isExist","document","querySelector","profileContainer","createElement","className","profileInfo","Object","keys","map","detail","detailList","classList","innerHTML","appendChild","body","bodyClick","event","target","closest","profileExist","remove","addEventListener","removeEventListener","children","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","rel","page","fontSize","_c","Response","buttons","response","_c2","Modal","modalType","modalMessage","button","index","_c3","MessageBox","color","message","_c4","handleApiCall","localIps","split","post","API","data","then","result","status","flag","catch","error","ModuleCard","_s2","header","src","imageSrc","alt","altText","navigateTo","type","_c5","DataTableManagement","_s3","isModalOpen","setIsModalOpen","modalOptions","setModalOptions","isFormModalOpen","setIsFormModalOpen","tableColumns","setTableColumns","tableData","setTableData","isSelectable","setIsSelectable","selectedRows","setSelectedRows","fetchData","collection","forEach","value","length","responseFunc","fileUpload","file","files","reader","FileReader","readAsText","onload","addNew","overlay","modalContainer","heading","innerText","inputs","column","inputField","placeholder","saveButton","onclick","closeModal","closeButton","filteredData","filter","row","includes","Contact","deletedCount","handleRowSelected","state","columns","name","selector","sortable","width","customStyles","rows","maxHeight","headCells","fontWeight","backgroundColor","paddingLeft","paddingRight","cells","display","textAlign","flexDirection","marginLeft","marginBottom","id","required","DataTable","highlightOnHover","striped","fixedHeaderScrollHeight","defaultSortFieldId","responsive","fixedHeader","selectableRows","onSelectedRowsChange","_c6","$RefreshReg$"],"sources":["/home/sk/Documents/quiz-app/client/src/pages/components.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/components.css\";\nimport axios from \"axios\";\nimport { CgProfile } from \"react-icons/cg\";\n\nconst Navbar = (props) => {\n  const [userData, setUserData] = useState();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem(\"userData\") || \"{}\");\n    userData && setUserData(userData);\n  }, []);\n  const showProfile = (profileDetails) => {\n    const isExist = document.querySelector(\".profile-container\");\n    if (isExist) {\n      return;\n    }\n    const profileContainer = document.createElement(\"div\");\n    profileContainer.className = \"profile-container\";\n    const profileInfo = document.createElement(\"div\");\n    profileInfo.className = \"profile-info\";\n    Object.keys(profileDetails).map(async (detail) => {\n      const detailList = document.createElement(\"li\");\n      detailList.classList = \"detail\";\n      detailList.innerHTML = `<p><span>${detail}:</span>&nbsp;<span> ${profileDetails[detail]}</span></p>`;\n      profileInfo.appendChild(detailList);\n    });\n    profileContainer.appendChild(profileInfo);\n    document.body.appendChild(profileContainer);\n  };\n\n  useEffect(() => {\n    const bodyClick = (event) => {\n      if (event.target.closest(\"li.profile\")) {\n        return;\n      } else if (event.target.closest(\"div.profile-container\")) {\n        return;\n      }\n\n      const profileExist = document.querySelector(\".profile-container\");\n\n      if (profileExist) {\n        profileExist.remove();\n      }\n    };\n    document.body.addEventListener(\"click\", bodyClick);\n    return () => {\n      document.body.removeEventListener(\"click\", bodyClick);\n    };\n  }, []);\n  return (\n    <>\n      {/*Top Navigation Bar*/}\n      <div>\n        <nav className=\"navbar\">\n          <div className=\"logo\">\n            <h1 style={{ margin: 0 }}>Quizzards</h1>\n          </div>\n          <div className=\"nav-links\">\n            <a\n              href=\"#home\"\n              onClick={() => {\n                navigate(\"/admin\");\n              }}\n            >\n              Home\n            </a>\n            <a href=\"#about\">About</a>\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://sanjaikumaran.online/contact/\"\n            >\n              Contact\n            </a>\n            {!props.page && (\n              <li\n                onClick={() => {\n                  showProfile(userData);\n                }}\n                className=\"profile\"\n              >\n                <CgProfile style={{ fontSize: \"1.5rem\" }} />\n              </li>\n            )}\n          </div>\n        </nav>\n      </div>\n    </>\n  );\n};\nconst Response = (buttons, response) => {\n  return response === buttons[0] ? true : false;\n};\nconst Modal = (props) => {\n  return (\n    <>\n      <div className=\"modal-background\">\n        <div className=\"modal-container\">\n          <h1>{props.modalType}</h1>\n          <div className=\"modal-body\">\n            <h3>{props.modalMessage}</h3>\n          </div>\n          <div className=\"modal-buttons\">\n            {props.buttons.map((button, index) => {\n              return (\n                <button key={index} onClick={() => props.response(button)}>\n                  {button}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nconst MessageBox = (props) => {\n  return (\n    <>\n      <div className=\"error-message\" style={{ color: \"red\" }}>\n        {props.message}\n      </div>\n    </>\n  );\n};\nconst handleApiCall = async (props) => {\n  const localIps = localStorage.getItem(\"localIps\").split(\",\");\n\n  try {\n    return await axios\n      .post(`http://${localIps[0]}:5000/${props.API}`, {\n        data: props.data,\n      })\n      .then((result) => {\n        if (result.status === 200) {\n          return { data: result.data, flag: true };\n        }\n      })\n      .catch((error) => {\n        return { error: error.response.data.message, flag: false };\n      });\n  } catch (error) {\n    return { error: error.message, flag: false };\n  }\n};\n\nconst ModuleCard = (props) => {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"card-container\">\n      <h1 className=\"card-header\">{props.header}</h1>\n      <div className=\"card-body\">\n        <div>\n          <img src={props.imageSrc} alt={props.altText} />\n        </div>\n        <button onClick={() => navigate(props.navigateTo)} type=\"button\">\n          Open\n        </button>\n      </div>\n    </div>\n  );\n};\nconst DataTableManagement = (props) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalOptions, setModalOptions] = useState();\n\n  const [isFormModalOpen, setIsFormModalOpen] = useState(false);\n\n  const [tableColumns, setTableColumns] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [isSelectable, setIsSelectable] = useState(false);\n  const [selectedRows, setSelectedRows] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  async function fetchData() {\n    try {\n      const response = await handleApiCall({\n        API: \"load-data\",\n        data: { collection: \"Users\" },\n      });\n\n      if (response.flag) {\n        response.data.forEach((value) => {\n          delete value[\"_id\"];\n        });\n\n        if (response.data.length > 0) {\n          setTableColumns(Object.keys(response.data[0]));\n          setTableData(response.data);\n        } else {\n          setTableColumns([]);\n          setTableData([]);\n          setModalOptions({\n            type: \"Info\",\n            message: \"No data available.\",\n            buttons: [\"Ok\"],\n            responseFunc: () => setIsModalOpen(false),\n          });\n          setIsModalOpen(true);\n        }\n      } else {\n        setModalOptions({\n          type: \"Error\",\n          message: response.error,\n          buttons: [\"Retry\", \"Ok\"],\n          responseFunc: (button) => {\n            if (button === \"Retry\") {\n              fetchData();\n            }\n            setIsModalOpen(false);\n          },\n        });\n        setIsModalOpen(true);\n      }\n    } catch (error) {\n      setModalOptions({\n        type: \"Error\",\n        message: `Uncaught error: ${error.message}`,\n        buttons: [\"Retry\", \"Ok\"],\n        responseFunc: (button) => {\n          if (button === \"Retry\") {\n            fetchData();\n          }\n          setIsModalOpen(false);\n        },\n      });\n      setIsModalOpen(true);\n    }\n  }\n\n  const fileUpload = (fetchData) => {\n    const file = document.querySelector(\"#students-list\");\n    if (!file.files[0]) return;\n\n    const reader = new FileReader();\n    reader.readAsText(file.files[0]);\n\n    reader.onload = async () => {\n      try {\n        const response = await handleApiCall({\n          API: \"Upload-data\",\n          data: reader.result,\n        });\n\n        if (response.flag) {\n          fetchData();\n          setModalOptions({\n            type: \"Info\",\n            message: \"Data Uploaded Successfully!\",\n            buttons: [\"Ok\"],\n            responseFunc: (button) => {\n              if (button === \"Ok\") {\n                file.value = \"\";\n                setIsModalOpen(false);\n              }\n            },\n          });\n        } else {\n          setModalOptions({\n            type: \"Error\",\n            message: response.error,\n            buttons: [\"Retry\", \"Ok\"],\n            responseFunc: (button) => {\n              if (button === \"Retry\") {\n                fileUpload(fetchData); // Retry with the same callback\n              } else {\n                file.value = \"\";\n                setIsModalOpen(false);\n              }\n            },\n          });\n        }\n      } catch (error) {\n        setModalOptions({\n          type: \"Error\",\n          message: `Uncaught error: ${error.message}`,\n          buttons: [\"Retry\", \"Ok\"],\n          responseFunc: (button) => {\n            if (button === \"Retry\") {\n              fileUpload(fetchData);\n            } else {\n              file.value = \"\";\n              setIsModalOpen(false);\n            }\n          },\n        });\n      } finally {\n        setIsModalOpen(true);\n      }\n    };\n  };\n\n  const addNew = () => {\n    if (isFormModalOpen) return;\n    setIsFormModalOpen(true);\n\n    // Create overlay and modal elements\n    const overlay = document.createElement(\"div\");\n    overlay.className = \"overlay\";\n    document.body.appendChild(overlay);\n\n    const modalContainer = document.createElement(\"div\");\n    modalContainer.className = \"modal-container\";\n\n    const heading = document.createElement(\"h1\");\n    heading.innerText = \"Add New User\";\n    modalContainer.appendChild(heading);\n\n    // Create input fields for each column\n    const inputs = {};\n    tableColumns.forEach((column) => {\n      const inputField = document.createElement(\"input\");\n      inputField.className = column;\n      inputField.placeholder = column;\n      modalContainer.appendChild(inputField);\n      inputs[column] = inputField;\n    });\n\n    // Save button logic\n    const saveButton = document.createElement(\"button\");\n    saveButton.innerText = \"Save\";\n    saveButton.onclick = async () => {\n      const data = {};\n      tableColumns.forEach((column) => {\n        data[column] = inputs[column].value;\n      });\n\n      try {\n        const response = await handleApiCall({\n          API: \"insert-data\",\n          data: { data, collection: \"Users\" },\n        });\n\n        if (response.flag) {\n          setTableData([...tableData, data]);\n          setModalOptions({\n            type: \"Info\",\n            message: \"Data Inserted successfully!\",\n            buttons: [\"Ok\"],\n            responseFunc: () => {\n              setIsModalOpen(false);\n            },\n          });\n        } else {\n          setModalOptions({\n            type: \"Error\",\n            message: response.error,\n            buttons: [\"Retry\", \"Ok\"],\n            responseFunc: async (button) => {\n              if (button === \"Retry\") await saveButton.onclick();\n              setIsModalOpen(false);\n            },\n          });\n        }\n      } catch (error) {\n        setModalOptions({\n          type: \"Uncaught Error\",\n          message: error.message,\n          buttons: [\"Retry\", \"Ok\"],\n          responseFunc: async (button) => {\n            if (button === \"Retry\") await saveButton.onclick();\n            setIsModalOpen(false);\n          },\n        });\n      } finally {\n        setIsModalOpen(true);\n      }\n\n      closeModal();\n    };\n\n    const closeButton = document.createElement(\"button\");\n    closeButton.innerText = \"Close\";\n    closeButton.onclick = closeModal;\n\n    modalContainer.appendChild(saveButton);\n    modalContainer.appendChild(closeButton);\n    document.body.appendChild(modalContainer);\n\n    function closeModal() {\n      isFormModalOpen && setIsFormModalOpen(false);\n      modalContainer.remove();\n      overlay.remove();\n    }\n  };\n\n  const remove = async () => {\n    if (!isSelectable) {\n      setIsSelectable(true);\n      return;\n    }\n\n    if (selectedRows.length === 0) return;\n\n    const filteredData = tableData.filter((row) => !selectedRows.includes(row));\n    setTableData(filteredData);\n\n    try {\n      const response = await handleApiCall({\n        API: \"delete-data\",\n        data: {\n          collection: \"Users\",\n          data: selectedRows.map((row) => row.Contact),\n        },\n      });\n\n      if (response.flag) {\n        setModalOptions({\n          type: \"Info\",\n          message: `${response.data.deletedCount} ${response.data.message}`,\n          buttons: [\"Ok\"],\n          responseFunc: () => {\n            setIsModalOpen(false);\n            setSelectedRows([]);\n            setIsSelectable(false);\n          },\n        });\n      } else {\n        setModalOptions({\n          type: \"Error\",\n          message: response.error,\n          buttons: [\"Retry\", \"Ok\"],\n          responseFunc: (button) => {\n            if (button === \"Retry\") {\n              remove();\n            } else {\n              setIsModalOpen(false);\n              setSelectedRows([]);\n              setIsSelectable(false);\n            }\n          },\n        });\n      }\n    } catch (error) {\n      setModalOptions({\n        type: \"Uncaught Error\",\n        message: error.message,\n        buttons: [\"Retry\", \"Ok\"],\n        responseFunc: (button) => {\n          if (button === \"Retry\") {\n            remove();\n          } else {\n            setIsModalOpen(false);\n            setSelectedRows([]);\n            setIsSelectable(false);\n          }\n        },\n      });\n    } finally {\n      setIsModalOpen(true);\n    }\n  };\n\n  const handleRowSelected = (state) => {\n    setSelectedRows(state.selectedRows);\n  };\n\n  const columns = [\n    {\n      name: \"S.No\",\n      selector: (row, index) => index + 1,\n      sortable: true,\n      width: \"70px\",\n    },\n    ...tableColumns.map((column) => ({\n      name: column,\n      selector: (row) => row[column],\n      sortable: true,\n    })),\n  ];\n\n  const data = tableData;\n\n  const customStyles = {\n    rows: {\n      style: {\n        maxHeight: \"72px\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"white\",\n        fontSize: \"larger\",\n        fontWeight: \"bold\",\n        backgroundColor: \"#007bff\",\n        paddingLeft: \"8px\",\n        paddingRight: \"8px\",\n      },\n    },\n    cells: {\n      style: {\n        paddingLeft: \"8px\",\n        paddingRight: \"8px\",\n      },\n    },\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"students-action-div\">\n        <div\n          style={{\n            display: \"inline-flex\",\n            textAlign: \"start\",\n            flexDirection: \"column\",\n          }}\n        >\n          <label style={{ marginLeft: \"5px\", marginBottom: \"5px\" }}>\n            Upload Students List\n          </label>\n          <input name=\"student-list\" id=\"students-list\" type=\"file\" required />\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            onClick={() => fileUpload(fetchData)}\n            className=\"upload-button\"\n          >\n            Upload\n          </button>\n          <button type=\"button\" onClick={addNew} className=\"upload-button\">\n            Add New\n          </button>\n          <button type=\"button\" onClick={remove} className=\"upload-button\">\n            Remove\n          </button>\n        </div>\n      </div>\n      <div className=\"datatable\">\n        <DataTable\n          columns={columns}\n          data={data}\n          highlightOnHover\n          striped\n          fixedHeaderScrollHeight=\"80vh\"\n          defaultSortFieldId={1}\n          customStyles={customStyles}\n          responsive\n          fixedHeader\n          selectableRows={isSelectable}\n          onSelectedRowsChange={handleRowSelected}\n        />\n      </div>\n      {isModalOpen && (\n        <Modal\n          modalType={modalOptions.type || \"Info\"}\n          modalMessage={modalOptions.message || \"An unexpected issue occurred.\"}\n          buttons={modalOptions.buttons || [\"Ok\"]}\n          response={modalOptions.responseFunc || (() => setIsModalOpen(false))}\n        />\n      )}\n    </>\n  );\n};\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  Navbar,\n  Modal,\n  Response,\n  MessageBox,\n  handleApiCall,\n  ModuleCard,\n  DataTableManagement,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}