{"ast":null,"code":"var _jsxFileName = \"/home/sk/Documents/quiz-app/src/components/Quiz.js\",\n  _s = $RefreshSig$();\n// src/components/Quiz.js\n\nimport React, { useState } from \"react\";\nimport \"../styles/Quiz.css\"; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [result, setResult] = useState(\"\");\n  const questions = [{\n    question: \"What is the capital of France?\",\n    options: [\"Berlin\", \"Madrid\", \"Paris\"],\n    answer: \"Paris\"\n  }, {\n    question: \"Which planet is known as the Red Planet?\",\n    options: [\"Earth\", \"Mars\", \"Jupiter\"],\n    answer: \"Mars\"\n  }, {\n    question: 'Who wrote \"To Kill a Mockingbird\"?',\n    options: [\"Harper Lee\", \"J.K. Rowling\", \"Mark Twain\"],\n    answer: \"Harper Lee\"\n  }];\n  const handleAnswerSelect = option => {\n    setSelectedAnswer(option);\n    const currentQuestion = questions[currentQuestionIndex];\n    if (option === currentQuestion.answer) {\n      setResult(\"Correct!\");\n    } else {\n      setResult(\"Wrong answer. Try again!\");\n    }\n  };\n  const handleNextQuestion = () => {\n    setSelectedAnswer(null); // Reset the selected answer for the next question\n    setResult(\"\"); // Reset the result message\n    setCurrentQuestionIndex(prevIndex => Math.min(prevIndex + 1, questions.length - 1));\n  };\n  const handlePreviousQuestion = () => {\n    setSelectedAnswer(null); // Reset the selected answer for the previous question\n    setResult(\"\"); // Reset the result message\n    setCurrentQuestionIndex(prevIndex => Math.max(prevIndex - 1, 0));\n  };\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: `option-${index}` // Unique ID for each radio button\n          ,\n          name: \"quiz-options\" // Grouping for radio buttons\n          ,\n          value: option,\n          onChange: () => handleAnswerSelect(option),\n          checked: selectedAnswer === option // Check the selected answer\n          ,\n          disabled: selectedAnswer !== null // Disable after answering\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `option-${index}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"op\",\n            children: String.fromCharCode(65 + index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), \"  \", option, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)), selectedAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [currentQuestionIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousQuestion,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), currentQuestionIndex < questions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"Cm6uv+V9p915KsJzktVn2gfpBno=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz","_s","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","result","setResult","questions","question","options","answer","handleAnswerSelect","option","currentQuestion","handleNextQuestion","prevIndex","Math","min","length","handlePreviousQuestion","max","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","id","name","value","onChange","checked","disabled","htmlFor","String","fromCharCode","onClick","_c","$RefreshReg$"],"sources":["/home/sk/Documents/quiz-app/src/components/Quiz.js"],"sourcesContent":["// src/components/Quiz.js\n\nimport React, { useState } from \"react\";\nimport \"../styles/Quiz.css\"; // Import the CSS file\n\nconst Quiz = () => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [result, setResult] = useState(\"\");\n\n  const questions = [\n    {\n      question: \"What is the capital of France?\",\n      options: [\"Berlin\", \"Madrid\", \"Paris\"],\n      answer: \"Paris\",\n    },\n    {\n      question: \"Which planet is known as the Red Planet?\",\n      options: [\"Earth\", \"Mars\", \"Jupiter\"],\n      answer: \"Mars\",\n    },\n    {\n      question: 'Who wrote \"To Kill a Mockingbird\"?',\n      options: [\"Harper Lee\", \"J.K. Rowling\", \"Mark Twain\"],\n      answer: \"Harper Lee\",\n    },\n  ];\n\n  const handleAnswerSelect = (option) => {\n    setSelectedAnswer(option);\n    const currentQuestion = questions[currentQuestionIndex];\n    if (option === currentQuestion.answer) {\n      setResult(\"Correct!\");\n    } else {\n      setResult(\"Wrong answer. Try again!\");\n    }\n  };\n\n  const handleNextQuestion = () => {\n    setSelectedAnswer(null); // Reset the selected answer for the next question\n    setResult(\"\"); // Reset the result message\n    setCurrentQuestionIndex((prevIndex) => Math.min(prevIndex + 1, questions.length - 1));\n  };\n\n  const handlePreviousQuestion = () => {\n    setSelectedAnswer(null); // Reset the selected answer for the previous question\n    setResult(\"\"); // Reset the result message\n    setCurrentQuestionIndex((prevIndex) => Math.max(prevIndex - 1, 0));\n  };\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  return (\n    <div className=\"quiz-container\">\n      <h1>Quiz</h1>\n      <div>\n        <h3>{currentQuestion.question}</h3>\n        {currentQuestion.options.map((option, index) => (\n          <div key={option}>\n            <input\n              type=\"radio\"\n              id={`option-${index}`} // Unique ID for each radio button\n              name=\"quiz-options\" // Grouping for radio buttons\n              value={option}\n              onChange={() => handleAnswerSelect(option)}\n              checked={selectedAnswer === option} // Check the selected answer\n              disabled={selectedAnswer !== null} // Disable after answering\n            />\n            <label htmlFor={`option-${index}`}>\n              <span id=\"op\">{String.fromCharCode(65 + index)}</span>  {option} {/* A, B, C labels */}\n            </label>\n          </div>\n        ))}\n        {selectedAnswer && <p>{result}</p>}\n      </div>\n\n      <div className=\"navigation-buttons\">\n        {/* Conditionally render the Previous button */}\n        {currentQuestionIndex > 0 && (\n          <button onClick={handlePreviousQuestion}>Previous</button>\n        )}\n        {currentQuestionIndex < questions.length - 1 && (\n          <button onClick={handleNextQuestion}>Next</button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Quiz;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,SAAS,GAAG,CAChB;IACEC,QAAQ,EAAE,gCAAgC;IAC1CC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC;IACtCC,MAAM,EAAE;EACV,CAAC,EACD;IACEF,QAAQ,EAAE,0CAA0C;IACpDC,OAAO,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC;IACrCC,MAAM,EAAE;EACV,CAAC,EACD;IACEF,QAAQ,EAAE,oCAAoC;IAC9CC,OAAO,EAAE,CAAC,YAAY,EAAE,cAAc,EAAE,YAAY,CAAC;IACrDC,MAAM,EAAE;EACV,CAAC,CACF;EAED,MAAMC,kBAAkB,GAAIC,MAAM,IAAK;IACrCR,iBAAiB,CAACQ,MAAM,CAAC;IACzB,MAAMC,eAAe,GAAGN,SAAS,CAACN,oBAAoB,CAAC;IACvD,IAAIW,MAAM,KAAKC,eAAe,CAACH,MAAM,EAAE;MACrCJ,SAAS,CAAC,UAAU,CAAC;IACvB,CAAC,MAAM;MACLA,SAAS,CAAC,0BAA0B,CAAC;IACvC;EACF,CAAC;EAED,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC/BV,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;IACzBE,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACfJ,uBAAuB,CAAEa,SAAS,IAAKC,IAAI,CAACC,GAAG,CAACF,SAAS,GAAG,CAAC,EAAER,SAAS,CAACW,MAAM,GAAG,CAAC,CAAC,CAAC;EACvF,CAAC;EAED,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACnCf,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;IACzBE,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACfJ,uBAAuB,CAAEa,SAAS,IAAKC,IAAI,CAACI,GAAG,CAACL,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EACpE,CAAC;EAED,MAAMF,eAAe,GAAGN,SAAS,CAACN,oBAAoB,CAAC;EAEvD,oBACEH,OAAA;IAAKuB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BxB,OAAA;MAAAwB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACb5B,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,EAAKT,eAAe,CAACL;MAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAClCb,eAAe,CAACJ,OAAO,CAACkB,GAAG,CAAC,CAACf,MAAM,EAAEgB,KAAK,kBACzC9B,OAAA;QAAAwB,QAAA,gBACExB,OAAA;UACE+B,IAAI,EAAC,OAAO;UACZC,EAAE,EAAE,UAAUF,KAAK,EAAG,CAAC;UAAA;UACvBG,IAAI,EAAC,cAAc,CAAC;UAAA;UACpBC,KAAK,EAAEpB,MAAO;UACdqB,QAAQ,EAAEA,CAAA,KAAMtB,kBAAkB,CAACC,MAAM,CAAE;UAC3CsB,OAAO,EAAE/B,cAAc,KAAKS,MAAO,CAAC;UAAA;UACpCuB,QAAQ,EAAEhC,cAAc,KAAK,IAAK,CAAC;QAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACF5B,OAAA;UAAOsC,OAAO,EAAE,UAAUR,KAAK,EAAG;UAAAN,QAAA,gBAChCxB,OAAA;YAAMgC,EAAE,EAAC,IAAI;YAAAR,QAAA,EAAEe,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGV,KAAK;UAAC;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,MAAE,EAACd,MAAM,EAAC,GAAC;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC;MAAA,GAZAd,MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaX,CACN,CAAC,EACDvB,cAAc,iBAAIL,OAAA;QAAAwB,QAAA,EAAIjB;MAAM;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eAEN5B,OAAA;MAAKuB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAEhCrB,oBAAoB,GAAG,CAAC,iBACvBH,OAAA;QAAQyC,OAAO,EAAEpB,sBAAuB;QAAAG,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAC1D,EACAzB,oBAAoB,GAAGM,SAAS,CAACW,MAAM,GAAG,CAAC,iBAC1CpB,OAAA;QAAQyC,OAAO,EAAEzB,kBAAmB;QAAAQ,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAClD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAlFID,IAAI;AAAAyC,EAAA,GAAJzC,IAAI;AAoFV,eAAeA,IAAI;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}