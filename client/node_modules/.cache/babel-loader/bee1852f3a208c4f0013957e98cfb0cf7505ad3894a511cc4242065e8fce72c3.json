{"ast":null,"code":"var _jsxFileName = \"/home/sk/Documents/quiz-app/client/src/pages/Signin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/Signin.css\";\nimport components from \"./components\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Modal,\n  response,\n  MessageBox,\n  handleApiCall\n} = components;\nconst Signin = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [responseMessage, setResponseMessage] = useState(null);\n  const [userID, setUserID] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    const trimmedUserID = userID.trim();\n    const trimmedPassword = userPassword.trim();\n    if (!trimmedUserID || !trimmedPassword) {\n      if (!trimmedUserID && !trimmedPassword) {\n        setResponseMessage(\"Please Enter UserId & Password\");\n      } else if (!trimmedUserID) {\n        setResponseMessage(\"Please Enter UserId\");\n      } else {\n        setResponseMessage(\"Please Enter Password\");\n      }\n    } else {\n      try {\n        const response = await handleApiCall({\n          API: \"login\",\n          data: {\n            Id: trimmedUserID,\n            userPass: trimmedPassword\n          }\n        });\n        if (response && response.flag) {\n          sessionStorage.setItem(\"userLogged\", JSON.stringify({\n            flag: true,\n            userType: response.data.data.userType\n          }));\n          localStorage.setItem(\"userData\", JSON.stringify(response.data.data));\n          setResponseMessage(\"\");\n          setIsModalOpen(true);\n        } else {\n          setResponseMessage(response.error);\n        }\n      } catch (error) {\n        setResponseMessage(\"An error occurred. Please try again.\");\n        console.error(\"Login error:\", error);\n      }\n    }\n  };\n  const closeModal = button => {\n    if (response([\"Ok\"], button)) {\n      navigate(\"/instructions\");\n      setIsModalOpen(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"login-header\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"institution-name\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Jeppiaar University\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"user-id\",\n            children: \"User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"user-id\",\n            name: \"user-id\",\n            type: \"text\",\n            value: userID,\n            required: true,\n            onChange: e => {\n              setResponseMessage(false);\n              setUserID(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            value: userPassword,\n            required: true,\n            onChange: e => {\n              setResponseMessage(false);\n              setUserPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), responseMessage && /*#__PURE__*/_jsxDEV(MessageBox, {\n          message: responseMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      modalType: \"Info\",\n      modalMessage: \"Login Successful!\",\n      buttons: [\"Ok\"],\n      response: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Signin, \"X/ZfgmTqzOpSUHTq5X7h06b1fPA=\", false, function () {\n  return [useNavigate];\n});\n_c = Signin;\nexport default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","useState","useNavigate","components","jsxDEV","_jsxDEV","Fragment","_Fragment","Modal","response","MessageBox","handleApiCall","Signin","_s","isModalOpen","setIsModalOpen","responseMessage","setResponseMessage","userID","setUserID","userPassword","setUserPassword","navigate","handleLogin","trimmedUserID","trim","trimmedPassword","API","data","Id","userPass","flag","sessionStorage","setItem","JSON","stringify","userType","localStorage","error","console","closeModal","button","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","name","type","value","required","onChange","e","target","message","onClick","modalType","modalMessage","buttons","_c","$RefreshReg$"],"sources":["/home/sk/Documents/quiz-app/client/src/pages/Signin.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/Signin.css\";\nimport components from \"./components\";\nconst { Modal, response, MessageBox, handleApiCall } = components;\n\nconst Signin = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [responseMessage, setResponseMessage] = useState(null);\n  const [userID, setUserID] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const handleLogin = async () => {\n    const trimmedUserID = userID.trim();\n    const trimmedPassword = userPassword.trim();\n\n    if (!trimmedUserID || !trimmedPassword) {\n      if (!trimmedUserID && !trimmedPassword) {\n        setResponseMessage(\"Please Enter UserId & Password\");\n      } else if (!trimmedUserID) {\n        setResponseMessage(\"Please Enter UserId\");\n      } else {\n        setResponseMessage(\"Please Enter Password\");\n      }\n    } else {\n      try {\n        const response = await handleApiCall({\n          API: \"login\",\n          data: { Id: trimmedUserID, userPass: trimmedPassword },\n        });\n\n        if (response && response.flag) {\n          sessionStorage.setItem(\n            \"userLogged\",\n            JSON.stringify({\n              flag: true,\n              userType: response.data.data.userType,\n            })\n          );\n          localStorage.setItem(\"userData\", JSON.stringify(response.data.data));\n          setResponseMessage(\"\");\n          setIsModalOpen(true);\n        } else {\n          setResponseMessage(response.error);\n        }\n      } catch (error) {\n        setResponseMessage(\"An error occurred. Please try again.\");\n        console.error(\"Login error:\", error);\n      }\n    }\n  };\n\n  const closeModal = (button) => {\n    if (response([\"Ok\"], button)) {\n      navigate(\"/instructions\");\n      setIsModalOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"login-container\">\n        <h1 className=\"login-header\">Login</h1>\n        <div className=\"login-form\">\n          <div className=\"institution-name\">\n            <h1>Jeppiaar University</h1>\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"user-id\">User ID</label>\n            <input\n              id=\"user-id\"\n              name=\"user-id\"\n              type=\"text\"\n              value={userID}\n              required\n              onChange={(e) => {\n                setResponseMessage(false);\n                setUserID(e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"input-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              value={userPassword}\n              required\n              onChange={(e) => {\n                setResponseMessage(false);\n                setUserPassword(e.target.value);\n              }}\n            />\n          </div>\n          {responseMessage && <MessageBox message={responseMessage} />}\n          <button type=\"button\" onClick={handleLogin}>\n            Login\n          </button>\n        </div>\n      </div>\n\n      {isModalOpen && (\n        <Modal\n          modalType=\"Info\"\n          modalMessage=\"Login Successful!\"\n          buttons={[\"Ok\"]}\n          response={closeModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Signin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}