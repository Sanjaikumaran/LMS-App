{"ast":null,"code":"var _jsxFileName = \"/home/sk/Documents/quiz-app/client/src/pages/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/Quiz.css\";\nimport components from \"./components\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Navbar,\n  Modal,\n  Response,\n  handleApiCall\n} = components;\nconst Quiz = props => {\n  _s();\n  const [isAutoSubmit, setIsAutoSubmit] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(1);\n  const [totalTime, setTotalTime] = useState(1);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\n  useEffect(() => {\n    handleApiCall({\n      API: \"load-data\",\n      data: {\n        collection: \"Tests\"\n      }\n    });\n  });\n  //useEffect(() => {\n  //  hosts.length &&\n  //    axios\n  //      .post(`http://${hosts[0]}:5000/load-data`, { collection: \"Tests\" })\n  //      .then((result) => {\n  //        result.data.forEach((qn) => {\n  //          delete qn[\"_id\"];\n  //        });\n  //        const questionsObj = result.data.map((question) => {\n  //          if (question.title) {\n  //            const minutes = question.Hours * 60 + question.Minutes;\n  //            const seconds = minutes * 60 + question.Seconds;\n\n  //            // Set total time and time left only once, using the last question's time values\n  //            setTotalTime((prev) => seconds);\n  //            setTimeLeft((prev) => seconds);\n\n  //            // Do not include this question in the final array\n  //            return null;\n  //          } else {\n  //            // Return the question with a modified 'type'\n  //            return {\n  //              ...question,\n  //              type: question.Answer.length > 1 ? \"checkbox\" : \"radio\", // Multiple answers => checkbox, single answer => radio\n  //            };\n  //          }\n  //        });\n\n  //        setQuestions(questionsObj.filter((question) => question !== null));\n  //      });\n  //}, [hosts]);\n\n  useEffect(() => {\n    if (questions.length) {\n      const intTimer = setInterval(() => {\n        setTimeLeft(prevTimeLeft => {\n          if (prevTimeLeft <= -1) {\n            clearInterval(intTimer);\n            return 0;\n          }\n          return prevTimeLeft - 1;\n        });\n      }, 1000);\n      return () => clearInterval(intTimer);\n    }\n  }, [questions]);\n  useEffect(() => {\n    if (timeLeft === 0 && !isAutoSubmit) {\n      window.alert(\"Time Out!\\nYour test will be submitted in 10 secs\");\n      setTimeLeft(11); // Prevents countdown from going negative (optional).\n      setIsAutoSubmit(true);\n    }\n  }, [timeLeft, isAutoSubmit]);\n  useEffect(() => {\n    if (isAutoSubmit) {\n      const timer = setTimeout(() => {\n        console.log(\"Quiz Submitted:\", selectedOptions);\n        alert(\"Quiz Submitted!\");\n      }, 10000);\n      return () => clearTimeout(timer); // Clean up the timer when the component unmounts.\n    }\n  }, [isAutoSubmit, selectedOptions]);\n  const totalQuestions = questions.length;\n  const handleOptionSelect = (option, type) => {\n    const updatedSelections = [...highlightedOptions];\n    if (type === \"radio\") {\n      // Toggle selection for radio buttons\n      if (updatedSelections[currentQuestionIndex] === option) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\"; // Deselect if clicked again\n      } else {\n        updatedSelections[currentQuestionIndex] = option !== undefined ? option : \"not-answered\";\n      }\n    } else if (type === \"checkbox\") {\n      const currentSelections = updatedSelections[currentQuestionIndex] || [];\n\n      // Toggle checkbox selection\n      if (currentSelections.includes(option)) {\n        updatedSelections[currentQuestionIndex] = currentSelections.filter(o => o !== option);\n      } else {\n        updatedSelections[currentQuestionIndex] = [...currentSelections, option];\n      }\n\n      // Check if any selections are made\n      if (updatedSelections[currentQuestionIndex].length === 0) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\"; // Mark as not-answered\n      } else if (updatedSelections[currentQuestionIndex] === \"not-answered\" || updatedSelections[currentQuestionIndex] === \"skipped\") {\n        updatedSelections[currentQuestionIndex] = []; // Clear \"not-answered\" status\n      }\n    }\n\n    // Update states\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n  };\n  const handleNextQuestion = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    // If no option is selected, mark as 'not-answered'\n    if (updatedSelections[currentQuestionIndex] === undefined) {\n      updatedSelections[currentQuestionIndex] = \"not-answered\";\n    }\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handlePreviousQuestion = () => {\n    const updatedSelections = [...highlightedOptions];\n    if (updatedSelections[currentQuestionIndex] === undefined) {\n      updatedSelections[currentQuestionIndex] = \"not-answered\";\n    }\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const handleSkip = () => {\n    const updatedSelections = [...highlightedOptions];\n    updatedSelections[currentQuestionIndex] = \"skipped\";\n    setHighlightedOptions(updatedSelections);\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handleQuestionClick = index => {\n    const updatedSelections = [...highlightedOptions];\n\n    // If the question is neither answered nor skipped, mark it as not-answered\n    if (updatedSelections[index] === undefined) {\n      updatedSelections[index] = \"not-answered\";\n    }\n    setHighlightedOptions(updatedSelections);\n    setCurrentQuestionIndex(index);\n  };\n  const handleSubmit = () => {\n    if (window.confirm(\"Are you sure you want to start the test?\")) {\n      let correctAnswers = [];\n      questions.forEach(question => {\n        if (!question[\"title\"]) {\n          correctAnswers.push(question[\"Answer\"].length === 1 ? question[\"Answer\"][0] : question[\"Answer\"]);\n        }\n      });\n      let score = 0;\n      correctAnswers.forEach((correctAnswer, index) => {\n        const userAnswer = selectedOptions[index];\n        if (Array.isArray(correctAnswer)) {\n          if (Array.isArray(userAnswer) && correctAnswer.length === userAnswer.length && correctAnswer.every(ans => userAnswer.includes(ans))) {\n            score++;\n            console.log(\"Correct (multiple choice):\", correctAnswer, userAnswer);\n          } else {\n            console.log(\"Incorrect (multiple choice):\", correctAnswer, userAnswer);\n          }\n        } else {\n          // Check single answer correctness\n          if (correctAnswer === userAnswer) {\n            score++;\n            console.log(\"Correct (single choice):\", correctAnswer, userAnswer);\n          } else {\n            console.log(\"Incorrect (single choice):\", correctAnswer, userAnswer);\n          }\n        }\n      });\n      axios.post(`http://${hosts[0]}:5000/update-data`, {\n        condition: {\n          Contact: userData.Contact\n        },\n        collection: \"Users\",\n        data: {\n          Answer: selectedOptions,\n          Score: score\n        }\n      });\n      alert(`Quiz Submitted! Your score is ${score} out of ${correctAnswers.length}`);\n\n      // Navigate to another page or show final results\n      // navigate(\"/\");\n    }\n  };\n  const showProfile = profileDetails => {\n    const isExist = document.querySelector(\".profile-container\");\n    if (isExist) {\n      return;\n    }\n    const profileContainer = document.createElement(\"div\");\n    profileContainer.className = \"profile-container\";\n    const profileInfo = document.createElement(\"div\");\n    profileInfo.className = \"profile-info\";\n    Object.keys(profileDetails).map(async detail => {\n      const detailList = document.createElement(\"li\");\n      detailList.classList = \"detail\";\n      detailList.innerHTML = `<p><span>${detail}:</span>&nbsp;<span> ${profileDetails[detail]}</span></p>`;\n      profileInfo.appendChild(detailList);\n    });\n    profileContainer.appendChild(profileInfo);\n    document.body.appendChild(profileContainer);\n  };\n  useEffect(() => {\n    const bodyClick = event => {\n      if (event.target.closest(\"li.profile\")) {\n        return;\n      } else if (event.target.closest(\"div.profile-container\")) {\n        return;\n      }\n      const profileExist = document.querySelector(\".profile-container\");\n      if (profileExist) {\n        profileExist.remove();\n      }\n    };\n    document.body.addEventListener(\"click\", bodyClick);\n    return () => {\n      document.body.removeEventListener(\"click\", bodyClick);\n    };\n  }, []);\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedOption = highlightedOptions[currentQuestionIndex] || [];\n  const radius = 50;\n  const circumference = 2 * Math.PI * radius;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-app\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.Question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"options\",\n              children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.Option.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleOptionSelect(option, currentQuestion.type),\n                className: `\n                option \n                ${currentQuestion.type === \"radio\" && selectedOption === option ? \"selected\" : \"\"}\n                ${currentQuestion.type === \"checkbox\" && selectedOption.includes(option) ? \"selected\" : \"\"}\n            `,\n                children: (currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.type) === \"radio\" ? /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: `question-${currentQuestionIndex}`,\n                    value: option,\n                    checked: selectedOption === option // Will reflect deselection\n                    ,\n                    onChange: () => handleOptionSelect(option, \"radio\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 25\n                  }, this), option]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: `question-${currentQuestionIndex}`,\n                    value: option,\n                    checked: selectedOption.includes(option),\n                    onChange: () => handleOptionSelect(option, \"checkbox\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 25\n                  }, this), option]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [currentQuestionIndex !== 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePreviousQuestion,\n            disabled: currentQuestionIndex === 0,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: currentQuestionIndex !== totalQuestions - 1 ? handleNextQuestion : handleSubmit,\n            className: currentQuestionIndex !== totalQuestions - 1 ? \"\" : \"submit-button\",\n            children: currentQuestionIndex !== totalQuestions - 1 ? \"Next\" : \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), currentQuestionIndex !== totalQuestions - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSkip,\n            children: \"Skip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question \", currentQuestionIndex + 1, \" of \", totalQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"header\",\n            children: \"Timer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer-circle\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"120\",\n                height: \"120\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  r: radius,\n                  cx: \"60\",\n                  cy: \"60\",\n                  fill: \"none\",\n                  stroke: \"#e7e7e7\",\n                  strokeWidth: \"8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                  r: radius,\n                  cx: \"60\",\n                  cy: \"60\",\n                  fill: \"none\",\n                  stroke: \"#007BFF\",\n                  strokeWidth: \"8\",\n                  strokeDasharray: circumference,\n                  strokeDashoffset: circumference - timeLeft / totalTime * circumference,\n                  style: {\n                    transition: \"stroke-dashoffset 1s linear\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timer-text\",\n                children: [Math.floor(timeLeft / 60), \"m \", timeLeft % 60, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Time Remaining\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-number-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"header\",\n            children: \"Questions List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-layout\",\n            children: Array.from({\n              length: totalQuestions\n            }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `question-number ${i === currentQuestionIndex ? \"current-question\" : \"\"} ${highlightedOptions[i] === \"skipped\" ? \"skipped\" : highlightedOptions[i] === \"not-answered\" ? \"not-answered\" : highlightedOptions[i] !== undefined ? \"answered\" : \"\"}`,\n              onClick: () => handleQuestionClick(i) // Handle question click\n              ,\n              children: i + 1\n            }, i + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Quiz, \"0opeKs3tQpgOYHqUafpVkvrQiGo=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","components","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","Modal","Response","handleApiCall","Quiz","props","_s","isAutoSubmit","setIsAutoSubmit","timeLeft","setTimeLeft","totalTime","setTotalTime","currentQuestionIndex","setCurrentQuestionIndex","selectedOptions","setSelectedOptions","questions","setQuestions","highlightedOptions","setHighlightedOptions","API","data","collection","length","intTimer","setInterval","prevTimeLeft","clearInterval","window","alert","timer","setTimeout","console","log","clearTimeout","totalQuestions","handleOptionSelect","option","type","updatedSelections","undefined","currentSelections","includes","filter","o","handleNextQuestion","handlePreviousQuestion","handleSkip","handleQuestionClick","index","handleSubmit","confirm","correctAnswers","forEach","question","push","score","correctAnswer","userAnswer","Array","isArray","every","ans","post","hosts","condition","Contact","userData","Answer","Score","showProfile","profileDetails","isExist","document","querySelector","profileContainer","createElement","className","profileInfo","Object","keys","map","detail","detailList","classList","innerHTML","appendChild","body","bodyClick","event","target","closest","profileExist","remove","addEventListener","removeEventListener","currentQuestion","selectedOption","radius","circumference","Math","PI","children","fileName","_jsxFileName","lineNumber","columnNumber","Question","Option","onClick","name","value","checked","onChange","disabled","width","height","r","cx","cy","fill","stroke","strokeWidth","strokeDasharray","strokeDashoffset","style","transition","floor","from","_","i","_c","$RefreshReg$"],"sources":["/home/sk/Documents/quiz-app/client/src/pages/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\n\nimport \"../styles/Quiz.css\";\nimport components from \"./components\";\nconst { Navbar, Modal, Response, handleApiCall } = components;\n\nconst Quiz = (props) => {\n  const [isAutoSubmit, setIsAutoSubmit] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(1);\n  const [totalTime, setTotalTime] = useState(1);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\n\n  useEffect(() => {\n    handleApiCall({ API: \"load-data\", data: { collection: \"Tests\" } });\n  });\n  //useEffect(() => {\n  //  hosts.length &&\n  //    axios\n  //      .post(`http://${hosts[0]}:5000/load-data`, { collection: \"Tests\" })\n  //      .then((result) => {\n  //        result.data.forEach((qn) => {\n  //          delete qn[\"_id\"];\n  //        });\n  //        const questionsObj = result.data.map((question) => {\n  //          if (question.title) {\n  //            const minutes = question.Hours * 60 + question.Minutes;\n  //            const seconds = minutes * 60 + question.Seconds;\n\n  //            // Set total time and time left only once, using the last question's time values\n  //            setTotalTime((prev) => seconds);\n  //            setTimeLeft((prev) => seconds);\n\n  //            // Do not include this question in the final array\n  //            return null;\n  //          } else {\n  //            // Return the question with a modified 'type'\n  //            return {\n  //              ...question,\n  //              type: question.Answer.length > 1 ? \"checkbox\" : \"radio\", // Multiple answers => checkbox, single answer => radio\n  //            };\n  //          }\n  //        });\n\n  //        setQuestions(questionsObj.filter((question) => question !== null));\n  //      });\n  //}, [hosts]);\n\n  useEffect(() => {\n    if (questions.length) {\n      const intTimer = setInterval(() => {\n        setTimeLeft((prevTimeLeft) => {\n          if (prevTimeLeft <= -1) {\n            clearInterval(intTimer);\n            return 0;\n          }\n          return prevTimeLeft - 1;\n        });\n      }, 1000);\n\n      return () => clearInterval(intTimer);\n    }\n  }, [questions]);\n\n  useEffect(() => {\n    if (timeLeft === 0 && !isAutoSubmit) {\n      window.alert(\"Time Out!\\nYour test will be submitted in 10 secs\");\n      setTimeLeft(11); // Prevents countdown from going negative (optional).\n      setIsAutoSubmit(true);\n    }\n  }, [timeLeft, isAutoSubmit]);\n\n  useEffect(() => {\n    if (isAutoSubmit) {\n      const timer = setTimeout(() => {\n        console.log(\"Quiz Submitted:\", selectedOptions);\n        alert(\"Quiz Submitted!\");\n      }, 10000);\n\n      return () => clearTimeout(timer); // Clean up the timer when the component unmounts.\n    }\n  }, [isAutoSubmit, selectedOptions]);\n\n  const totalQuestions = questions.length;\n\n  const handleOptionSelect = (option, type) => {\n    const updatedSelections = [...highlightedOptions];\n\n    if (type === \"radio\") {\n      // Toggle selection for radio buttons\n      if (updatedSelections[currentQuestionIndex] === option) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\"; // Deselect if clicked again\n      } else {\n        updatedSelections[currentQuestionIndex] =\n          option !== undefined ? option : \"not-answered\";\n      }\n    } else if (type === \"checkbox\") {\n      const currentSelections = updatedSelections[currentQuestionIndex] || [];\n\n      // Toggle checkbox selection\n      if (currentSelections.includes(option)) {\n        updatedSelections[currentQuestionIndex] = currentSelections.filter(\n          (o) => o !== option\n        );\n      } else {\n        updatedSelections[currentQuestionIndex] = [\n          ...currentSelections,\n          option,\n        ];\n      }\n\n      // Check if any selections are made\n      if (updatedSelections[currentQuestionIndex].length === 0) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\"; // Mark as not-answered\n      } else if (\n        updatedSelections[currentQuestionIndex] === \"not-answered\" ||\n        updatedSelections[currentQuestionIndex] === \"skipped\"\n      ) {\n        updatedSelections[currentQuestionIndex] = []; // Clear \"not-answered\" status\n      }\n    }\n\n    // Update states\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n  };\n\n  const handleNextQuestion = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    // If no option is selected, mark as 'not-answered'\n    if (updatedSelections[currentQuestionIndex] === undefined) {\n      updatedSelections[currentQuestionIndex] = \"not-answered\";\n    }\n\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const handlePreviousQuestion = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    if (updatedSelections[currentQuestionIndex] === undefined) {\n      updatedSelections[currentQuestionIndex] = \"not-answered\";\n    }\n\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const handleSkip = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    updatedSelections[currentQuestionIndex] = \"skipped\";\n\n    setHighlightedOptions(updatedSelections);\n\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handleQuestionClick = (index) => {\n    const updatedSelections = [...highlightedOptions];\n\n    // If the question is neither answered nor skipped, mark it as not-answered\n    if (updatedSelections[index] === undefined) {\n      updatedSelections[index] = \"not-answered\";\n    }\n\n    setHighlightedOptions(updatedSelections);\n    setCurrentQuestionIndex(index);\n  };\n\n  const handleSubmit = () => {\n    if (window.confirm(\"Are you sure you want to start the test?\")) {\n      let correctAnswers = [];\n\n      questions.forEach((question) => {\n        if (!question[\"title\"]) {\n          correctAnswers.push(\n            question[\"Answer\"].length === 1\n              ? question[\"Answer\"][0]\n              : question[\"Answer\"]\n          );\n        }\n      });\n\n      let score = 0;\n\n      correctAnswers.forEach((correctAnswer, index) => {\n        const userAnswer = selectedOptions[index];\n\n        if (Array.isArray(correctAnswer)) {\n          if (\n            Array.isArray(userAnswer) &&\n            correctAnswer.length === userAnswer.length &&\n            correctAnswer.every((ans) => userAnswer.includes(ans))\n          ) {\n            score++;\n            console.log(\n              \"Correct (multiple choice):\",\n              correctAnswer,\n              userAnswer\n            );\n          } else {\n            console.log(\n              \"Incorrect (multiple choice):\",\n              correctAnswer,\n              userAnswer\n            );\n          }\n        } else {\n          // Check single answer correctness\n          if (correctAnswer === userAnswer) {\n            score++;\n            console.log(\"Correct (single choice):\", correctAnswer, userAnswer);\n          } else {\n            console.log(\n              \"Incorrect (single choice):\",\n              correctAnswer,\n              userAnswer\n            );\n          }\n        }\n      });\n      axios.post(`http://${hosts[0]}:5000/update-data`, {\n        condition: { Contact: userData.Contact },\n        collection: \"Users\",\n        data: { Answer: selectedOptions, Score: score },\n      });\n      alert(\n        `Quiz Submitted! Your score is ${score} out of ${correctAnswers.length}`\n      );\n\n      // Navigate to another page or show final results\n      // navigate(\"/\");\n    }\n  };\n\n  const showProfile = (profileDetails) => {\n    const isExist = document.querySelector(\".profile-container\");\n    if (isExist) {\n      return;\n    }\n    const profileContainer = document.createElement(\"div\");\n    profileContainer.className = \"profile-container\";\n    const profileInfo = document.createElement(\"div\");\n    profileInfo.className = \"profile-info\";\n    Object.keys(profileDetails).map(async (detail) => {\n      const detailList = document.createElement(\"li\");\n      detailList.classList = \"detail\";\n      detailList.innerHTML = `<p><span>${detail}:</span>&nbsp;<span> ${profileDetails[detail]}</span></p>`;\n      profileInfo.appendChild(detailList);\n    });\n    profileContainer.appendChild(profileInfo);\n    document.body.appendChild(profileContainer);\n  };\n\n  useEffect(() => {\n    const bodyClick = (event) => {\n      if (event.target.closest(\"li.profile\")) {\n        return;\n      } else if (event.target.closest(\"div.profile-container\")) {\n        return;\n      }\n\n      const profileExist = document.querySelector(\".profile-container\");\n\n      if (profileExist) {\n        profileExist.remove();\n      }\n    };\n    document.body.addEventListener(\"click\", bodyClick);\n    return () => {\n      document.body.removeEventListener(\"click\", bodyClick);\n    };\n  }, []);\n\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedOption = highlightedOptions[currentQuestionIndex] || [];\n\n  const radius = 50;\n  const circumference = 2 * Math.PI * radius;\n\n  return (\n    <>\n      <Navbar />\n\n      <div className=\"quiz-body\">\n        <div className=\"quiz-app\">\n          <div className=\"quiz-content\">\n            <div className=\"question-section\">\n              <h1>{currentQuestion?.Question}</h1>\n              <ul className=\"options\">\n                {currentQuestion?.Option.map((option, index) => (\n                  <li\n                    key={index}\n                    onClick={() =>\n                      handleOptionSelect(option, currentQuestion.type)\n                    }\n                    className={`\n                option \n                ${\n                  currentQuestion.type === \"radio\" && selectedOption === option\n                    ? \"selected\"\n                    : \"\"\n                }\n                ${\n                  currentQuestion.type === \"checkbox\" &&\n                  selectedOption.includes(option)\n                    ? \"selected\"\n                    : \"\"\n                }\n            `}\n                  >\n                    {currentQuestion?.type === \"radio\" ? (\n                      <label>\n                        <input\n                          type=\"radio\"\n                          name={`question-${currentQuestionIndex}`}\n                          value={option}\n                          checked={selectedOption === option} // Will reflect deselection\n                          onChange={() => handleOptionSelect(option, \"radio\")}\n                        />\n                        {option}\n                      </label>\n                    ) : (\n                      <label>\n                        <input\n                          type=\"checkbox\"\n                          name={`question-${currentQuestionIndex}`}\n                          value={option}\n                          checked={selectedOption.includes(option)}\n                          onChange={() =>\n                            handleOptionSelect(option, \"checkbox\")\n                          }\n                        />\n                        {option}\n                      </label>\n                    )}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"footer\">\n            {currentQuestionIndex !== 0 ? (\n              <button\n                onClick={handlePreviousQuestion}\n                disabled={currentQuestionIndex === 0}\n              >\n                Previous\n              </button>\n            ) : (\n              \"\"\n            )}\n            <button\n              onClick={\n                currentQuestionIndex !== totalQuestions - 1\n                  ? handleNextQuestion\n                  : handleSubmit\n              }\n              className={\n                currentQuestionIndex !== totalQuestions - 1\n                  ? \"\"\n                  : \"submit-button\"\n              }\n            >\n              {currentQuestionIndex !== totalQuestions - 1 ? \"Next\" : \"Submit\"}\n            </button>\n            {currentQuestionIndex !== totalQuestions - 1 && (\n              <button onClick={handleSkip}>Skip</button>\n            )}\n\n            <p>\n              Question {currentQuestionIndex + 1} of {totalQuestions}\n            </p>\n          </div>\n        </div>\n        <div>\n          {/* Timer Section */}\n          <div className=\"timer-section\">\n            <h1 className=\"header\">Timer</h1>\n            <div className=\"timer-container\">\n              <div className=\"timer-circle\">\n                <svg width=\"120\" height=\"120\">\n                  <circle\n                    r={radius}\n                    cx=\"60\"\n                    cy=\"60\"\n                    fill=\"none\"\n                    stroke=\"#e7e7e7\"\n                    strokeWidth=\"8\"\n                  ></circle>\n                  <circle\n                    r={radius}\n                    cx=\"60\"\n                    cy=\"60\"\n                    fill=\"none\"\n                    stroke=\"#007BFF\"\n                    strokeWidth=\"8\"\n                    strokeDasharray={circumference}\n                    strokeDashoffset={\n                      circumference - (timeLeft / totalTime) * circumference\n                    }\n                    style={{\n                      transition: \"stroke-dashoffset 1s linear\",\n                    }}\n                  ></circle>\n                </svg>\n                <div className=\"timer-text\">\n                  {Math.floor(timeLeft / 60)}m {timeLeft % 60}s\n                </div>\n              </div>\n              <div>Time Remaining</div>\n            </div>\n          </div>\n\n          {/* Question Number Section */}\n          <div className=\"question-number-container\">\n            <h1 className=\"header\">Questions List</h1>\n            <div className=\"grid-layout\">\n              {Array.from({ length: totalQuestions }, (_, i) => (\n                <div\n                  className={`question-number ${\n                    i === currentQuestionIndex ? \"current-question\" : \"\"\n                  } ${\n                    highlightedOptions[i] === \"skipped\"\n                      ? \"skipped\"\n                      : highlightedOptions[i] === \"not-answered\"\n                      ? \"not-answered\"\n                      : highlightedOptions[i] !== undefined\n                      ? \"answered\"\n                      : \"\"\n                  }`}\n                  key={i + 1}\n                  onClick={() => handleQuestionClick(i)} // Handle question click\n                >\n                  {i + 1}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}