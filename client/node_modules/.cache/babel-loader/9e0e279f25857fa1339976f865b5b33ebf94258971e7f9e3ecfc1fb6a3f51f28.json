{"ast":null,"code":"var _jsxFileName = \"/home/sk/Documents/quiz-app/client/src/pages/Tests.js\",\n  _s = $RefreshSig$();\nimport \"../styles/Students.css\";\nimport { useState } from \"react\";\nimport components from \"./components\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  DataTableManagement,\n  handleApiCall,\n  Modal\n} = components;\nconst Tests = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isFormModalOpen, setIsFormModalOpen] = useState(false);\n  const setTime = async () => {\n    setIsFormModalOpen(true);\n    const overlay = document.createElement(\"div\");\n    overlay.className = \"overlay\";\n    document.body.appendChild(overlay);\n    const modalContainer = document.createElement(\"div\");\n    modalContainer.className = \"modal-container\";\n    const createInputField = (column, value = \"\") => {\n      const inputField = document.createElement(\"input\");\n      inputField.className = column;\n      inputField.placeholder = column;\n      inputField.value = value;\n      inputField.type = \"number\";\n      return inputField;\n    };\n    try {\n      const response = await handleApiCall({\n        API: \"load-data\",\n        data: {\n          collection: collectionName\n        }\n      });\n      if (response.flag) {\n        response.data.forEach(value => delete value[\"_id\"]);\n        response.data = response.data.filter(data => !data.hasOwnProperty(\"title\"));\n        if (response.data.length > 0) {\n          setTableColumns(Object.keys(response.data[0]));\n          setTableData(response.data);\n        } else {\n          showModal(\"Info\", \"No data available.\", [\"Ok\"], () => setIsModalOpen(false));\n          setIsModalOpen(true);\n        }\n      } else {\n        showModal(\"Error\", response.error, [\"Retry\", \"Ok\"], button => {\n          if (button === \"Retry\") fetchData(collectionName);\n          setIsModalOpen(false);\n        });\n        setIsModalOpen(true);\n      }\n    } catch (error) {\n      showModal(\"Error\", `Uncaught error: ${error.message}`, [\"Retry\", \"Ok\"], button => {\n        if (button === \"Retry\") fetchData(collectionName);\n        setIsModalOpen(false);\n      });\n      setIsModalOpen(true);\n    }\n    axios.post(`http://${hosts[0]}:5000/find-data`, {\n      collection: \"Tests\",\n      condition: {\n        title: \"Time\"\n      }\n    }).then(result => {\n      const data = result.data.result;\n      [\"Hours\", \"Minutes\", \"Seconds\"].forEach(column => {\n        modalContainer.appendChild(createInputField(column, data[column]));\n      });\n    }).catch(() => {\n      // If there's an error, allow manual input\n      window.alert(\"Error fetching time data, please enter manually.\");\n      [\"Hours\", \"Minutes\", \"Seconds\"].forEach(column => {\n        modalContainer.appendChild(createInputField(column));\n      });\n    }).finally(() => {\n      const saveButton = document.createElement(\"button\");\n      saveButton.innerText = \"Save\";\n      saveButton.onclick = () => {\n        let data = {\n          title: \"Time\"\n        };\n        [\"Hours\", \"Minutes\", \"Seconds\"].forEach(column => {\n          const val = document.getElementsByClassName(column)[0].value;\n          data[column] = parseInt(val, 10);\n        });\n        axios.post(`http://${hosts[0]}:5000/update-data`, {\n          condition: {\n            title: \"Time\"\n          },\n          data: data,\n          collection: \"Tests\"\n        }).then(result => {\n          if (result.data.upsertedCount || result.data.modifiedCount) {\n            window.alert(\"Time updated successfully!\");\n          } else {\n            throw new Error(\"No data found for update.\");\n          }\n        }).catch(() => {\n          // If no update, insert new data\n          axios.post(`http://${hosts[0]}:5000/insert-data`, {\n            data,\n            collection: \"Tests\"\n          }).then(() => {\n            window.alert(\"Time added successfully!\");\n          }).catch(error => {\n            console.error(error);\n            window.alert(\"Error saving time data.\");\n          });\n        });\n        closeModalAndCleanup();\n      };\n      const closeButton = document.createElement(\"button\");\n      closeButton.innerText = \"Close\";\n      closeButton.onclick = closeModalAndCleanup;\n      modalContainer.appendChild(saveButton);\n      modalContainer.appendChild(closeButton);\n    });\n    document.body.appendChild(modalContainer);\n    const closeModalAndCleanup = () => {\n      setIsFormModalOpen(false);\n      modalContainer.remove();\n      document.body.removeChild(overlay);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DataTableManagement, {\n      tablePageName: \"Test\",\n      collectionName: \"Tests\",\n      actionButtons: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"upload-button\",\n        onClick: setTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Tests, \"GDuMUMecOHq0k791uQ6HXtCLCcY=\");\n_c = Tests;\nexport default Tests;\nvar _c;\n$RefreshReg$(_c, \"Tests\");","map":{"version":3,"names":["useState","components","jsxDEV","_jsxDEV","Fragment","_Fragment","DataTableManagement","handleApiCall","Modal","Tests","_s","isModalOpen","setIsModalOpen","isFormModalOpen","setIsFormModalOpen","setTime","overlay","document","createElement","className","body","appendChild","modalContainer","createInputField","column","value","inputField","placeholder","type","response","API","data","collection","collectionName","flag","forEach","filter","hasOwnProperty","length","setTableColumns","Object","keys","setTableData","showModal","error","button","fetchData","message","axios","post","hosts","condition","title","then","result","catch","window","alert","finally","saveButton","innerText","onclick","val","getElementsByClassName","parseInt","upsertedCount","modifiedCount","Error","console","closeModalAndCleanup","closeButton","remove","removeChild","children","tablePageName","actionButtons","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sk/Documents/quiz-app/client/src/pages/Tests.js"],"sourcesContent":["import \"../styles/Students.css\";\nimport { useState } from \"react\";\nimport components from \"./components\";\nconst { DataTableManagement, handleApiCall, Modal } = components;\n\nconst Tests = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [isFormModalOpen, setIsFormModalOpen] = useState(false);\n\n  const setTime = async () => {\n    setIsFormModalOpen(true);\n\n    const overlay = document.createElement(\"div\");\n    overlay.className = \"overlay\";\n    document.body.appendChild(overlay);\n\n    const modalContainer = document.createElement(\"div\");\n    modalContainer.className = \"modal-container\";\n\n    const createInputField = (column, value = \"\") => {\n      const inputField = document.createElement(\"input\");\n      inputField.className = column;\n      inputField.placeholder = column;\n      inputField.value = value;\n      inputField.type = \"number\";\n      return inputField;\n    };\n    try {\n      const response = await handleApiCall({\n        API: \"load-data\",\n        data: { collection: collectionName },\n      });\n\n      if (response.flag) {\n        response.data.forEach((value) => delete value[\"_id\"]);\n        response.data = response.data.filter(\n          (data) => !data.hasOwnProperty(\"title\")\n        );\n        if (response.data.length > 0) {\n          setTableColumns(Object.keys(response.data[0]));\n          setTableData(response.data);\n        } else {\n          showModal(\"Info\", \"No data available.\", [\"Ok\"], () =>\n            setIsModalOpen(false)\n          );\n          setIsModalOpen(true);\n        }\n      } else {\n        showModal(\"Error\", response.error, [\"Retry\", \"Ok\"], (button) => {\n          if (button === \"Retry\") fetchData(collectionName);\n          setIsModalOpen(false);\n        });\n        setIsModalOpen(true);\n      }\n    } catch (error) {\n      showModal(\n        \"Error\",\n        `Uncaught error: ${error.message}`,\n        [\"Retry\", \"Ok\"],\n        (button) => {\n          if (button === \"Retry\") fetchData(collectionName);\n          setIsModalOpen(false);\n        }\n      );\n      setIsModalOpen(true);\n    }\n    axios\n      .post(`http://${hosts[0]}:5000/find-data`, {\n        collection: \"Tests\",\n        condition: { title: \"Time\" },\n      })\n      .then((result) => {\n        const data = result.data.result;\n        [\"Hours\", \"Minutes\", \"Seconds\"].forEach((column) => {\n          modalContainer.appendChild(createInputField(column, data[column]));\n        });\n      })\n      .catch(() => {\n        // If there's an error, allow manual input\n        window.alert(\"Error fetching time data, please enter manually.\");\n        [\"Hours\", \"Minutes\", \"Seconds\"].forEach((column) => {\n          modalContainer.appendChild(createInputField(column));\n        });\n      })\n      .finally(() => {\n        const saveButton = document.createElement(\"button\");\n        saveButton.innerText = \"Save\";\n        saveButton.onclick = () => {\n          let data = { title: \"Time\" };\n          [\"Hours\", \"Minutes\", \"Seconds\"].forEach((column) => {\n            const val = document.getElementsByClassName(column)[0].value;\n            data[column] = parseInt(val, 10);\n          });\n\n          axios\n            .post(`http://${hosts[0]}:5000/update-data`, {\n              condition: { title: \"Time\" },\n              data: data,\n              collection: \"Tests\",\n            })\n            .then((result) => {\n              if (result.data.upsertedCount || result.data.modifiedCount) {\n                window.alert(\"Time updated successfully!\");\n              } else {\n                throw new Error(\"No data found for update.\");\n              }\n            })\n            .catch(() => {\n              // If no update, insert new data\n              axios\n                .post(`http://${hosts[0]}:5000/insert-data`, {\n                  data,\n                  collection: \"Tests\",\n                })\n                .then(() => {\n                  window.alert(\"Time added successfully!\");\n                })\n                .catch((error) => {\n                  console.error(error);\n                  window.alert(\"Error saving time data.\");\n                });\n            });\n\n          closeModalAndCleanup();\n        };\n\n        const closeButton = document.createElement(\"button\");\n        closeButton.innerText = \"Close\";\n        closeButton.onclick = closeModalAndCleanup;\n\n        modalContainer.appendChild(saveButton);\n        modalContainer.appendChild(closeButton);\n      });\n\n    document.body.appendChild(modalContainer);\n\n    const closeModalAndCleanup = () => {\n      setIsFormModalOpen(false);\n      modalContainer.remove();\n      document.body.removeChild(overlay);\n    };\n  };\n  return (\n    <>\n      <DataTableManagement\n        tablePageName={\"Test\"}\n        collectionName={\"Tests\"}\n        actionButtons={\n          <button\n            type=\"button\"\n            className=\"upload-button\"\n            onClick={setTime}\n          ></button>\n        }\n      />\n    </>\n  );\n};\n\nexport default Tests;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}