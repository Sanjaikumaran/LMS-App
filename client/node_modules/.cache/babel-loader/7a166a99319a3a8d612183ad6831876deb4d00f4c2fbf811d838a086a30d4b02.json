{"ast":null,"code":"var _jsxFileName = \"/home/sk/Documents/quiz-app/src/components/Quiz.js\",\n  _s = $RefreshSig$();\n// src/components/Quiz.js\n\nimport React, { useState } from \"react\";\nimport \"../styles/Quiz.css\"; // Import the CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [result, setResult] = useState(\"\");\n  const questions = [{\n    question: \"What is the capital of France?\",\n    options: [\"Berlin\", \"Madrid\", \"Paris\"],\n    answer: \"Paris\"\n  }, {\n    question: \"Which planet is known as the Red Planet?\",\n    options: [\"Earth\", \"Mars\", \"Jupiter\"],\n    answer: \"Mars\"\n  }, {\n    question: 'Who wrote \"To Kill a Mockingbird\"?',\n    options: [\"Harper Lee\", \"J.K. Rowling\", \"Mark Twain\"],\n    answer: \"Harper Lee\"\n  }];\n  const handleAnswerSelect = option => {\n    setSelectedAnswer(option);\n    const currentQuestion = questions[currentQuestionIndex];\n    if (option === currentQuestion.answer) {\n      setResult(\"Correct!\");\n    } else {\n      setResult(\"Wrong answer. Try again!\");\n    }\n  };\n  const handleNextQuestion = () => {\n    setSelectedAnswer(null); // Reset the selected answer for the next question\n    setResult(\"\"); // Reset the result message\n    setCurrentQuestionIndex(prevIndex => Math.min(prevIndex + 1, questions.length - 1));\n  };\n  const handlePreviousQuestion = () => {\n    setSelectedAnswer(null); // Reset the selected answer for the previous question\n    setResult(\"\"); // Reset the result message\n    setCurrentQuestionIndex(prevIndex => Math.max(prevIndex - 1, 0));\n  };\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Jeppiaar University\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: `option-${index}` // Unique ID for each radio button\n            ,\n            name: \"quiz-options\" // Grouping for radio buttons\n            ,\n            value: option,\n            onChange: () => handleAnswerSelect(option),\n            checked: selectedAnswer === option // Check the selected answer\n            ,\n            disabled: selectedAnswer !== null // Disable after answering\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `option-${index}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"option\",\n              children: [String.fromCharCode(65 + index), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), \" \", option, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)), selectedAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [currentQuestionIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePreviousQuestion,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), currentQuestionIndex < questions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextQuestion,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Quiz, \"Cm6uv+V9p915KsJzktVn2gfpBno=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","result","setResult","questions","question","options","answer","handleAnswerSelect","option","currentQuestion","handleNextQuestion","prevIndex","Math","min","length","handlePreviousQuestion","max","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","id","name","value","onChange","checked","disabled","htmlFor","String","fromCharCode","onClick","_c","$RefreshReg$"],"sources":["/home/sk/Documents/quiz-app/src/components/Quiz.js"],"sourcesContent":["// src/components/Quiz.js\n\nimport React, { useState } from \"react\";\nimport \"../styles/Quiz.css\"; // Import the CSS file\n\nconst Quiz = () => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [result, setResult] = useState(\"\");\n\n  const questions = [\n    {\n      question: \"What is the capital of France?\",\n      options: [\"Berlin\", \"Madrid\", \"Paris\"],\n      answer: \"Paris\",\n    },\n    {\n      question: \"Which planet is known as the Red Planet?\",\n      options: [\"Earth\", \"Mars\", \"Jupiter\"],\n      answer: \"Mars\",\n    },\n    {\n      question: 'Who wrote \"To Kill a Mockingbird\"?',\n      options: [\"Harper Lee\", \"J.K. Rowling\", \"Mark Twain\"],\n      answer: \"Harper Lee\",\n    },\n  ];\n\n  const handleAnswerSelect = (option) => {\n    setSelectedAnswer(option);\n    const currentQuestion = questions[currentQuestionIndex];\n    if (option === currentQuestion.answer) {\n      setResult(\"Correct!\");\n    } else {\n      setResult(\"Wrong answer. Try again!\");\n    }\n  };\n\n  const handleNextQuestion = () => {\n    setSelectedAnswer(null); // Reset the selected answer for the next question\n    setResult(\"\"); // Reset the result message\n    setCurrentQuestionIndex((prevIndex) =>\n      Math.min(prevIndex + 1, questions.length - 1)\n    );\n  };\n\n  const handlePreviousQuestion = () => {\n    setSelectedAnswer(null); // Reset the selected answer for the previous question\n    setResult(\"\"); // Reset the result message\n    setCurrentQuestionIndex((prevIndex) => Math.max(prevIndex - 1, 0));\n  };\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  return (\n    <>\n      <div className=\"d\">\n        <h1>Jeppiaar University</h1>\n      </div>\n      <div className=\"quiz-container\">\n        <h1>Quiz</h1>\n        <div>\n          <h3>{currentQuestion.question}</h3>\n          {currentQuestion.options.map((option, index) => (\n            <div key={option}>\n              <input\n                type=\"radio\"\n                id={`option-${index}`} // Unique ID for each radio button\n                name=\"quiz-options\" // Grouping for radio buttons\n                value={option}\n                onChange={() => handleAnswerSelect(option)}\n                checked={selectedAnswer === option} // Check the selected answer\n                disabled={selectedAnswer !== null} // Disable after answering\n              />\n              <label htmlFor={`option-${index}`}>\n                <span id=\"option\">{String.fromCharCode(65 + index)}.</span>{\" \"}\n                {option} {/* A, B, C labels */}\n              </label>\n            </div>\n          ))}\n          {selectedAnswer && <p>{result}</p>}\n        </div>\n\n        <div className=\"navigation-buttons\">\n          {/* Conditionally render the Previous button */}\n          {currentQuestionIndex > 0 && (\n            <button onClick={handlePreviousQuestion}>Previous</button>\n          )}\n          {currentQuestionIndex < questions.length - 1 && (\n            <button onClick={handleNextQuestion}>Next</button>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}