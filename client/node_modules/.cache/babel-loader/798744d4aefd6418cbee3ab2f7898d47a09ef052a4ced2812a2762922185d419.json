{"ast":null,"code":"var _jsxFileName = \"/home/sk/Documents/quiz-app/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/Quiz.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  initialTime,\n  questions = []\n}) => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(initialTime); // Initial time from DB\n  const [totalTime, setTotalTime] = useState(initialTime); // Also store total time\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0); // Index to track the current question\n  const [selectedOptions, setSelectedOptions] = useState([]); // Store selected options for each question\n  const [highlitedOptions, setHighlightedOptions] = useState([]); // Store selected options for each question\n\n  const totalQuestions = questions.length; // Total number of questions\n\n  // Timer logic, decrements timeLeft every second\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer); // Clear the timer on component unmount\n    }\n  }, [timeLeft]);\n\n  // Handle option selection\n  const handleOptionSelect = (option, type) => {\n    const updatedSelections = [...selectedOptions];\n    if (type === \"radio\") {\n      // For radio, only one option is allowed\n      updatedSelections[currentQuestionIndex] = option;\n    } else if (type === \"checkbox\") {\n      // For checkboxes, toggle the option in the selected array\n      const currentSelections = updatedSelections[currentQuestionIndex] || [];\n      if (currentSelections.includes(option)) {\n        // Remove if already selected\n        updatedSelections[currentQuestionIndex] = currentSelections.filter(o => o !== option);\n      } else {\n        // Add if not selected\n        updatedSelections[currentQuestionIndex] = [...currentSelections, option];\n      }\n    }\n    setHighlightedOptions(updatedSelections);\n    //setSelectedOptions(updatedSelections);\n  };\n\n  // Go to the next question\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < totalQuestions - 1) {\n      updateSelectionBeforeChange(); // Update selection before changing question\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1); // Go to the next question\n    }\n  };\n\n  // Go to the previous question\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      updateSelectionBeforeChange(); // Update selection before changing question\n      setCurrentQuestionIndex(prevIndex => prevIndex - 1); // Go to the previous question\n    }\n  };\n\n  // Update selection before changing questions\n  const updateSelectionBeforeChange = () => {\n    // You can customize this function if you need specific logic before changing the selection\n    // For example, you can check if the current question has been answered before navigating\n  };\n\n  // Handle quiz submission\n  const handleSubmit = () => {\n    console.log(\"Quiz Submitted:\", selectedOptions);\n    alert(\"Quiz Submitted!\");\n  };\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedOption = selectedOptions[currentQuestionIndex] || [];\n  const radius = 50; // Radius of the circle\n  const circumference = 2 * Math.PI * radius; // Circumference of the circle\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: \"Company Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#home\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#about\",\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#contact\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-app\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"options\",\n              children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleOptionSelect(option, currentQuestion.type),\n                className: `\n                option \n                ${currentQuestion.type === \"radio\" && selectedOption === option ? \"selected\" : \"\"}\n                ${currentQuestion.type === \"checkbox\" && highlitedOption.includes(option) ? \"selected\" : \"\"}\n            `,\n                children: (currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.type) === \"radio\" ? /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: `question-${currentQuestionIndex}`,\n                    value: option,\n                    checked: selectedOption === option,\n                    onChange: () => handleOptionSelect(option, \"radio\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 25\n                  }, this), option]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: `question-${currentQuestionIndex}`,\n                    value: option,\n                    checked: selectedOption.includes(option),\n                    onChange: () => handleOptionSelect(option, \"checkbox\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 25\n                  }, this), option]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePreviousQuestion,\n            disabled: currentQuestionIndex === 0,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), currentQuestionIndex < totalQuestions - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextQuestion,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question \", currentQuestionIndex + 1, \" of \", totalQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer-circle\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"120\",\n              height: \"120\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                r: radius,\n                cx: \"60\",\n                cy: \"60\",\n                fill: \"none\",\n                stroke: \"#e7e7e7\",\n                strokeWidth: \"8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                r: radius,\n                cx: \"60\",\n                cy: \"60\",\n                fill: \"none\",\n                stroke: \"#007BFF\",\n                strokeWidth: \"8\",\n                strokeDasharray: circumference,\n                strokeDashoffset: circumference - timeLeft / totalTime * circumference // Dynamic time calculation\n                ,\n                style: {\n                  transition: \"stroke-dashoffset 1s linear\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer-text\",\n              children: [Math.floor(timeLeft / 60), \"m \", timeLeft % 60, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Time Remaining\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-number-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Questions List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-layout\",\n            children: Array.from({\n              length: totalQuestions\n            }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `question-number ${selectedOptions[i] !== undefined ? \"selected\" : \"\"}`,\n              onClick: () => setCurrentQuestionIndex(i) // Allow clicking on question numbers to jump\n              ,\n              children: i + 1\n            }, i + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Quiz, \"2ba1obqZkN8r1YY6iymzi0p1FTY=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","initialTime","questions","_s","timeLeft","setTimeLeft","totalTime","setTotalTime","currentQuestionIndex","setCurrentQuestionIndex","selectedOptions","setSelectedOptions","highlitedOptions","setHighlightedOptions","totalQuestions","length","timer","setTimeout","clearTimeout","handleOptionSelect","option","type","updatedSelections","currentSelections","includes","filter","o","handleNextQuestion","updateSelectionBeforeChange","prevIndex","handlePreviousQuestion","handleSubmit","console","log","alert","currentQuestion","selectedOption","radius","circumference","Math","PI","children","className","fileName","_jsxFileName","lineNumber","columnNumber","href","question","options","map","index","onClick","highlitedOption","name","value","checked","onChange","disabled","width","height","r","cx","cy","fill","stroke","strokeWidth","strokeDasharray","strokeDashoffset","style","transition","floor","Array","from","_","i","undefined","_c","$RefreshReg$"],"sources":["/home/sk/Documents/quiz-app/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/Quiz.css\";\n\nconst Quiz = ({ initialTime, questions = [] }) => {\n  const [timeLeft, setTimeLeft] = useState(initialTime); // Initial time from DB\n  const [totalTime, setTotalTime] = useState(initialTime); // Also store total time\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0); // Index to track the current question\n  const [selectedOptions, setSelectedOptions] = useState([]); // Store selected options for each question\n  const [highlitedOptions, setHighlightedOptions] = useState([]); // Store selected options for each question\n\n  const totalQuestions = questions.length; // Total number of questions\n\n  // Timer logic, decrements timeLeft every second\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer); // Clear the timer on component unmount\n    }\n  }, [timeLeft]);\n\n  // Handle option selection\n  const handleOptionSelect = (option, type) => {\n    const updatedSelections = [...selectedOptions];\n\n    if (type === \"radio\") {\n      // For radio, only one option is allowed\n      updatedSelections[currentQuestionIndex] = option;\n    } else if (type === \"checkbox\") {\n      // For checkboxes, toggle the option in the selected array\n      const currentSelections = updatedSelections[currentQuestionIndex] || [];\n      if (currentSelections.includes(option)) {\n        // Remove if already selected\n        updatedSelections[currentQuestionIndex] = currentSelections.filter(\n          (o) => o !== option\n        );\n      } else {\n        // Add if not selected\n        updatedSelections[currentQuestionIndex] = [\n          ...currentSelections,\n          option,\n        ];\n      }\n    }\nsetHighlightedOptions(updatedSelections)\n    //setSelectedOptions(updatedSelections);\n  };\n\n  // Go to the next question\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < totalQuestions - 1) {\n      updateSelectionBeforeChange(); // Update selection before changing question\n      setCurrentQuestionIndex((prevIndex) => prevIndex + 1); // Go to the next question\n    }\n  };\n\n  // Go to the previous question\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      updateSelectionBeforeChange(); // Update selection before changing question\n      setCurrentQuestionIndex((prevIndex) => prevIndex - 1); // Go to the previous question\n    }\n  };\n\n  // Update selection before changing questions\n  const updateSelectionBeforeChange = () => {\n    // You can customize this function if you need specific logic before changing the selection\n    // For example, you can check if the current question has been answered before navigating\n  };\n\n  // Handle quiz submission\n  const handleSubmit = () => {\n    console.log(\"Quiz Submitted:\", selectedOptions);\n    alert(\"Quiz Submitted!\");\n  };\n\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedOption = selectedOptions[currentQuestionIndex] || [];\n\n  const radius = 50; // Radius of the circle\n  const circumference = 2 * Math.PI * radius; // Circumference of the circle\n\n  return (\n    <>\n      {/* Top Navigation Bar */}\n      <div>\n        <nav className=\"navbar\">\n          <div className=\"logo\">Company Name</div>\n          <div className=\"nav-links\">\n            <a href=\"#home\">Home</a>\n            <a href=\"#about\">About</a>\n            <a href=\"#contact\">Contact</a>\n          </div>\n        </nav>\n      </div>\n      {/* Main Content Area */}\n      <div className=\"quiz-body\">\n        <div className=\"quiz-app\">\n          <div className=\"quiz-content\">\n            <div className=\"question-section\">\n              <h1>{currentQuestion?.question}</h1>\n              <ul className=\"options\">\n                {currentQuestion?.options.map((option, index) => (\n                  <li\n                    key={index}\n                    onClick={() =>\n                      handleOptionSelect(option, currentQuestion.type)\n                    }\n                    className={`\n                option \n                ${\n                  currentQuestion.type === \"radio\" && selectedOption === option\n                    ? \"selected\"\n                    : \"\"\n                }\n                ${\n                  currentQuestion.type === \"checkbox\" &&\n                  highlitedOption.includes(option)\n                    ? \"selected\"\n                    : \"\"\n                }\n            `}\n                  >\n                    {currentQuestion?.type === \"radio\" ? (\n                      <label>\n                        <input\n                          type=\"radio\"\n                          name={`question-${currentQuestionIndex}`}\n                          value={option}\n                          checked={selectedOption === option}\n                          onChange={() => handleOptionSelect(option, \"radio\")}\n                        />\n                        {option}\n                      </label>\n                    ) : (\n                      <label>\n                        <input\n                          type=\"checkbox\"\n                          name={`question-${currentQuestionIndex}`}\n                          value={option}\n                          checked={selectedOption.includes(option)}\n                          onChange={() =>\n                            handleOptionSelect(option, \"checkbox\")\n                          }\n                        />\n                        {option}\n                      </label>\n                    )}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n\n          {/* Navigation and Footer Section */}\n          <div className=\"footer\">\n            <button\n              onClick={handlePreviousQuestion}\n              disabled={currentQuestionIndex === 0}\n            >\n              Previous\n            </button>\n            {currentQuestionIndex < totalQuestions - 1 ? (\n              <button onClick={handleNextQuestion}>Next</button>\n            ) : (\n              <button onClick={handleSubmit}>Submit</button>\n            )}\n            <p>\n              Question {currentQuestionIndex + 1} of {totalQuestions}\n            </p>\n          </div>\n        </div>\n        <div>\n          {/* Timer Section */}\n          <div className=\"timer-section\">\n            <div className=\"timer-circle\">\n              <svg width=\"120\" height=\"120\">\n                <circle\n                  r={radius}\n                  cx=\"60\"\n                  cy=\"60\"\n                  fill=\"none\"\n                  stroke=\"#e7e7e7\"\n                  strokeWidth=\"8\"\n                ></circle>\n                <circle\n                  r={radius}\n                  cx=\"60\"\n                  cy=\"60\"\n                  fill=\"none\"\n                  stroke=\"#007BFF\"\n                  strokeWidth=\"8\"\n                  strokeDasharray={circumference}\n                  strokeDashoffset={\n                    circumference - (timeLeft / totalTime) * circumference\n                  } // Dynamic time calculation\n                  style={{\n                    transition: \"stroke-dashoffset 1s linear\",\n                  }}\n                ></circle>\n              </svg>\n              <div className=\"timer-text\">\n                {Math.floor(timeLeft / 60)}m {timeLeft % 60}s\n              </div>\n            </div>\n            <div>Time Remaining</div>\n          </div>\n          {/* Question Number Section */}\n          <div className=\"question-number-container\">\n            <h1>Questions List</h1>\n            <div className=\"grid-layout\">\n              {Array.from({ length: totalQuestions }, (_, i) => (\n                <div\n                  className={`question-number ${\n                    selectedOptions[i] !== undefined ? \"selected\" : \"\"\n                  }`}\n                  key={i + 1}\n                  onClick={() => setCurrentQuestionIndex(i)} // Allow clicking on question numbers to jump\n                >\n                  {i + 1}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}