{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{CgProfile}from\"react-icons/cg\";import\"../styles/Quiz.css\";import{useNavigate}from\"react-router-dom\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Quiz=props=>{const navigate=useNavigate();const[userData,setUserData]=useState();const[isAutoSubmit,setIsAutoSubmit]=useState(false);const[timeLeft,setTimeLeft]=useState(1);const[totalTime,setTotalTime]=useState(1);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[selectedOptions,setSelectedOptions]=useState([]);const[questions,setQuestions]=useState([]);const[highlightedOptions,setHighlightedOptions]=useState([]);const[hosts,setHosts]=useState([]);useEffect(()=>{const userData=JSON.parse(localStorage.getItem(\"userData\")||\"{}\"),localIps=localStorage.getItem(\"localIps\");userData&&setUserData(userData);if(localIps){setHosts(localIps.split(\",\"));}},[props]);useEffect(()=>{hosts.length&&axios.post(`http://${hosts[0]}:5000/load-data`,{collection:\"Tests\"}).then(result=>{result.data.forEach(qn=>{delete qn[\"_id\"];});const questionsObj=result.data.map(question=>{if(question.title){const minutes=question.Hours*60+question.Minutes;const seconds=minutes*60+question.Seconds;// Set total time and time left only once, using the last question's time values\nsetTotalTime(prev=>seconds);setTimeLeft(prev=>seconds);// Do not include this question in the final array\nreturn null;}else{// Return the question with a modified 'type'\nreturn{...question,type:question.Answer.length>1?\"checkbox\":\"radio\"// Multiple answers => checkbox, single answer => radio\n};}});setQuestions(questionsObj.filter(question=>question!==null));});},[hosts]);useEffect(()=>{if(questions.length){const intTimer=setInterval(()=>{setTimeLeft(prevTimeLeft=>{if(prevTimeLeft<=-1){clearInterval(intTimer);return 0;}return prevTimeLeft-1;});},1000);return()=>clearInterval(intTimer);}},[questions]);useEffect(()=>{if(timeLeft===0&&!isAutoSubmit){window.alert(\"Time Out!\\nYour test will be submitted in 10 secs\");setTimeLeft(11);// Prevents countdown from going negative (optional).\nsetIsAutoSubmit(true);}},[timeLeft,isAutoSubmit]);useEffect(()=>{if(isAutoSubmit){const timer=setTimeout(()=>{console.log(\"Quiz Submitted:\",selectedOptions);alert(\"Quiz Submitted!\");navigate(\"/\");// Redirect to home or another page after submission.\n},10000);return()=>clearTimeout(timer);// Clean up the timer when the component unmounts.\n}},[isAutoSubmit,selectedOptions,navigate]);const totalQuestions=questions.length;const handleOptionSelect=(option,type)=>{const updatedSelections=[...highlightedOptions];if(type===\"radio\"){// Toggle selection for radio buttons\nif(updatedSelections[currentQuestionIndex]===option){updatedSelections[currentQuestionIndex]=\"not-answered\";// Deselect if clicked again\n}else{updatedSelections[currentQuestionIndex]=option!==undefined?option:\"not-answered\";}}else if(type===\"checkbox\"){const currentSelections=updatedSelections[currentQuestionIndex]||[];// Toggle checkbox selection\nif(currentSelections.includes(option)){updatedSelections[currentQuestionIndex]=currentSelections.filter(o=>o!==option);}else{updatedSelections[currentQuestionIndex]=[...currentSelections,option];}// Check if any selections are made\nif(updatedSelections[currentQuestionIndex].length===0){updatedSelections[currentQuestionIndex]=\"not-answered\";// Mark as not-answered\n}else if(updatedSelections[currentQuestionIndex]===\"not-answered\"||updatedSelections[currentQuestionIndex]===\"skipped\"){updatedSelections[currentQuestionIndex]=[];// Clear \"not-answered\" status\n}}// Update states\nsetHighlightedOptions(updatedSelections);setSelectedOptions(updatedSelections);};const handleNextQuestion=()=>{const updatedSelections=[...highlightedOptions];// If no option is selected, mark as 'not-answered'\nif(updatedSelections[currentQuestionIndex]===undefined){updatedSelections[currentQuestionIndex]=\"not-answered\";}setHighlightedOptions(updatedSelections);setSelectedOptions(updatedSelections);if(currentQuestionIndex<totalQuestions-1){setCurrentQuestionIndex(currentQuestionIndex+1);}};const handlePreviousQuestion=()=>{const updatedSelections=[...highlightedOptions];if(updatedSelections[currentQuestionIndex]===undefined){updatedSelections[currentQuestionIndex]=\"not-answered\";}setHighlightedOptions(updatedSelections);setSelectedOptions(updatedSelections);if(currentQuestionIndex>0){setCurrentQuestionIndex(currentQuestionIndex-1);}};const handleSkip=()=>{const updatedSelections=[...highlightedOptions];updatedSelections[currentQuestionIndex]=\"skipped\";setHighlightedOptions(updatedSelections);if(currentQuestionIndex<totalQuestions-1){setCurrentQuestionIndex(currentQuestionIndex+1);}};const handleQuestionClick=index=>{const updatedSelections=[...highlightedOptions];// If the question is neither answered nor skipped, mark it as not-answered\nif(updatedSelections[index]===undefined){updatedSelections[index]=\"not-answered\";}setHighlightedOptions(updatedSelections);setCurrentQuestionIndex(index);};const handleSubmit=()=>{if(window.confirm(\"Are you sure you want to start the test?\")){let correctAnswers=[];questions.forEach(question=>{if(!question[\"title\"]){correctAnswers.push(question[\"Answer\"].length===1?question[\"Answer\"][0]:question[\"Answer\"]);}});let score=0;correctAnswers.forEach((correctAnswer,index)=>{const userAnswer=selectedOptions[index];if(Array.isArray(correctAnswer)){if(Array.isArray(userAnswer)&&correctAnswer.length===userAnswer.length&&correctAnswer.every(ans=>userAnswer.includes(ans))){score++;console.log(\"Correct (multiple choice):\",correctAnswer,userAnswer);}else{console.log(\"Incorrect (multiple choice):\",correctAnswer,userAnswer);}}else{// Check single answer correctness\nif(correctAnswer===userAnswer){score++;console.log(\"Correct (single choice):\",correctAnswer,userAnswer);}else{console.log(\"Incorrect (single choice):\",correctAnswer,userAnswer);}}});axios.post(`http://${hosts[0]}:5000/update-data`,{condition:{Contact:userData.Contact},collection:\"Users\",data:{Answer:selectedOptions,Score:score}});alert(`Quiz Submitted! Your score is ${score} out of ${correctAnswers.length}`);// Navigate to another page or show final results\n// navigate(\"/\");\n}};const showProfile=profileDetails=>{const isExist=document.querySelector(\".profile-container\");if(isExist){return;}const profileContainer=document.createElement(\"div\");profileContainer.className=\"profile-container\";const profileInfo=document.createElement(\"div\");profileInfo.className=\"profile-info\";Object.keys(profileDetails).map(async detail=>{const detailList=document.createElement(\"li\");detailList.classList=\"detail\";detailList.innerHTML=`<p><span>${detail}:</span>&nbsp;<span> ${profileDetails[detail]}</span></p>`;profileInfo.appendChild(detailList);});profileContainer.appendChild(profileInfo);document.body.appendChild(profileContainer);};useEffect(()=>{const bodyClick=event=>{if(event.target.closest(\"li.profile\")){return;}else if(event.target.closest(\"div.profile-container\")){return;}const profileExist=document.querySelector(\".profile-container\");if(profileExist){profileExist.remove();}};document.body.addEventListener(\"click\",bodyClick);return()=>{document.body.removeEventListener(\"click\",bodyClick);};},[]);const currentQuestion=questions[currentQuestionIndex];const selectedOption=highlightedOptions[currentQuestionIndex]||[];const radius=50;const circumference=2*Math.PI*radius;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"nav\",{className:\"navbar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo\",children:\"Quizzards\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"nav-links\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:()=>{navigate(\"/admin\");},children:\"Home\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#about\",children:\"About\"}),/*#__PURE__*/_jsx(\"a\",{target:\"_blank\",rel:\"noopener noreferrer\",href:\"https://sanjaikumaran.online/contact/\",children:\"Contact\"}),\" \",/*#__PURE__*/_jsx(\"li\",{onClick:()=>{showProfile(userData);},className:\"profile\",children:/*#__PURE__*/_jsx(CgProfile,{style:{fontSize:\"1.5rem\"}})})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-app\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"quiz-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"question-section\",children:[/*#__PURE__*/_jsx(\"h1\",{children:currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.Question}),/*#__PURE__*/_jsx(\"ul\",{className:\"options\",children:currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.Option.map((option,index)=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>handleOptionSelect(option,currentQuestion.type),className:`\n                option \n                ${currentQuestion.type===\"radio\"&&selectedOption===option?\"selected\":\"\"}\n                ${currentQuestion.type===\"checkbox\"&&selectedOption.includes(option)?\"selected\":\"\"}\n            `,children:(currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.type)===\"radio\"?/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:`question-${currentQuestionIndex}`,value:option,checked:selectedOption===option// Will reflect deselection\n,onChange:()=>handleOptionSelect(option,\"radio\")}),option]}):/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:`question-${currentQuestionIndex}`,value:option,checked:selectedOption.includes(option),onChange:()=>handleOptionSelect(option,\"checkbox\")}),option]})},index))})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer\",children:[currentQuestionIndex!==0?/*#__PURE__*/_jsx(\"button\",{onClick:handlePreviousQuestion,disabled:currentQuestionIndex===0,children:\"Previous\"}):\"\",/*#__PURE__*/_jsx(\"button\",{onClick:currentQuestionIndex!==totalQuestions-1?handleNextQuestion:handleSubmit,className:currentQuestionIndex!==totalQuestions-1?\"\":\"submit-button\",children:currentQuestionIndex!==totalQuestions-1?\"Next\":\"Submit\"}),currentQuestionIndex!==totalQuestions-1&&/*#__PURE__*/_jsx(\"button\",{onClick:handleSkip,children:\"Skip\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Question \",currentQuestionIndex+1,\" of \",totalQuestions]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"timer-section\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"header\",children:\"Timer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"timer-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"timer-circle\",children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"120\",height:\"120\",children:[/*#__PURE__*/_jsx(\"circle\",{r:radius,cx:\"60\",cy:\"60\",fill:\"none\",stroke:\"#e7e7e7\",strokeWidth:\"8\"}),/*#__PURE__*/_jsx(\"circle\",{r:radius,cx:\"60\",cy:\"60\",fill:\"none\",stroke:\"#007BFF\",strokeWidth:\"8\",strokeDasharray:circumference,strokeDashoffset:circumference-timeLeft/totalTime*circumference,style:{transition:\"stroke-dashoffset 1s linear\"}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"timer-text\",children:[Math.floor(timeLeft/60),\"m \",timeLeft%60,\"s\"]})]}),/*#__PURE__*/_jsx(\"div\",{children:\"Time Remaining\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-number-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"header\",children:\"Questions List\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid-layout\",children:Array.from({length:totalQuestions},(_,i)=>/*#__PURE__*/_jsx(\"div\",{className:`question-number ${i===currentQuestionIndex?\"current-question\":\"\"} ${highlightedOptions[i]===\"skipped\"?\"skipped\":highlightedOptions[i]===\"not-answered\"?\"not-answered\":highlightedOptions[i]!==undefined?\"answered\":\"\"}`,onClick:()=>handleQuestionClick(i)// Handle question click\n,children:i+1},i+1))})]})]})]})]});};export default Quiz;","map":{"version":3,"names":["React","useState","useEffect","CgProfile","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Quiz","props","navigate","userData","setUserData","isAutoSubmit","setIsAutoSubmit","timeLeft","setTimeLeft","totalTime","setTotalTime","currentQuestionIndex","setCurrentQuestionIndex","selectedOptions","setSelectedOptions","questions","setQuestions","highlightedOptions","setHighlightedOptions","hosts","setHosts","JSON","parse","localStorage","getItem","localIps","split","length","post","collection","then","result","data","forEach","qn","questionsObj","map","question","title","minutes","Hours","Minutes","seconds","Seconds","prev","type","Answer","filter","intTimer","setInterval","prevTimeLeft","clearInterval","window","alert","timer","setTimeout","console","log","clearTimeout","totalQuestions","handleOptionSelect","option","updatedSelections","undefined","currentSelections","includes","o","handleNextQuestion","handlePreviousQuestion","handleSkip","handleQuestionClick","index","handleSubmit","confirm","correctAnswers","push","score","correctAnswer","userAnswer","Array","isArray","every","ans","condition","Contact","Score","showProfile","profileDetails","isExist","document","querySelector","profileContainer","createElement","className","profileInfo","Object","keys","detail","detailList","classList","innerHTML","appendChild","body","bodyClick","event","target","closest","profileExist","remove","addEventListener","removeEventListener","currentQuestion","selectedOption","radius","circumference","Math","PI","children","onClick","href","rel","style","fontSize","Question","Option","name","value","checked","onChange","disabled","width","height","r","cx","cy","fill","stroke","strokeWidth","strokeDasharray","strokeDashoffset","transition","floor","from","_","i"],"sources":["/home/sk/Documents/quiz-app/client/src/pages/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { CgProfile } from \"react-icons/cg\";\n\nimport \"../styles/Quiz.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Quiz = (props) => {\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState();\n\n  const [isAutoSubmit, setIsAutoSubmit] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(1);\n  const [totalTime, setTotalTime] = useState(1);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\n\n  const [hosts, setHosts] = useState([]);\n\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem(\"userData\") || \"{}\"),\n      localIps = localStorage.getItem(\"localIps\");\n    userData && setUserData(userData);\n\n    if (localIps) {\n      setHosts(localIps.split(\",\"));\n    }\n  }, [props]);\n\n  useEffect(() => {\n    hosts.length &&\n      axios\n        .post(`http://${hosts[0]}:5000/load-data`, { collection: \"Tests\" })\n        .then((result) => {\n          result.data.forEach((qn) => {\n            delete qn[\"_id\"];\n          });\n          const questionsObj = result.data.map((question) => {\n            if (question.title) {\n              const minutes = question.Hours * 60 + question.Minutes;\n              const seconds = minutes * 60 + question.Seconds;\n\n              // Set total time and time left only once, using the last question's time values\n              setTotalTime((prev) => seconds);\n              setTimeLeft((prev) => seconds);\n\n              // Do not include this question in the final array\n              return null;\n            } else {\n              // Return the question with a modified 'type'\n              return {\n                ...question,\n                type: question.Answer.length > 1 ? \"checkbox\" : \"radio\", // Multiple answers => checkbox, single answer => radio\n              };\n            }\n          });\n\n          setQuestions(questionsObj.filter((question) => question !== null));\n        });\n  }, [hosts]);\n\n  useEffect(() => {\n    if (questions.length) {\n      const intTimer = setInterval(() => {\n        setTimeLeft((prevTimeLeft) => {\n          if (prevTimeLeft <= -1) {\n            clearInterval(intTimer);\n            return 0;\n          }\n          return prevTimeLeft - 1;\n        });\n      }, 1000);\n\n      return () => clearInterval(intTimer);\n    }\n  }, [questions]);\n\n  useEffect(() => {\n    if (timeLeft === 0 && !isAutoSubmit) {\n      window.alert(\"Time Out!\\nYour test will be submitted in 10 secs\");\n      setTimeLeft(11); // Prevents countdown from going negative (optional).\n      setIsAutoSubmit(true);\n    }\n  }, [timeLeft, isAutoSubmit]);\n\n  useEffect(() => {\n    if (isAutoSubmit) {\n      const timer = setTimeout(() => {\n        console.log(\"Quiz Submitted:\", selectedOptions);\n        alert(\"Quiz Submitted!\");\n        navigate(\"/\"); // Redirect to home or another page after submission.\n      }, 10000);\n\n      return () => clearTimeout(timer); // Clean up the timer when the component unmounts.\n    }\n  }, [isAutoSubmit, selectedOptions, navigate]);\n\n  const totalQuestions = questions.length;\n\n  const handleOptionSelect = (option, type) => {\n    const updatedSelections = [...highlightedOptions];\n\n    if (type === \"radio\") {\n      // Toggle selection for radio buttons\n      if (updatedSelections[currentQuestionIndex] === option) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\"; // Deselect if clicked again\n      } else {\n        updatedSelections[currentQuestionIndex] =\n          option !== undefined ? option : \"not-answered\";\n      }\n    } else if (type === \"checkbox\") {\n      const currentSelections = updatedSelections[currentQuestionIndex] || [];\n\n      // Toggle checkbox selection\n      if (currentSelections.includes(option)) {\n        updatedSelections[currentQuestionIndex] = currentSelections.filter(\n          (o) => o !== option\n        );\n      } else {\n        updatedSelections[currentQuestionIndex] = [\n          ...currentSelections,\n          option,\n        ];\n      }\n\n      // Check if any selections are made\n      if (updatedSelections[currentQuestionIndex].length === 0) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\"; // Mark as not-answered\n      } else if (\n        updatedSelections[currentQuestionIndex] === \"not-answered\" ||\n        updatedSelections[currentQuestionIndex] === \"skipped\"\n      ) {\n        updatedSelections[currentQuestionIndex] = []; // Clear \"not-answered\" status\n      }\n    }\n\n    // Update states\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n  };\n\n  const handleNextQuestion = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    // If no option is selected, mark as 'not-answered'\n    if (updatedSelections[currentQuestionIndex] === undefined) {\n      updatedSelections[currentQuestionIndex] = \"not-answered\";\n    }\n\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const handlePreviousQuestion = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    if (updatedSelections[currentQuestionIndex] === undefined) {\n      updatedSelections[currentQuestionIndex] = \"not-answered\";\n    }\n\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const handleSkip = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    updatedSelections[currentQuestionIndex] = \"skipped\";\n\n    setHighlightedOptions(updatedSelections);\n\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handleQuestionClick = (index) => {\n    const updatedSelections = [...highlightedOptions];\n\n    // If the question is neither answered nor skipped, mark it as not-answered\n    if (updatedSelections[index] === undefined) {\n      updatedSelections[index] = \"not-answered\";\n    }\n\n    setHighlightedOptions(updatedSelections);\n    setCurrentQuestionIndex(index);\n  };\n\n  const handleSubmit = () => {\n    if (window.confirm(\"Are you sure you want to start the test?\")) {\n      let correctAnswers = [];\n\n      questions.forEach((question) => {\n        if (!question[\"title\"]) {\n          correctAnswers.push(\n            question[\"Answer\"].length === 1\n              ? question[\"Answer\"][0]\n              : question[\"Answer\"]\n          );\n        }\n      });\n\n      let score = 0;\n\n      correctAnswers.forEach((correctAnswer, index) => {\n        const userAnswer = selectedOptions[index];\n\n        if (Array.isArray(correctAnswer)) {\n          if (\n            Array.isArray(userAnswer) &&\n            correctAnswer.length === userAnswer.length &&\n            correctAnswer.every((ans) => userAnswer.includes(ans))\n          ) {\n            score++;\n            console.log(\n              \"Correct (multiple choice):\",\n              correctAnswer,\n              userAnswer\n            );\n          } else {\n            console.log(\n              \"Incorrect (multiple choice):\",\n              correctAnswer,\n              userAnswer\n            );\n          }\n        } else {\n          // Check single answer correctness\n          if (correctAnswer === userAnswer) {\n            score++;\n            console.log(\"Correct (single choice):\", correctAnswer, userAnswer);\n          } else {\n            console.log(\n              \"Incorrect (single choice):\",\n              correctAnswer,\n              userAnswer\n            );\n          }\n        }\n      });\n      axios.post(`http://${hosts[0]}:5000/update-data`, {\n        condition: { Contact: userData.Contact },\n        collection: \"Users\",\n        data: { Answer: selectedOptions, Score: score },\n      });\n      alert(\n        `Quiz Submitted! Your score is ${score} out of ${correctAnswers.length}`\n      );\n\n      // Navigate to another page or show final results\n      // navigate(\"/\");\n    }\n  };\n\n  const showProfile = (profileDetails) => {\n    const isExist = document.querySelector(\".profile-container\");\n    if (isExist) {\n      return;\n    }\n    const profileContainer = document.createElement(\"div\");\n    profileContainer.className = \"profile-container\";\n    const profileInfo = document.createElement(\"div\");\n    profileInfo.className = \"profile-info\";\n    Object.keys(profileDetails).map(async (detail) => {\n      const detailList = document.createElement(\"li\");\n      detailList.classList = \"detail\";\n      detailList.innerHTML = `<p><span>${detail}:</span>&nbsp;<span> ${profileDetails[detail]}</span></p>`;\n      profileInfo.appendChild(detailList);\n    });\n    profileContainer.appendChild(profileInfo);\n    document.body.appendChild(profileContainer);\n  };\n\n  useEffect(() => {\n    const bodyClick = (event) => {\n      if (event.target.closest(\"li.profile\")) {\n        return;\n      } else if (event.target.closest(\"div.profile-container\")) {\n        return;\n      }\n\n      const profileExist = document.querySelector(\".profile-container\");\n\n      if (profileExist) {\n        profileExist.remove();\n      }\n    };\n    document.body.addEventListener(\"click\", bodyClick);\n    return () => {\n      document.body.removeEventListener(\"click\", bodyClick);\n    };\n  }, []);\n\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedOption = highlightedOptions[currentQuestionIndex] || [];\n\n  const radius = 50;\n  const circumference = 2 * Math.PI * radius;\n\n  return (\n    <>\n      {/* Top Navigation Bar */}\n      <div>\n        <nav className=\"navbar\">\n          <div className=\"logo\">Quizzards</div>\n          <div className=\"nav-links\">\n            {/*{console.log(questions)}*/}\n            <span\n              onClick={() => {\n                navigate(\"/admin\");\n              }}\n            >\n              Home\n            </span>\n            <a href=\"#about\">About</a>\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://sanjaikumaran.online/contact/\"\n            >\n              Contact\n            </a>{\" \"}\n            <li\n              onClick={() => {\n                showProfile(userData);\n              }}\n              className=\"profile\"\n            >\n              {<CgProfile style={{ fontSize: \"1.5rem\" }} />}\n            </li>\n          </div>\n        </nav>\n      </div>\n\n      <div className=\"quiz-body\">\n        <div className=\"quiz-app\">\n          <div className=\"quiz-content\">\n            <div className=\"question-section\">\n              <h1>{currentQuestion?.Question}</h1>\n              <ul className=\"options\">\n                {currentQuestion?.Option.map((option, index) => (\n                  <li\n                    key={index}\n                    onClick={() =>\n                      handleOptionSelect(option, currentQuestion.type)\n                    }\n                    className={`\n                option \n                ${\n                  currentQuestion.type === \"radio\" && selectedOption === option\n                    ? \"selected\"\n                    : \"\"\n                }\n                ${\n                  currentQuestion.type === \"checkbox\" &&\n                  selectedOption.includes(option)\n                    ? \"selected\"\n                    : \"\"\n                }\n            `}\n                  >\n                    {currentQuestion?.type === \"radio\" ? (\n                      <label>\n                        <input\n                          type=\"radio\"\n                          name={`question-${currentQuestionIndex}`}\n                          value={option}\n                          checked={selectedOption === option} // Will reflect deselection\n                          onChange={() => handleOptionSelect(option, \"radio\")}\n                        />\n                        {option}\n                      </label>\n                    ) : (\n                      <label>\n                        <input\n                          type=\"checkbox\"\n                          name={`question-${currentQuestionIndex}`}\n                          value={option}\n                          checked={selectedOption.includes(option)}\n                          onChange={() =>\n                            handleOptionSelect(option, \"checkbox\")\n                          }\n                        />\n                        {option}\n                      </label>\n                    )}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"footer\">\n            {currentQuestionIndex !== 0 ? (\n              <button\n                onClick={handlePreviousQuestion}\n                disabled={currentQuestionIndex === 0}\n              >\n                Previous\n              </button>\n            ) : (\n              \"\"\n            )}\n            <button\n              onClick={\n                currentQuestionIndex !== totalQuestions - 1\n                  ? handleNextQuestion\n                  : handleSubmit\n              }\n              className={\n                currentQuestionIndex !== totalQuestions - 1\n                  ? \"\"\n                  : \"submit-button\"\n              }\n            >\n              {currentQuestionIndex !== totalQuestions - 1 ? \"Next\" : \"Submit\"}\n            </button>\n            {currentQuestionIndex !== totalQuestions - 1 && (\n              <button onClick={handleSkip}>Skip</button>\n            )}\n\n            <p>\n              Question {currentQuestionIndex + 1} of {totalQuestions}\n            </p>\n          </div>\n        </div>\n        <div>\n          {/* Timer Section */}\n          <div className=\"timer-section\">\n            <h1 className=\"header\">Timer</h1>\n            <div className=\"timer-container\">\n              <div className=\"timer-circle\">\n                <svg width=\"120\" height=\"120\">\n                  <circle\n                    r={radius}\n                    cx=\"60\"\n                    cy=\"60\"\n                    fill=\"none\"\n                    stroke=\"#e7e7e7\"\n                    strokeWidth=\"8\"\n                  ></circle>\n                  <circle\n                    r={radius}\n                    cx=\"60\"\n                    cy=\"60\"\n                    fill=\"none\"\n                    stroke=\"#007BFF\"\n                    strokeWidth=\"8\"\n                    strokeDasharray={circumference}\n                    strokeDashoffset={\n                      circumference - (timeLeft / totalTime) * circumference\n                    }\n                    style={{\n                      transition: \"stroke-dashoffset 1s linear\",\n                    }}\n                  ></circle>\n                </svg>\n                <div className=\"timer-text\">\n                  {Math.floor(timeLeft / 60)}m {timeLeft % 60}s\n                </div>\n              </div>\n              <div>Time Remaining</div>\n            </div>\n          </div>\n\n          {/* Question Number Section */}\n          <div className=\"question-number-container\">\n            <h1 className=\"header\">Questions List</h1>\n            <div className=\"grid-layout\">\n              {Array.from({ length: totalQuestions }, (_, i) => (\n                <div\n                  className={`question-number ${\n                    i === currentQuestionIndex ? \"current-question\" : \"\"\n                  } ${\n                    highlightedOptions[i] === \"skipped\"\n                      ? \"skipped\"\n                      : highlightedOptions[i] === \"not-answered\"\n                      ? \"not-answered\"\n                      : highlightedOptions[i] !== undefined\n                      ? \"answered\"\n                      : \"\"\n                  }`}\n                  key={i + 1}\n                  onClick={() => handleQuestionClick(i)} // Handle question click\n                >\n                  {i + 1}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}