{"ast":null,"code":"var _jsxFileName = \"/home/sk/Documents/quiz-app/src/App.js\";\nimport React, { useState } from \"react\";\nimport Quiz from \"./components/Quiz\";\nimport Instruction from \"./components/Instruction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  var _s = $RefreshSig$();\n  const initialTime = 10; // 5 minutes (300 seconds)\n\n  // Example questions data\n  const questions = [{\n    question: \"Which of the following are fruits?\",\n    type: \"checkbox\",\n    // This will render checkboxes (multiple choice)\n    options: [\"Apple\", \"Carrot\", \"Banana\", \"Broccoli\"]\n  }, {\n    question: \"What is the capital of France?\",\n    type: \"radio\",\n    // This will render radio buttons (single choice)\n    options: [\"Berlin\", \"Madrid\", \"Paris\", \"Rome\"]\n  }, {\n    question: \"Which programming languages do you know?\",\n    type: \"checkbox\",\n    // Multiple choice\n    options: [\"Python\", \"JavaScript\", \"C++\", \"Ruby\"]\n  }, {\n    question: \"What is the largest planet in our solar system?\",\n    type: \"radio\",\n    // Single choice\n    options: [\"Earth\", \"Mars\", \"Jupiter\", \"Venus\"]\n  }, {\n    question: \"What is the largasdasdadest planet in our solar system?\",\n    type: \"radio\",\n    // Single choice\n    options: [\"Eardsath\", \"Mars\", \"Jupiter\", \"Venus\"]\n  }];\n  const App = ({\n    initialTime,\n    questions\n  }) => {\n    _s();\n    const [showQuiz, setShowQuiz] = useState(false);\n    const handleStartQuiz = () => {\n      setShowQuiz(true);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: showQuiz ? /*#__PURE__*/_jsxDEV(Quiz, {\n        initialTime: initialTime,\n        questions: questions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Instruction, {\n        initialTime: initialTime,\n        questions: questions,\n        onStartQuiz: handleStartQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  };\n  _s(App, \"0NN0ZK/ZeTWEs+JrI/0AeS/CC1s=\");\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Quiz","Instruction","jsxDEV","_jsxDEV","App","_s","$RefreshSig$","initialTime","questions","question","type","options","showQuiz","setShowQuiz","handleStartQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStartQuiz","_c","$RefreshReg$"],"sources":["/home/sk/Documents/quiz-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Quiz from \"./components/Quiz\";\nimport Instruction from \"./components/Instruction\";\n\nconst App = () => {\n  const initialTime = 10; // 5 minutes (300 seconds)\n\n  // Example questions data\n  const questions = [\n    {\n      question: \"Which of the following are fruits?\",\n      type: \"checkbox\", // This will render checkboxes (multiple choice)\n      options: [\"Apple\", \"Carrot\", \"Banana\", \"Broccoli\"],\n    },\n    {\n      question: \"What is the capital of France?\",\n      type: \"radio\", // This will render radio buttons (single choice)\n      options: [\"Berlin\", \"Madrid\", \"Paris\", \"Rome\"],\n    },\n    {\n      question: \"Which programming languages do you know?\",\n      type: \"checkbox\", // Multiple choice\n      options: [\"Python\", \"JavaScript\", \"C++\", \"Ruby\"],\n    },\n    {\n      question: \"What is the largest planet in our solar system?\",\n      type: \"radio\", // Single choice\n      options: [\"Earth\", \"Mars\", \"Jupiter\", \"Venus\"],\n    },\n    {\n      question: \"What is the largasdasdadest planet in our solar system?\",\n      type: \"radio\", // Single choice\n      options: [\"Eardsath\", \"Mars\", \"Jupiter\", \"Venus\"],\n    },\n  ];\n\n  const App = ({ initialTime, questions }) => {\n    const [showQuiz, setShowQuiz] = useState(false);\n\n    const handleStartQuiz = () => {\n      setShowQuiz(true);\n    };\n\n    return (\n      <div className=\"App\">\n        {showQuiz ? (\n          <Quiz initialTime={initialTime} questions={questions} />\n        ) : (\n          <Instruction\n            initialTime={initialTime}\n            questions={questions}\n            onStartQuiz={handleStartQuiz}\n          />\n        )}\n      </div>\n    );\n  };\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAChB,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAC;;EAExB;EACA,MAAMC,SAAS,GAAG,CAChB;IACEC,QAAQ,EAAE,oCAAoC;IAC9CC,IAAI,EAAE,UAAU;IAAE;IAClBC,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU;EACnD,CAAC,EACD;IACEF,QAAQ,EAAE,gCAAgC;IAC1CC,IAAI,EAAE,OAAO;IAAE;IACfC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM;EAC/C,CAAC,EACD;IACEF,QAAQ,EAAE,0CAA0C;IACpDC,IAAI,EAAE,UAAU;IAAE;IAClBC,OAAO,EAAE,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM;EACjD,CAAC,EACD;IACEF,QAAQ,EAAE,iDAAiD;IAC3DC,IAAI,EAAE,OAAO;IAAE;IACfC,OAAO,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO;EAC/C,CAAC,EACD;IACEF,QAAQ,EAAE,yDAAyD;IACnEC,IAAI,EAAE,OAAO;IAAE;IACfC,OAAO,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO;EAClD,CAAC,CACF;EAED,MAAMP,GAAG,GAAGA,CAAC;IAAEG,WAAW;IAAEC;EAAU,CAAC,KAAK;IAAAH,EAAA;IAC1C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;IAE/C,MAAMe,eAAe,GAAGA,CAAA,KAAM;MAC5BD,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,oBACEV,OAAA;MAAKY,SAAS,EAAC,KAAK;MAAAC,QAAA,EACjBJ,QAAQ,gBACPT,OAAA,CAACH,IAAI;QAACO,WAAW,EAAEA,WAAY;QAACC,SAAS,EAAEA;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAExDjB,OAAA,CAACF,WAAW;QACVM,WAAW,EAAEA,WAAY;QACzBC,SAAS,EAAEA,SAAU;QACrBa,WAAW,EAAEP;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV,CAAC;EAACf,EAAA,CApBID,GAAG;AAqBX,CAAC;AAACkB,EAAA,GArDIlB,GAAG;AAuDT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}