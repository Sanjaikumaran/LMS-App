{"ast":null,"code":"var _jsxFileName = \"/home/sk/Documents/quiz-app/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/Quiz.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  initialTime,\n  questions = []\n}) => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(initialTime); // Initial time from DB\n  const [totalTime, setTotalTime] = useState(initialTime); // Also store total time\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0); // Index to track the current question\n  const [selectedOptions, setSelectedOptions] = useState([]); // Store selected options for each question\n\n  const totalQuestions = questions.length; // Total number of questions\n\n  // Timer logic, decrements timeLeft every second\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer); // Clear the timer on component unmount\n    }\n  }, [timeLeft]);\n\n  // Handle option selection\n  const handleOptionSelect = (option, type) => {\n    const updatedSelections = [...selectedOptions];\n    if (type === \"radio\") {\n      // For radio, only one option is allowed\n      updatedSelections[currentQuestionIndex] = option;\n    } else if (type === \"checkbox\") {\n      // For checkboxes, toggle the option in the selected array\n      const currentSelections = updatedSelections[currentQuestionIndex] || [];\n      if (currentSelections.includes(option)) {\n        // Remove if already selected\n        updatedSelections[currentQuestionIndex] = currentSelections.filter(o => o !== option);\n      } else {\n        // Add if not selected\n        updatedSelections[currentQuestionIndex] = [...currentSelections, option];\n      }\n    }\n    setSelectedOptions(updatedSelections);\n  };\n\n  // Go to the next question\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1); // Go to the next question\n    }\n  };\n\n  // Go to the previous question\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prevIndex => prevIndex - 1); // Go to the previous question\n    }\n  };\n\n  // Handle quiz submission\n  const handleSubmit = () => {\n    console.log(\"Quiz Submitted:\", selectedOptions);\n    alert(\"Quiz Submitted!\");\n  };\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedOption = selectedOptions[currentQuestionIndex] || [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: \"Company Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#home\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#about\",\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#contact\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-app\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"options\",\n              children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleOptionSelect(option, currentQuestion.type) // Click on li selects the option\n                ,\n                className: `\n                option \n                ${currentQuestion.type === \"radio\" && selectedOption === option ? \"selected\" : \"\"}\n                ${currentQuestion.type === \"checkbox\" && selectedOption.includes(option) ? \"selected\" : \"\"}\n            `,\n                children: (currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.type) === \"radio\" ? /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: `question-${currentQuestionIndex}`,\n                    value: option,\n                    checked: selectedOption === option,\n                    onChange: () => handleOptionSelect(option, \"radio\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 23\n                  }, this), option]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: `question-${currentQuestionIndex}`,\n                    value: option,\n                    checked: selectedOption.includes(option),\n                    onChange: () => handleOptionSelect(option, \"checkbox\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 23\n                  }, this), option]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePreviousQuestion,\n            disabled: currentQuestionIndex === 0,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this), currentQuestionIndex < totalQuestions - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextQuestion,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question \", currentQuestionIndex + 1, \" of \", totalQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-circle\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              r: \"50\",\n              cx: \"60\",\n              cy: \"60\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              r: \"50\",\n              cx: \"60\",\n              cy: \"60\",\n              style: {\n                strokeDasharray: 314,\n                strokeDashoffset: 314 - timeLeft / totalTime * 314,\n                // Dynamic time calculation\n                transition: \"stroke-dashoffset 1s linear\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer-text\",\n            children: [Math.floor(timeLeft / 60), \"m \", timeLeft % 60, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Time Remaining\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Quiz, \"kRIazeqex+by/5EIp32OiVhIaXI=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","initialTime","questions","_s","timeLeft","setTimeLeft","totalTime","setTotalTime","currentQuestionIndex","setCurrentQuestionIndex","selectedOptions","setSelectedOptions","totalQuestions","length","timer","setTimeout","clearTimeout","handleOptionSelect","option","type","updatedSelections","currentSelections","includes","filter","o","handleNextQuestion","prevIndex","handlePreviousQuestion","handleSubmit","console","log","alert","currentQuestion","selectedOption","children","className","fileName","_jsxFileName","lineNumber","columnNumber","href","question","options","map","index","onClick","name","value","checked","onChange","disabled","r","cx","cy","style","strokeDasharray","strokeDashoffset","transition","Math","floor","_c","$RefreshReg$"],"sources":["/home/sk/Documents/quiz-app/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/Quiz.css\";\n\nconst Quiz = ({ initialTime, questions = [] }) => {\n  const [timeLeft, setTimeLeft] = useState(initialTime); // Initial time from DB\n  const [totalTime, setTotalTime] = useState(initialTime); // Also store total time\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0); // Index to track the current question\n  const [selectedOptions, setSelectedOptions] = useState([]); // Store selected options for each question\n\n  const totalQuestions = questions.length; // Total number of questions\n\n  // Timer logic, decrements timeLeft every second\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer); // Clear the timer on component unmount\n    }\n  }, [timeLeft]);\n\n  // Handle option selection\n  const handleOptionSelect = (option, type) => {\n    const updatedSelections = [...selectedOptions];\n\n    if (type === \"radio\") {\n      // For radio, only one option is allowed\n      updatedSelections[currentQuestionIndex] = option;\n    } else if (type === \"checkbox\") {\n      // For checkboxes, toggle the option in the selected array\n      const currentSelections = updatedSelections[currentQuestionIndex] || [];\n      if (currentSelections.includes(option)) {\n        // Remove if already selected\n        updatedSelections[currentQuestionIndex] = currentSelections.filter(\n          (o) => o !== option\n        );\n      } else {\n        // Add if not selected\n        updatedSelections[currentQuestionIndex] = [\n          ...currentSelections,\n          option,\n        ];\n      }\n    }\n\n    setSelectedOptions(updatedSelections);\n  };\n\n  // Go to the next question\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex((prevIndex) => prevIndex + 1); // Go to the next question\n    }\n  };\n\n  // Go to the previous question\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex((prevIndex) => prevIndex - 1); // Go to the previous question\n    }\n  };\n\n  // Handle quiz submission\n  const handleSubmit = () => {\n    console.log(\"Quiz Submitted:\", selectedOptions);\n    alert(\"Quiz Submitted!\");\n  };\n\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedOption = selectedOptions[currentQuestionIndex] || [];\n\n  return (\n    <>\n      {\" \"}\n      {/* Top Navigation Bar */}\n      <div>\n        <nav className=\"navbar\">\n          <div className=\"logo\">Company Name</div>\n          <div className=\"nav-links\">\n            <a href=\"#home\">Home</a>\n            <a href=\"#about\">About</a>\n            <a href=\"#contact\">Contact</a>\n          </div>\n        </nav>\n      </div>\n      <div className=\"quiz-body\">\n      <div className=\"quiz-app\">\n        {/* Main Content Area */}\n        <div className=\"quiz-content\">\n          <div className=\"question-section\">\n            <h1>{currentQuestion?.question}</h1>\n            <ul className=\"options\">\n              {currentQuestion?.options.map((option, index) => (\n                <li\n                  key={index}\n                  onClick={() =>\n                    handleOptionSelect(option, currentQuestion.type)\n                  } // Click on li selects the option\n                  className={`\n                option \n                ${\n                  currentQuestion.type === \"radio\" && selectedOption === option\n                    ? \"selected\"\n                    : \"\"\n                }\n                ${\n                  currentQuestion.type === \"checkbox\" &&\n                  selectedOption.includes(option)\n                    ? \"selected\"\n                    : \"\"\n                }\n            `}\n                >\n                  {currentQuestion?.type === \"radio\" ? (\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name={`question-${currentQuestionIndex}`}\n                        value={option}\n                        checked={selectedOption === option}\n                        onChange={() => handleOptionSelect(option, \"radio\")}\n                      />\n                      {option}\n                    </label>\n                  ) : (\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        name={`question-${currentQuestionIndex}`}\n                        value={option}\n                        checked={selectedOption.includes(option)}\n                        onChange={() => handleOptionSelect(option, \"checkbox\")}\n                      />\n                      {option}\n                    </label>\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n\n        {/* Navigation and Footer Section */}\n        <div className=\"footer\">\n          <button\n            onClick={handlePreviousQuestion}\n            disabled={currentQuestionIndex === 0}\n          >\n            Previous\n          </button>\n          {currentQuestionIndex < totalQuestions - 1 ? (\n            <button onClick={handleNextQuestion}>Next</button>\n          ) : (\n            <button onClick={handleSubmit}>Submit</button>\n          )}\n          <p>\n            Question {currentQuestionIndex + 1} of {totalQuestions}\n          </p>\n        </div>\n      </div>\n      {/* Timer Section */}\n      <div className=\"timer-section\">\n        <div className=\"timer-circle\">\n          <svg>\n            <circle r=\"50\" cx=\"60\" cy=\"60\"></circle>\n            <circle\n              r=\"50\"\n              cx=\"60\"\n              cy=\"60\"\n              style={{\n                strokeDasharray: 314,\n                strokeDashoffset: 314 - (timeLeft / totalTime) * 314, // Dynamic time calculation\n                transition: \"stroke-dashoffset 1s linear\",\n              }}\n            ></circle>\n          </svg>\n          <div className=\"timer-text\">\n            {Math.floor(timeLeft / 60)}m {timeLeft % 60}s\n          </div>\n        </div>\n        <div>Time Remaining</div>\n      </div></div>\n    </>\n  );\n};\n\nexport default Quiz;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,IAAI,GAAGA,CAAC;EAAEC,WAAW;EAAEC,SAAS,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACO,WAAW,CAAC,CAAC,CAAC;EACvD,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAACO,WAAW,CAAC,CAAC,CAAC;EACzD,MAAM,CAACO,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrE,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5D,MAAMkB,cAAc,GAAGV,SAAS,CAACW,MAAM,CAAC,CAAC;;EAEzC;EACAlB,SAAS,CAAC,MAAM;IACd,IAAIS,QAAQ,GAAG,CAAC,EAAE;MAChB,MAAMU,KAAK,GAAGC,UAAU,CAAC,MAAMV,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;MAC/D,OAAO,MAAMY,YAAY,CAACF,KAAK,CAAC,CAAC,CAAC;IACpC;EACF,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMa,kBAAkB,GAAGA,CAACC,MAAM,EAAEC,IAAI,KAAK;IAC3C,MAAMC,iBAAiB,GAAG,CAAC,GAAGV,eAAe,CAAC;IAE9C,IAAIS,IAAI,KAAK,OAAO,EAAE;MACpB;MACAC,iBAAiB,CAACZ,oBAAoB,CAAC,GAAGU,MAAM;IAClD,CAAC,MAAM,IAAIC,IAAI,KAAK,UAAU,EAAE;MAC9B;MACA,MAAME,iBAAiB,GAAGD,iBAAiB,CAACZ,oBAAoB,CAAC,IAAI,EAAE;MACvE,IAAIa,iBAAiB,CAACC,QAAQ,CAACJ,MAAM,CAAC,EAAE;QACtC;QACAE,iBAAiB,CAACZ,oBAAoB,CAAC,GAAGa,iBAAiB,CAACE,MAAM,CAC/DC,CAAC,IAAKA,CAAC,KAAKN,MACf,CAAC;MACH,CAAC,MAAM;QACL;QACAE,iBAAiB,CAACZ,oBAAoB,CAAC,GAAG,CACxC,GAAGa,iBAAiB,EACpBH,MAAM,CACP;MACH;IACF;IAEAP,kBAAkB,CAACS,iBAAiB,CAAC;EACvC,CAAC;;EAED;EACA,MAAMK,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIjB,oBAAoB,GAAGI,cAAc,GAAG,CAAC,EAAE;MAC7CH,uBAAuB,CAAEiB,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;IACzD;EACF,CAAC;;EAED;EACA,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACnC,IAAInB,oBAAoB,GAAG,CAAC,EAAE;MAC5BC,uBAAuB,CAAEiB,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;IACzD;EACF,CAAC;;EAED;EACA,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEpB,eAAe,CAAC;IAC/CqB,KAAK,CAAC,iBAAiB,CAAC;EAC1B,CAAC;EAED,MAAMC,eAAe,GAAG9B,SAAS,CAACM,oBAAoB,CAAC;EACvD,MAAMyB,cAAc,GAAGvB,eAAe,CAACF,oBAAoB,CAAC,IAAI,EAAE;EAElE,oBACEX,OAAA,CAAAE,SAAA;IAAAmC,QAAA,GACG,GAAG,eAEJrC,OAAA;MAAAqC,QAAA,eACErC,OAAA;QAAKsC,SAAS,EAAC,QAAQ;QAAAD,QAAA,gBACrBrC,OAAA;UAAKsC,SAAS,EAAC,MAAM;UAAAD,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxC1C,OAAA;UAAKsC,SAAS,EAAC,WAAW;UAAAD,QAAA,gBACxBrC,OAAA;YAAG2C,IAAI,EAAC,OAAO;YAAAN,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACxB1C,OAAA;YAAG2C,IAAI,EAAC,QAAQ;YAAAN,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC1B1C,OAAA;YAAG2C,IAAI,EAAC,UAAU;YAAAN,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN1C,OAAA;MAAKsC,SAAS,EAAC,WAAW;MAAAD,QAAA,gBAC1BrC,OAAA;QAAKsC,SAAS,EAAC,UAAU;QAAAD,QAAA,gBAEvBrC,OAAA;UAAKsC,SAAS,EAAC,cAAc;UAAAD,QAAA,eAC3BrC,OAAA;YAAKsC,SAAS,EAAC,kBAAkB;YAAAD,QAAA,gBAC/BrC,OAAA;cAAAqC,QAAA,EAAKF,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAES;YAAQ;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpC1C,OAAA;cAAIsC,SAAS,EAAC,SAAS;cAAAD,QAAA,EACpBF,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEU,OAAO,CAACC,GAAG,CAAC,CAACzB,MAAM,EAAE0B,KAAK,kBAC1C/C,OAAA;gBAEEgD,OAAO,EAAEA,CAAA,KACP5B,kBAAkB,CAACC,MAAM,EAAEc,eAAe,CAACb,IAAI,CAChD,CAAC;gBAAA;gBACFgB,SAAS,EAAE;AAC7B;AACA,kBACkBH,eAAe,CAACb,IAAI,KAAK,OAAO,IAAIc,cAAc,KAAKf,MAAM,GACzD,UAAU,GACV,EAAE;AACxB,kBAEkBc,eAAe,CAACb,IAAI,KAAK,UAAU,IACnCc,cAAc,CAACX,QAAQ,CAACJ,MAAM,CAAC,GAC3B,UAAU,GACV,EAAE;AACxB,aACc;gBAAAgB,QAAA,EAEK,CAAAF,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEb,IAAI,MAAK,OAAO,gBAChCtB,OAAA;kBAAAqC,QAAA,gBACErC,OAAA;oBACEsB,IAAI,EAAC,OAAO;oBACZ2B,IAAI,EAAE,YAAYtC,oBAAoB,EAAG;oBACzCuC,KAAK,EAAE7B,MAAO;oBACd8B,OAAO,EAAEf,cAAc,KAAKf,MAAO;oBACnC+B,QAAQ,EAAEA,CAAA,KAAMhC,kBAAkB,CAACC,MAAM,EAAE,OAAO;kBAAE;oBAAAkB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrD,CAAC,EACDrB,MAAM;gBAAA;kBAAAkB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CAAC,gBAER1C,OAAA;kBAAAqC,QAAA,gBACErC,OAAA;oBACEsB,IAAI,EAAC,UAAU;oBACf2B,IAAI,EAAE,YAAYtC,oBAAoB,EAAG;oBACzCuC,KAAK,EAAE7B,MAAO;oBACd8B,OAAO,EAAEf,cAAc,CAACX,QAAQ,CAACJ,MAAM,CAAE;oBACzC+B,QAAQ,EAAEA,CAAA,KAAMhC,kBAAkB,CAACC,MAAM,EAAE,UAAU;kBAAE;oBAAAkB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxD,CAAC,EACDrB,MAAM;gBAAA;kBAAAkB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF;cACR,GAzCIK,KAAK;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA0CR,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGN1C,OAAA;UAAKsC,SAAS,EAAC,QAAQ;UAAAD,QAAA,gBACrBrC,OAAA;YACEgD,OAAO,EAAElB,sBAAuB;YAChCuB,QAAQ,EAAE1C,oBAAoB,KAAK,CAAE;YAAA0B,QAAA,EACtC;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACR/B,oBAAoB,GAAGI,cAAc,GAAG,CAAC,gBACxCf,OAAA;YAAQgD,OAAO,EAAEpB,kBAAmB;YAAAS,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,gBAElD1C,OAAA;YAAQgD,OAAO,EAAEjB,YAAa;YAAAM,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAC9C,eACD1C,OAAA;YAAAqC,QAAA,GAAG,WACQ,EAAC1B,oBAAoB,GAAG,CAAC,EAAC,MAAI,EAACI,cAAc;UAAA;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN1C,OAAA;QAAKsC,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAC5BrC,OAAA;UAAKsC,SAAS,EAAC,cAAc;UAAAD,QAAA,gBAC3BrC,OAAA;YAAAqC,QAAA,gBACErC,OAAA;cAAQsD,CAAC,EAAC,IAAI;cAACC,EAAE,EAAC,IAAI;cAACC,EAAE,EAAC;YAAI;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,eACxC1C,OAAA;cACEsD,CAAC,EAAC,IAAI;cACNC,EAAE,EAAC,IAAI;cACPC,EAAE,EAAC,IAAI;cACPC,KAAK,EAAE;gBACLC,eAAe,EAAE,GAAG;gBACpBC,gBAAgB,EAAE,GAAG,GAAIpD,QAAQ,GAAGE,SAAS,GAAI,GAAG;gBAAE;gBACtDmD,UAAU,EAAE;cACd;YAAE;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACN1C,OAAA;YAAKsC,SAAS,EAAC,YAAY;YAAAD,QAAA,GACxBwB,IAAI,CAACC,KAAK,CAACvD,QAAQ,GAAG,EAAE,CAAC,EAAC,IAAE,EAACA,QAAQ,GAAG,EAAE,EAAC,GAC9C;UAAA;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACN1C,OAAA;UAAAqC,QAAA,EAAK;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eACZ,CAAC;AAEP,CAAC;AAACpC,EAAA,CAnLIH,IAAI;AAAA4D,EAAA,GAAJ5D,IAAI;AAqLV,eAAeA,IAAI;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}