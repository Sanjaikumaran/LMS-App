{"ast":null,"code":"var _jsxFileName = \"/home/sk/Documents/quiz-app/client/src/pages/Tests.js\",\n  _s = $RefreshSig$();\nimport \"../styles/Students.css\";\nimport { useState } from \"react\";\nimport components from \"./components\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  DataTableManagement,\n  handleApiCall,\n  Modal\n} = components;\nconst Tests = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalOptions, setModalOptions] = useState();\n  const setTime = async () => {\n    const overlay = document.createElement(\"div\");\n    overlay.className = \"overlay\";\n    document.body.appendChild(overlay);\n    const modalContainer = document.createElement(\"div\");\n    modalContainer.className = \"modal-container\";\n    const createInputField = (column, value = \"\") => {\n      const inputField = document.createElement(\"input\");\n      inputField.className = column;\n      inputField.placeholder = column;\n      inputField.value = value;\n      inputField.type = \"number\";\n      return inputField;\n    };\n    try {\n      const response = await handleApiCall({\n        API: \"find-data\",\n        data: {\n          collection: \"Tests\",\n          condition: {\n            title: \"Time\"\n          }\n        }\n      });\n      const columns = response.flag ? Object.keys(response.data.result).filter(key => key !== \"_id\") : [\"Hours\", \"Minutes\", \"Seconds\"];\n      columns.forEach(column => {\n        modalContainer.appendChild(createInputField(column, response.flag ? response.data.result[column] : \"\"));\n      });\n    } catch (error) {\n      console.error(error.message);\n      [\"Hours\", \"Minutes\", \"Seconds\"].forEach(column => {\n        modalContainer.appendChild(createInputField(column));\n      });\n    } finally {\n      const saveButton = document.createElement(\"button\");\n      saveButton.innerText = \"Save\";\n      saveButton.onclick = async () => {\n        let data = {\n          title: \"Time\"\n        };\n        const fields = Array.from(document.querySelectorAll(\".modal-container input\"));\n        fields.forEach(field => data[field.className] = parseInt(field.value, 10) || 0);\n        try {\n          const response = await handleApiCall({\n            API: \"update-data\",\n            data: {\n              condition: {\n                title: \"Time\"\n              },\n              data,\n              collection: \"Tests\"\n            }\n          });\n          if (response.flag) {\n            showModal(\"Info\", \"Time Updated Successfully!\", [\"Ok\"], closeModalAndCleanup);\n          } else {\n            throw new Error(\"Update failed\");\n          }\n        } catch (error) {\n          try {\n            const response = await handleApiCall({\n              API: \"insert-data\",\n              data: {\n                data,\n                collection: \"Tests\"\n              }\n            });\n            showModal(response.flag ? \"Info\" : \"Error\", response.flag ? \"Time Added Successfully!\" : \"Error Saving Time Data\", [\"Ok\"], closeModalAndCleanup);\n          } catch (error) {\n            console.error(error);\n            showModal(\"Uncaught Error\", \"Error Saving Time Data\", [\"Ok\"], closeModalAndCleanup);\n          }\n        }\n      };\n      const closeButton = document.createElement(\"button\");\n      closeButton.innerText = \"Close\";\n      closeButton.onclick = closeModalAndCleanup;\n      modalContainer.appendChild(saveButton);\n      modalContainer.appendChild(closeButton);\n      document.body.appendChild(modalContainer);\n    }\n    const closeModalAndCleanup = () => {\n      modalContainer.remove();\n      document.body.removeChild(overlay);\n    };\n  };\n  const showModal = (type, message, buttons, responseFunc) => {\n    setModalOptions({\n      type,\n      message,\n      buttons,\n      responseFunc\n    });\n    setIsModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataTableManagement, {\n      tablePageName: \"Test\",\n      collectionName: \"Tests\",\n      actionButtons: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"upload-button\",\n        onClick: setTime,\n        children: \"Set Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      modalType: modalOptions.type || \"Info\",\n      modalMessage: modalOptions.message || \"An unexpected issue occurred.\",\n      buttons: modalOptions.buttons || [\"Ok\"],\n      response: modalOptions.responseFunc || (() => setIsModalOpen(false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Tests, \"Oced2ulObc1Bnh1x5YWdfyy0Ar8=\");\n_c = Tests;\nexport default Tests;\nvar _c;\n$RefreshReg$(_c, \"Tests\");","map":{"version":3,"names":["useState","components","jsxDEV","_jsxDEV","Fragment","_Fragment","DataTableManagement","handleApiCall","Modal","Tests","_s","isModalOpen","setIsModalOpen","modalOptions","setModalOptions","setTime","overlay","document","createElement","className","body","appendChild","modalContainer","createInputField","column","value","inputField","placeholder","type","response","API","data","collection","condition","title","columns","flag","Object","keys","result","filter","key","forEach","error","console","message","saveButton","innerText","onclick","fields","Array","from","querySelectorAll","field","parseInt","showModal","closeModalAndCleanup","Error","closeButton","remove","removeChild","buttons","responseFunc","children","tablePageName","collectionName","actionButtons","onClick","fileName","_jsxFileName","lineNumber","columnNumber","modalType","modalMessage","_c","$RefreshReg$"],"sources":["/home/sk/Documents/quiz-app/client/src/pages/Tests.js"],"sourcesContent":["import \"../styles/Students.css\";\nimport { useState } from \"react\";\nimport components from \"./components\";\nconst { DataTableManagement, handleApiCall, Modal } = components;\n\nconst Tests = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalOptions, setModalOptions] = useState();\n\n  const setTime = async () => {\n    const overlay = document.createElement(\"div\");\n    overlay.className = \"overlay\";\n    document.body.appendChild(overlay);\n\n    const modalContainer = document.createElement(\"div\");\n    modalContainer.className = \"modal-container\";\n\n    const createInputField = (column, value = \"\") => {\n      const inputField = document.createElement(\"input\");\n      inputField.className = column;\n      inputField.placeholder = column;\n      inputField.value = value;\n      inputField.type = \"number\";\n      return inputField;\n    };\n\n    try {\n      const response = await handleApiCall({\n        API: \"find-data\",\n        data: { collection: \"Tests\", condition: { title: \"Time\" } },\n      });\n\n      const columns = response.flag\n        ? Object.keys(response.data.result).filter((key) => key !== \"_id\")\n        : [\"Hours\", \"Minutes\", \"Seconds\"];\n      columns.forEach((column) => {\n        modalContainer.appendChild(\n          createInputField(\n            column,\n            response.flag ? response.data.result[column] : \"\"\n          )\n        );\n      });\n    } catch (error) {\n      console.error(error.message);\n      [\"Hours\", \"Minutes\", \"Seconds\"].forEach((column) => {\n        modalContainer.appendChild(createInputField(column));\n      });\n    } finally {\n      const saveButton = document.createElement(\"button\");\n      saveButton.innerText = \"Save\";\n      saveButton.onclick = async () => {\n        let data = { title: \"Time\" };\n        const fields = Array.from(\n          document.querySelectorAll(\".modal-container input\")\n        );\n        fields.forEach(\n          (field) => (data[field.className] = parseInt(field.value, 10) || 0)\n        );\n\n        try {\n          const response = await handleApiCall({\n            API: \"update-data\",\n            data: {\n              condition: { title: \"Time\" },\n              data,\n              collection: \"Tests\",\n            },\n          });\n          if (response.flag) {\n            showModal(\n              \"Info\",\n              \"Time Updated Successfully!\",\n              [\"Ok\"],\n              closeModalAndCleanup\n            );\n          } else {\n            throw new Error(\"Update failed\");\n          }\n        } catch (error) {\n          try {\n            const response = await handleApiCall({\n              API: \"insert-data\",\n              data: { data, collection: \"Tests\" },\n            });\n            showModal(\n              response.flag ? \"Info\" : \"Error\",\n              response.flag\n                ? \"Time Added Successfully!\"\n                : \"Error Saving Time Data\",\n              [\"Ok\"],\n              closeModalAndCleanup\n            );\n          } catch (error) {\n            console.error(error);\n            showModal(\n              \"Uncaught Error\",\n              \"Error Saving Time Data\",\n              [\"Ok\"],\n              closeModalAndCleanup\n            );\n          }\n        }\n      };\n\n      const closeButton = document.createElement(\"button\");\n      closeButton.innerText = \"Close\";\n      closeButton.onclick = closeModalAndCleanup;\n\n      modalContainer.appendChild(saveButton);\n      modalContainer.appendChild(closeButton);\n      document.body.appendChild(modalContainer);\n    }\n\n    const closeModalAndCleanup = () => {\n      modalContainer.remove();\n      document.body.removeChild(overlay);\n    };\n  };\n\n  const showModal = (type, message, buttons, responseFunc) => {\n    setModalOptions({ type, message, buttons, responseFunc });\n    setIsModalOpen(true);\n  };\n  return (\n    <>\n      <DataTableManagement\n        tablePageName={\"Test\"}\n        collectionName={\"Tests\"}\n        actionButtons={\n          <button type=\"button\" className=\"upload-button\" onClick={setTime}>\n            Set Time\n          </button>\n        }\n      />\n      {isModalOpen && (\n        <Modal\n          modalType={modalOptions.type || \"Info\"}\n          modalMessage={modalOptions.message || \"An unexpected issue occurred.\"}\n          buttons={modalOptions.buttons || [\"Ok\"]}\n          response={modalOptions.responseFunc || (() => setIsModalOpen(false))}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Tests;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}