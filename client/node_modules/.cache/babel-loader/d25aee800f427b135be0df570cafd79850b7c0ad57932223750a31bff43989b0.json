{"ast":null,"code":"var _jsxFileName = \"/home/sk/Documents/quiz-app/client/src/pages/Tests.js\",\n  _s = $RefreshSig$();\nimport \"../styles/Students.css\";\nimport { useState } from \"react\";\nimport components from \"./components\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  DataTableManagement,\n  handleApiCall,\n  Modal\n} = components;\nconst Tests = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalOptions, setModalOptions] = useState();\n  const [isFormModalOpen, setIsFormModalOpen] = useState(false);\n  const showModal = (type, message, buttons, responseFunc) => {\n    setModalOptions({\n      type,\n      message,\n      buttons,\n      responseFunc\n    });\n    setIsModalOpen(true);\n  };\n  const setTime = async () => {\n    setIsFormModalOpen(true);\n    const overlay = document.createElement(\"div\");\n    overlay.className = \"overlay\";\n    document.body.appendChild(overlay);\n    const modalContainer = document.createElement(\"div\");\n    modalContainer.className = \"modal-container\";\n    const createInputField = (column, value = \"\") => {\n      const inputField = document.createElement(\"input\");\n      inputField.className = column;\n      inputField.placeholder = column;\n      inputField.value = value;\n      inputField.type = \"number\";\n      return inputField;\n    };\n    try {\n      const response = await handleApiCall({\n        API: \"find-data\",\n        data: {\n          collection: \"Tests\",\n          condition: {\n            title: \"Time\"\n          }\n        }\n      });\n      if (response.flag) {\n        delete response.data.result[\"_id\"];\n        const data = response.data.result;\n        [\"Hours\", \"Minutes\", \"Seconds\"].forEach(column => {\n          modalContainer.appendChild(createInputField(column, data[column]));\n        });\n      } else {\n        [\"Hours\", \"Minutes\", \"Seconds\"].forEach(column => {\n          modalContainer.appendChild(createInputField(column));\n        });\n      }\n    } catch (error) {\n      console.log(error.message);\n      [\"Hours\", \"Minutes\", \"Seconds\"].forEach(column => {\n        modalContainer.appendChild(createInputField(column));\n      });\n    } finally {\n      const saveButton = document.createElement(\"button\");\n      saveButton.innerText = \"Save\";\n      saveButton.onclick = async () => {\n        let data = {\n          title: \"Time\"\n        };\n        [\"Hours\", \"Minutes\", \"Seconds\"].forEach(column => {\n          const val = document.getElementsByClassName(column)[0].value;\n          data[column] = parseInt(val, 10);\n        });\n        try {\n          const response = await handleApiCall({\n            API: \"update-data\",\n            data: {\n              condition: {\n                title: \"Time\"\n              },\n              data: data,\n              collection: \"Tests\"\n            }\n          });\n          if (response.flag) {\n            showModal(\"Info\", \"Time Updated Successfully!\", [\"Ok\"], () => {\n              closeModalAndCleanup();\n            });\n            console.log(response);\n          } else {\n            throw new Error(\"Update failed\");\n          }\n        } catch (error) {\n          try {\n            await handleApiCall({\n              API: \"insert-data\",\n              data: {\n                data,\n                collection: \"Tests\"\n              }\n            });\n            showModal(\"Info\", \"Time Added Successfully!\", [\"Ok\"], () => {\n              closeModalAndCleanup();\n            });\n          } catch (error) {\n            console.error(error);\n            showModal(\"Error\", \"Error Saving Time Data\", [\"Ok\"]);\n          }\n        }\n      };\n      const closeButton = document.createElement(\"button\");\n      closeButton.innerText = \"Close\";\n      closeButton.onclick = () => closeModalAndCleanup();\n      modalContainer.appendChild(saveButton);\n      modalContainer.appendChild(closeButton);\n      document.body.appendChild(modalContainer);\n    }\n    const closeModalAndCleanup = () => {\n      setIsFormModalOpen(false);\n      modalContainer.remove();\n      document.body.removeChild(overlay);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DataTableManagement, {\n      tablePageName: \"Test\",\n      collectionName: \"Tests\",\n      actionButtons: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"upload-button\",\n        onClick: setTime,\n        children: \"Set Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Tests, \"DAvU8APHzkICbPxvCEEcZ1Z/nP4=\");\n_c = Tests;\nexport default Tests;\nvar _c;\n$RefreshReg$(_c, \"Tests\");","map":{"version":3,"names":["useState","components","jsxDEV","_jsxDEV","Fragment","_Fragment","DataTableManagement","handleApiCall","Modal","Tests","_s","isModalOpen","setIsModalOpen","modalOptions","setModalOptions","isFormModalOpen","setIsFormModalOpen","showModal","type","message","buttons","responseFunc","setTime","overlay","document","createElement","className","body","appendChild","modalContainer","createInputField","column","value","inputField","placeholder","response","API","data","collection","condition","title","flag","result","forEach","error","console","log","saveButton","innerText","onclick","val","getElementsByClassName","parseInt","closeModalAndCleanup","Error","closeButton","remove","removeChild","children","tablePageName","collectionName","actionButtons","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sk/Documents/quiz-app/client/src/pages/Tests.js"],"sourcesContent":["import \"../styles/Students.css\";\nimport { useState } from \"react\";\nimport components from \"./components\";\nconst { DataTableManagement, handleApiCall, Modal } = components;\n\nconst Tests = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalOptions, setModalOptions] = useState();\n\n  const [isFormModalOpen, setIsFormModalOpen] = useState(false);\n  const showModal = (type, message, buttons, responseFunc) => {\n    setModalOptions({ type, message, buttons, responseFunc });\n    setIsModalOpen(true);\n  };\n\n  const setTime = async () => {\n    setIsFormModalOpen(true);\n\n    const overlay = document.createElement(\"div\");\n    overlay.className = \"overlay\";\n    document.body.appendChild(overlay);\n\n    const modalContainer = document.createElement(\"div\");\n    modalContainer.className = \"modal-container\";\n\n    const createInputField = (column, value = \"\") => {\n      const inputField = document.createElement(\"input\");\n      inputField.className = column;\n      inputField.placeholder = column;\n      inputField.value = value;\n      inputField.type = \"number\";\n      return inputField;\n    };\n\n    try {\n      const response = await handleApiCall({\n        API: \"find-data\",\n        data: { collection: \"Tests\", condition: { title: \"Time\" } },\n      });\n\n      if (response.flag) {\n        delete response.data.result[\"_id\"];\n        const data = response.data.result;\n        [\"Hours\", \"Minutes\", \"Seconds\"].forEach((column) => {\n          modalContainer.appendChild(createInputField(column, data[column]));\n        });\n      } else {\n        [\"Hours\", \"Minutes\", \"Seconds\"].forEach((column) => {\n          modalContainer.appendChild(createInputField(column));\n        });\n      }\n    } catch (error) {\n      console.log(error.message);\n      [\"Hours\", \"Minutes\", \"Seconds\"].forEach((column) => {\n        modalContainer.appendChild(createInputField(column));\n      });\n    } finally {\n      const saveButton = document.createElement(\"button\");\n      saveButton.innerText = \"Save\";\n      saveButton.onclick = async () => {\n        let data = { title: \"Time\" };\n        [\"Hours\", \"Minutes\", \"Seconds\"].forEach((column) => {\n          const val = document.getElementsByClassName(column)[0].value;\n          data[column] = parseInt(val, 10);\n        });\n\n        try {\n          const response = await handleApiCall({\n            API: \"update-data\",\n            data: {\n              condition: { title: \"Time\" },\n              data: data,\n              collection: \"Tests\",\n            },\n          });\n          if (response.flag) {\n            showModal(\"Info\", \"Time Updated Successfully!\", [\"Ok\"], () => {\n              closeModalAndCleanup();\n            });\n            console.log(response);\n          } else {\n            throw new Error(\"Update failed\");\n          }\n        } catch (error) {\n          try {\n            await handleApiCall({\n              API: \"insert-data\",\n              data: { data, collection: \"Tests\" },\n            });\n            showModal(\"Info\", \"Time Added Successfully!\", [\"Ok\"], () => {\n              closeModalAndCleanup();\n            });\n          } catch (error) {\n            console.error(error);\n            showModal(\"Error\", \"Error Saving Time Data\", [\"Ok\"]);\n          }\n        }\n      };\n\n      const closeButton = document.createElement(\"button\");\n      closeButton.innerText = \"Close\";\n      closeButton.onclick = () => closeModalAndCleanup();\n\n      modalContainer.appendChild(saveButton);\n      modalContainer.appendChild(closeButton);\n      document.body.appendChild(modalContainer);\n    }\n\n    const closeModalAndCleanup = () => {\n      setIsFormModalOpen(false);\n      modalContainer.remove();\n      document.body.removeChild(overlay);\n    };\n  };\n\n  return (\n    <>\n      <DataTableManagement\n        tablePageName={\"Test\"}\n        collectionName={\"Tests\"}\n        actionButtons={\n          <button type=\"button\" className=\"upload-button\" onClick={setTime}>\n            Set Time\n          </button>\n        }\n      />\n    </>\n  );\n};\n\nexport default Tests;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}