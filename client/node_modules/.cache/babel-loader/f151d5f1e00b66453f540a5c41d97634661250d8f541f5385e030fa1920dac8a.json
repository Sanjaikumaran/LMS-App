{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"../styles/Quiz.css\";import components from\"./components\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const{Navbar,Modal,handleApiCall}=components;const radius=50;const circumference=2*Math.PI*radius;const Quiz=()=>{const[isModalOpen,setIsModalOpen]=useState(false);const[modalOptions,setModalOptions]=useState();const[isAutoSubmit,setIsAutoSubmit]=useState(false);const[totalTime,setTotalTime]=useState(1);const[timeLeft,setTimeLeft]=useState(1);const[questions,setQuestions]=useState([]);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[highlightedOptions,setHighlightedOptions]=useState([]);const[selectedOptions,setSelectedOptions]=useState([]);useEffect(()=>{async function fetchData(){try{const response=await handleApiCall({API:\"load-data\",data:{collection:\"Tests\"}});const questionsObj=response.data.map(question=>{delete question[\"_id\"];if(question.title){const minutes=question.Hours*60+question.Minutes;const seconds=minutes*60+question.Seconds;setTotalTime(seconds);setTimeLeft(seconds);return null;}else{return{...question,type:question.Answer.length>1?\"checkbox\":\"radio\"};}});setQuestions(questionsObj.filter(question=>question!==null));}catch(error){console.error(\"Login error:\",error);}}fetchData();},[]);useEffect(()=>{if(questions.length){const intTimer=setInterval(()=>{setTimeLeft(prevTimeLeft=>{if(prevTimeLeft===0){clearInterval(intTimer);return 0;}return prevTimeLeft-1;});},1000);return()=>clearInterval(intTimer);}},[questions,totalTime]);useEffect(()=>{if(timeLeft===0&&!isAutoSubmit){setIsModalOpen(true);setModalOptions({type:\"Alert\",message:\"Time Out! \\nYour test will be submitted in 10 secs\",buttons:[\"Ok\"],responseFunc:()=>{setTimeLeft(10);setTotalTime(10);autoSubmit();setIsAutoSubmit(true);setIsModalOpen(false);}});}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[timeLeft,isAutoSubmit]);const autoSubmit=()=>{const timer=setTimeout(()=>{handleTestSubmit();},11000);return()=>clearTimeout(timer);};const handleTestSubmit=async()=>{if(selectedOptions){const userData=JSON.parse(localStorage.getItem(\"userData\")||\"{}\");const contact=userData.Contact;let correctAnswers=[],score=0,answered=0,notAnswered=0,skipped=0;questions.forEach(question=>{if(!question[\"title\"]){correctAnswers.push(question[\"Answer\"].length===1?question[\"Answer\"][0]:question[\"Answer\"]);}});correctAnswers.forEach((correctAnswer,index)=>{const userAnswer=selectedOptions[index];if(userAnswer===\"skipped\"){skipped++;}else if(userAnswer===\"not-answered\"){notAnswered++;}else{answered++;if(Array.isArray(correctAnswer)){if(Array.isArray(userAnswer)&&correctAnswer.length===userAnswer.length&&correctAnswer.every(ans=>userAnswer.includes(ans))){score++;}}else if(correctAnswer===userAnswer){score++;}}});localStorage.setItem(\"summary\",JSON.stringify({score,totalQuestions,answered,notAnswered,skipped}));const response=await handleApiCall({API:\"update-data\",data:{condition:{Contact:contact},collection:\"Users\",data:{Answer:JSON.stringify(selectedOptions),Score:score}}});setModalOptions({type:response.flag?\"Info\":\"Error\",message:response.flag?\"Your test has been submitted!\":\"Error submitting test! \\n Please contact admin\",buttons:[\"Ok\"],responseFunc:button=>{if(button===\"Ok\"){window.location.href=\"/summary\";setIsModalOpen(false);}}});setIsModalOpen(true);}};const handleOptionSelect=(option,type)=>{const updatedSelections=[...highlightedOptions];if(type===\"radio\"){if(updatedSelections[currentQuestionIndex]===option){updatedSelections[currentQuestionIndex]=\"not-answered\";}else{updatedSelections[currentQuestionIndex]=option!==undefined?option:\"not-answered\";}}else if(type===\"checkbox\"){const currentSelections=updatedSelections[currentQuestionIndex]||[];if(currentSelections.includes(option)){updatedSelections[currentQuestionIndex]=currentSelections.filter(o=>o!==option);}else{updatedSelections[currentQuestionIndex]=[...currentSelections,option];}if(updatedSelections[currentQuestionIndex].length===0){updatedSelections[currentQuestionIndex]=\"not-answered\";}else if(updatedSelections[currentQuestionIndex]===\"not-answered\"||updatedSelections[currentQuestionIndex]===\"skipped\"){updatedSelections[currentQuestionIndex]=[];}}setHighlightedOptions(updatedSelections);setSelectedOptions(updatedSelections);};const handleQuestionNavigate=direction=>{const updatedSelections=[...highlightedOptions];if(updatedSelections[currentQuestionIndex]===undefined){updatedSelections[currentQuestionIndex]=\"not-answered\";}setHighlightedOptions(updatedSelections);setSelectedOptions(updatedSelections);if(currentQuestionIndex<=totalQuestions-1){setCurrentQuestionIndex(direction===\"Next\"?currentQuestionIndex+1:currentQuestionIndex-1);}};const handleSkip=()=>{const updatedSelections=[...highlightedOptions];updatedSelections[currentQuestionIndex]=\"skipped\";setHighlightedOptions(updatedSelections);if(currentQuestionIndex<totalQuestions-1){setCurrentQuestionIndex(currentQuestionIndex+1);}};const handleQuestionNumberClick=index=>{const updatedSelections=[...highlightedOptions];if(updatedSelections[index]===undefined){updatedSelections[index]=\"not-answered\";}setHighlightedOptions(updatedSelections);setCurrentQuestionIndex(index);};const totalQuestions=questions.length;const currentQuestion=questions[currentQuestionIndex];const selectedOption=highlightedOptions[currentQuestionIndex]||[];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-app\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"quiz-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"question-section\",children:[/*#__PURE__*/_jsx(\"h1\",{children:currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.Question}),/*#__PURE__*/_jsx(\"ul\",{className:\"options\",children:currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.Option.map((option,index)=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>handleOptionSelect(option,currentQuestion.type),className:`option ${currentQuestion.type===\"radio\"&&selectedOption===option?\"selected\":\"\"}${currentQuestion.type===\"checkbox\"&&selectedOption.includes(option)?\"selected\":\"\"}`,children:(currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.type)===\"radio\"?/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:`question-${currentQuestionIndex}`,value:option,checked:selectedOption===option,onChange:()=>handleOptionSelect(option,\"radio\")}),option]}):/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:`question-${currentQuestionIndex}`,value:option,checked:selectedOption.includes(option),onChange:()=>handleOptionSelect(option,\"checkbox\")}),option]})},index))})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-footer\",children:[currentQuestionIndex!==0?/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleQuestionNavigate(\"Prev\"),children:\"Previous\"}):\"\",/*#__PURE__*/_jsx(\"button\",{onClick:()=>{return currentQuestionIndex!==totalQuestions-1?handleQuestionNavigate(\"Next\"):handleTestSubmit();},className:currentQuestionIndex!==totalQuestions-1?\"\":\"submit-button\",children:currentQuestionIndex!==totalQuestions-1?\"Next\":\"Submit\"}),currentQuestionIndex!==totalQuestions-1&&/*#__PURE__*/_jsx(\"button\",{className:\"skip-button\",onClick:handleSkip,children:\"Skip\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Question \",currentQuestionIndex+1,\" of \",totalQuestions]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"timer-section\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"card-header\",children:\"Timer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"timer-circle\",children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"120\",height:\"120\",children:[/*#__PURE__*/_jsx(\"circle\",{r:radius,cx:\"60\",cy:\"60\",fill:\"none\",stroke:\"#e7e7e7\",strokeWidth:\"8\"}),/*#__PURE__*/_jsx(\"circle\",{r:radius,cx:\"60\",cy:\"60\",fill:\"none\",stroke:\"#007BFF\",strokeWidth:\"8\",strokeDasharray:circumference,strokeDashoffset:circumference-timeLeft/totalTime*circumference,style:{transition:\"stroke-dashoffset 1s linear\"}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"timer-text\",children:[Math.floor(timeLeft/60),\"m \",timeLeft%60,\"s\"]})]}),/*#__PURE__*/_jsx(\"div\",{children:\"Time Remaining\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-number-section\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"card-header\",children:\"Questions List\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid-layout\",children:Array.from({length:totalQuestions},(_,i)=>/*#__PURE__*/_jsx(\"div\",{className:`question-number ${i===currentQuestionIndex?\"current-question\":\"\"} ${highlightedOptions[i]===\"skipped\"?\"skipped\":highlightedOptions[i]===\"not-answered\"?\"not-answered\":highlightedOptions[i]!==undefined?\"answered\":\"\"}`,onClick:()=>handleQuestionNumberClick(i),children:i+1},i+1))})]})]})]}),isModalOpen&&/*#__PURE__*/_jsx(Modal,{modalType:modalOptions.type,modalMessage:modalOptions.message,buttons:modalOptions.buttons,response:modalOptions.responseFunc})]});};export default Quiz;","map":{"version":3,"names":["React","useState","useEffect","components","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Navbar","Modal","handleApiCall","radius","circumference","Math","PI","Quiz","isModalOpen","setIsModalOpen","modalOptions","setModalOptions","isAutoSubmit","setIsAutoSubmit","totalTime","setTotalTime","timeLeft","setTimeLeft","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","highlightedOptions","setHighlightedOptions","selectedOptions","setSelectedOptions","fetchData","response","API","data","collection","questionsObj","map","question","title","minutes","Hours","Minutes","seconds","Seconds","type","Answer","length","filter","error","console","intTimer","setInterval","prevTimeLeft","clearInterval","message","buttons","responseFunc","autoSubmit","timer","setTimeout","handleTestSubmit","clearTimeout","userData","JSON","parse","localStorage","getItem","contact","Contact","correctAnswers","score","answered","notAnswered","skipped","forEach","push","correctAnswer","index","userAnswer","Array","isArray","every","ans","includes","setItem","stringify","totalQuestions","condition","Score","flag","button","window","location","href","handleOptionSelect","option","updatedSelections","undefined","currentSelections","o","handleQuestionNavigate","direction","handleSkip","handleQuestionNumberClick","currentQuestion","selectedOption","children","className","Question","Option","onClick","name","value","checked","onChange","width","height","r","cx","cy","fill","stroke","strokeWidth","strokeDasharray","strokeDashoffset","style","transition","floor","from","_","i","modalType","modalMessage"],"sources":["/home/sk/Documents/quiz-app/client/src/pages/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/Quiz.css\";\nimport components from \"./components\";\nconst { Navbar, Modal, handleApiCall } = components;\nconst radius = 50;\nconst circumference = 2 * Math.PI * radius;\nconst Quiz = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalOptions, setModalOptions] = useState();\n  const [isAutoSubmit, setIsAutoSubmit] = useState(false);\n  const [totalTime, setTotalTime] = useState(1);\n  const [timeLeft, setTimeLeft] = useState(1);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await handleApiCall({\n          API: \"load-data\",\n          data: { collection: \"Tests\" },\n        });\n\n        const questionsObj = response.data.map((question) => {\n          delete question[\"_id\"];\n          if (question.title) {\n            const minutes = question.Hours * 60 + question.Minutes;\n            const seconds = minutes * 60 + question.Seconds;\n\n            setTotalTime(seconds);\n            setTimeLeft(seconds);\n\n            return null;\n          } else {\n            return {\n              ...question,\n              type: question.Answer.length > 1 ? \"checkbox\" : \"radio\",\n            };\n          }\n        });\n\n        setQuestions(questionsObj.filter((question) => question !== null));\n      } catch (error) {\n        console.error(\"Login error:\", error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (questions.length) {\n      const intTimer = setInterval(() => {\n        setTimeLeft((prevTimeLeft) => {\n          if (prevTimeLeft === 0) {\n            clearInterval(intTimer);\n            return 0;\n          }\n          return prevTimeLeft - 1;\n        });\n      }, 1000);\n\n      return () => clearInterval(intTimer);\n    }\n  }, [questions, totalTime]);\n\n  useEffect(() => {\n    if (timeLeft === 0 && !isAutoSubmit) {\n      setIsModalOpen(true);\n      setModalOptions({\n        type: \"Alert\",\n        message: \"Time Out! \\nYour test will be submitted in 10 secs\",\n        buttons: [\"Ok\"],\n        responseFunc: () => {\n          setTimeLeft(10);\n          setTotalTime(10);\n          autoSubmit();\n          setIsAutoSubmit(true);\n          setIsModalOpen(false);\n        },\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timeLeft, isAutoSubmit]);\n\n  const autoSubmit = () => {\n    const timer = setTimeout(() => {\n      handleTestSubmit();\n    }, 11000);\n\n    return () => clearTimeout(timer);\n  };\n  const handleTestSubmit = async () => {\n    if (selectedOptions) {\n      const userData = JSON.parse(localStorage.getItem(\"userData\") || \"{}\");\n      const contact = userData.Contact;\n      let correctAnswers = [],\n        score = 0,\n        answered = 0,\n        notAnswered = 0,\n        skipped = 0;\n\n      questions.forEach((question) => {\n        if (!question[\"title\"]) {\n          correctAnswers.push(\n            question[\"Answer\"].length === 1\n              ? question[\"Answer\"][0]\n              : question[\"Answer\"]\n          );\n        }\n      });\n\n      correctAnswers.forEach((correctAnswer, index) => {\n        const userAnswer = selectedOptions[index];\n\n        if (userAnswer === \"skipped\") {\n          skipped++;\n        } else if (userAnswer === \"not-answered\") {\n          notAnswered++;\n        } else {\n          answered++;\n          if (Array.isArray(correctAnswer)) {\n            if (\n              Array.isArray(userAnswer) &&\n              correctAnswer.length === userAnswer.length &&\n              correctAnswer.every((ans) => userAnswer.includes(ans))\n            ) {\n              score++;\n            }\n          } else if (correctAnswer === userAnswer) {\n            score++;\n          }\n        }\n      });\n\n      localStorage.setItem(\n        \"summary\",\n        JSON.stringify({\n          score,\n          totalQuestions,\n          answered,\n          notAnswered,\n          skipped,\n        })\n      );\n\n      const response = await handleApiCall({\n        API: \"update-data\",\n        data: {\n          condition: { Contact: contact },\n          collection: \"Users\",\n          data: { Answer: JSON.stringify(selectedOptions), Score: score },\n        },\n      });\n\n      setModalOptions({\n        type: response.flag ? \"Info\" : \"Error\",\n        message: response.flag\n          ? \"Your test has been submitted!\"\n          : \"Error submitting test! \\n Please contact admin\",\n        buttons: [\"Ok\"],\n        responseFunc: (button) => {\n          if (button === \"Ok\") {\n            window.location.href = \"/summary\";\n            setIsModalOpen(false);\n          }\n        },\n      });\n\n      setIsModalOpen(true);\n    }\n  };\n\n  const handleOptionSelect = (option, type) => {\n    const updatedSelections = [...highlightedOptions];\n\n    if (type === \"radio\") {\n      if (updatedSelections[currentQuestionIndex] === option) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\";\n      } else {\n        updatedSelections[currentQuestionIndex] =\n          option !== undefined ? option : \"not-answered\";\n      }\n    } else if (type === \"checkbox\") {\n      const currentSelections = updatedSelections[currentQuestionIndex] || [];\n\n      if (currentSelections.includes(option)) {\n        updatedSelections[currentQuestionIndex] = currentSelections.filter(\n          (o) => o !== option\n        );\n      } else {\n        updatedSelections[currentQuestionIndex] = [\n          ...currentSelections,\n          option,\n        ];\n      }\n\n      if (updatedSelections[currentQuestionIndex].length === 0) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\";\n      } else if (\n        updatedSelections[currentQuestionIndex] === \"not-answered\" ||\n        updatedSelections[currentQuestionIndex] === \"skipped\"\n      ) {\n        updatedSelections[currentQuestionIndex] = [];\n      }\n    }\n\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n  };\n\n  const handleQuestionNavigate = (direction) => {\n    const updatedSelections = [...highlightedOptions];\n\n    if (updatedSelections[currentQuestionIndex] === undefined) {\n      updatedSelections[currentQuestionIndex] = \"not-answered\";\n    }\n\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n\n    if (currentQuestionIndex <= totalQuestions - 1) {\n      setCurrentQuestionIndex(\n        direction === \"Next\"\n          ? currentQuestionIndex + 1\n          : currentQuestionIndex - 1\n      );\n    }\n  };\n\n  const handleSkip = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    updatedSelections[currentQuestionIndex] = \"skipped\";\n\n    setHighlightedOptions(updatedSelections);\n\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handleQuestionNumberClick = (index) => {\n    const updatedSelections = [...highlightedOptions];\n\n    if (updatedSelections[index] === undefined) {\n      updatedSelections[index] = \"not-answered\";\n    }\n\n    setHighlightedOptions(updatedSelections);\n    setCurrentQuestionIndex(index);\n  };\n  const totalQuestions = questions.length;\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedOption = highlightedOptions[currentQuestionIndex] || [];\n\n  return (\n    <>\n      <Navbar />\n\n      <div className=\"quiz-body\">\n        <div className=\"quiz-app\">\n          <div className=\"quiz-content\">\n            <div className=\"question-section\">\n              <h1>{currentQuestion?.Question}</h1>\n              <ul className=\"options\">\n                {currentQuestion?.Option.map((option, index) => (\n                  <li\n                    key={index}\n                    onClick={() =>\n                      handleOptionSelect(option, currentQuestion.type)\n                    }\n                    className={`option ${\n                      currentQuestion.type === \"radio\" &&\n                      selectedOption === option\n                        ? \"selected\"\n                        : \"\"\n                    }${\n                      currentQuestion.type === \"checkbox\" &&\n                      selectedOption.includes(option)\n                        ? \"selected\"\n                        : \"\"\n                    }`}\n                  >\n                    {currentQuestion?.type === \"radio\" ? (\n                      <label>\n                        <input\n                          type=\"radio\"\n                          name={`question-${currentQuestionIndex}`}\n                          value={option}\n                          checked={selectedOption === option}\n                          onChange={() => handleOptionSelect(option, \"radio\")}\n                        />\n                        {option}\n                      </label>\n                    ) : (\n                      <label>\n                        <input\n                          type=\"checkbox\"\n                          name={`question-${currentQuestionIndex}`}\n                          value={option}\n                          checked={selectedOption.includes(option)}\n                          onChange={() =>\n                            handleOptionSelect(option, \"checkbox\")\n                          }\n                        />\n                        {option}\n                      </label>\n                    )}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"quiz-footer\">\n            {currentQuestionIndex !== 0 ? (\n              <button onClick={() => handleQuestionNavigate(\"Prev\")}>\n                Previous\n              </button>\n            ) : (\n              \"\"\n            )}\n            <button\n              onClick={() => {\n                return currentQuestionIndex !== totalQuestions - 1\n                  ? handleQuestionNavigate(\"Next\")\n                  : handleTestSubmit();\n              }}\n              className={\n                currentQuestionIndex !== totalQuestions - 1\n                  ? \"\"\n                  : \"submit-button\"\n              }\n            >\n              {currentQuestionIndex !== totalQuestions - 1 ? \"Next\" : \"Submit\"}\n            </button>\n            {currentQuestionIndex !== totalQuestions - 1 && (\n              <button className=\"skip-button\" onClick={handleSkip}>\n                Skip\n              </button>\n            )}\n\n            <p>\n              Question {currentQuestionIndex + 1} of {totalQuestions}\n            </p>\n          </div>\n        </div>\n        <div>\n          {/* Timer Section */}\n          <div className=\"timer-section\">\n            <h1 className=\"card-header\">Timer</h1>\n            <div className=\"card-body\">\n              <div className=\"timer-circle\">\n                <svg width=\"120\" height=\"120\">\n                  <circle\n                    r={radius}\n                    cx=\"60\"\n                    cy=\"60\"\n                    fill=\"none\"\n                    stroke=\"#e7e7e7\"\n                    strokeWidth=\"8\"\n                  ></circle>\n                  <circle\n                    r={radius}\n                    cx=\"60\"\n                    cy=\"60\"\n                    fill=\"none\"\n                    stroke=\"#007BFF\"\n                    strokeWidth=\"8\"\n                    strokeDasharray={circumference}\n                    strokeDashoffset={\n                      circumference - (timeLeft / totalTime) * circumference\n                    }\n                    style={{\n                      transition: \"stroke-dashoffset 1s linear\",\n                    }}\n                  ></circle>\n                </svg>\n                <div className=\"timer-text\">\n                  {Math.floor(timeLeft / 60)}m {timeLeft % 60}s\n                </div>\n              </div>\n              <div>Time Remaining</div>\n            </div>\n          </div>\n\n          {/* Question Number Section */}\n          <div className=\"question-number-section\">\n            <h1 className=\"card-header\">Questions List</h1>\n            <div className=\"grid-layout\">\n              {Array.from({ length: totalQuestions }, (_, i) => (\n                <div\n                  className={`question-number ${\n                    i === currentQuestionIndex ? \"current-question\" : \"\"\n                  } ${\n                    highlightedOptions[i] === \"skipped\"\n                      ? \"skipped\"\n                      : highlightedOptions[i] === \"not-answered\"\n                      ? \"not-answered\"\n                      : highlightedOptions[i] !== undefined\n                      ? \"answered\"\n                      : \"\"\n                  }`}\n                  key={i + 1}\n                  onClick={() => handleQuestionNumberClick(i)}\n                >\n                  {i + 1}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n      {isModalOpen && (\n        <Modal\n          modalType={modalOptions.type}\n          modalMessage={modalOptions.message}\n          buttons={modalOptions.buttons}\n          response={modalOptions.responseFunc}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}