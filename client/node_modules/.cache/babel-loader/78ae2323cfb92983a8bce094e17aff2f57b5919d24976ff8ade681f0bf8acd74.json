{"ast":null,"code":"var _jsxFileName = \"/home/sk/Documents/quiz-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Quiz from \"./components/Quiz\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizContainer = () => {\n  _s();\n  const [initialTime, setInitialTime] = useState(null);\n  useEffect(() => {\n    // Simulating a database fetch for initial quiz time\n    const fetchTimeFromDb = async () => {\n      const fetchedTime = await getQuizTimeFromDb(); // Mock function to get time\n      setInitialTime(fetchedTime);\n    };\n    fetchTimeFromDb();\n  }, []);\n  if (initialTime === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this); // Show loading while time is fetched\n  }\n  return /*#__PURE__*/_jsxDEV(Quiz, {\n    initialTime: initialTime\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n_s(QuizContainer, \"CvTVEWMBSvpmQzCd3GL7gV/7gr0=\");\n_c = QuizContainer;\nexport default QuizContainer;\n\n// Mock async function to simulate DB time fetching\nconst getQuizTimeFromDb = async () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(20); // Return 600 seconds (10 minutes) from DB\n    }, 1000);\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"QuizContainer\");","map":{"version":3,"names":["React","useState","useEffect","Quiz","jsxDEV","_jsxDEV","QuizContainer","_s","initialTime","setInitialTime","fetchTimeFromDb","fetchedTime","getQuizTimeFromDb","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Promise","resolve","setTimeout","$RefreshReg$"],"sources":["/home/sk/Documents/quiz-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Quiz from \"./components/Quiz\";\n\nconst QuizContainer = () => {\n  const [initialTime, setInitialTime] = useState(null);\n\n  useEffect(() => {\n    // Simulating a database fetch for initial quiz time\n    const fetchTimeFromDb = async () => {\n      const fetchedTime = await getQuizTimeFromDb(); // Mock function to get time\n      setInitialTime(fetchedTime);\n    };\n\n    fetchTimeFromDb();\n  }, []);\n\n  if (initialTime === null) {\n    return <div>Loading...</div>; // Show loading while time is fetched\n  }\n\n  return <Quiz initialTime={initialTime} />;\n};\n\nexport default QuizContainer;\n\n// Mock async function to simulate DB time fetching\nconst getQuizTimeFromDb = async () => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(20); // Return 600 seconds (10 minutes) from DB\n    }, 1000);\n  });\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,WAAW,GAAG,MAAMC,iBAAiB,CAAC,CAAC,CAAC,CAAC;MAC/CH,cAAc,CAACE,WAAW,CAAC;IAC7B,CAAC;IAEDD,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,WAAW,KAAK,IAAI,EAAE;IACxB,oBAAOH,OAAA;MAAAQ,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;EAEA,oBAAOZ,OAAA,CAACF,IAAI;IAACK,WAAW,EAAEA;EAAY;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C,CAAC;AAACV,EAAA,CAlBID,aAAa;AAAAY,EAAA,GAAbZ,aAAa;AAoBnB,eAAeA,aAAa;;AAE5B;AACA,MAAMM,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACpC,OAAO,IAAIO,OAAO,CAAEC,OAAO,IAAK;IAC9BC,UAAU,CAAC,MAAM;MACfD,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACf,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,CAAC;AACJ,CAAC;AAAC,IAAAF,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}