{"ast":null,"code":"var _jsxFileName = \"/home/sk/Documents/quiz-app/src/pages/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { CgProfile } from \"react-icons/cg\";\nimport \"../styles/Quiz.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = props => {\n  _s();\n  //const { initialTime } = props;\n  const [initialTime, setInitialTime] = useState(props.initialTime);\n  const [userData, setUserData] = useState();\n  const navigate = useNavigate();\n  const [timeLeft, setTimeLeft] = useState(initialTime);\n  const [totalTime] = useState(initialTime);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\n  const [hosts, setHosts] = useState([]);\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem(\"userData\") || \"{}\"),\n      localIps = localStorage.getItem(\"localIps\");\n    userData && setUserData(userData);\n    if (localIps) {\n      setHosts(localIps.split(\",\"));\n    }\n  }, [props]);\n  useEffect(() => {\n    hosts.length && axios.post(`http://${hosts[0]}:5000/load-data`, {\n      collection: \"Tests\"\n    }).then(result => {\n      result.data.forEach(qn => {\n        delete qn[\"_id\"];\n      });\n      const questionsObj = result.data.map(question => {\n        return {\n          ...question,\n          type: question.Answer.length > 1 ? \"checkbox\" : \"radio\" // Multiple answers => checkbox, single answer => radio\n        };\n      });\n      setQuestions(questionsObj);\n    });\n  }, [hosts]);\n  useEffect(() => {\n    if (questions.length) {\n      const intTimer = setInterval(() => {\n        setTimeLeft(prevTimeLeft => {\n          if (prevTimeLeft <= 0) {\n            clearInterval(intTimer);\n            return 0;\n          }\n          return prevTimeLeft - 1;\n        });\n      }, 1000);\n\n      // Cleanup function to clear interval when component unmounts or questions change\n      return () => clearInterval(intTimer);\n    }\n  }, [questions]);\n  useEffect(() => {\n    if (timeLeft < 1) {\n      console.log(timeLeft);\n      window.alert(\"Time Out!\\nYour test will be submitted in 10 secs\");\n      setInitialTime(10); // Resetting time to 10 after timeout\n    }\n  }, [timeLeft]);\n  const totalQuestions = questions.length;\n  const handleOptionSelect = (option, type) => {\n    const updatedSelections = [...highlightedOptions];\n    if (type === \"radio\") {\n      // Toggle selection for radio buttons\n      if (updatedSelections[currentQuestionIndex] === option) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\"; // Deselect if clicked again\n      } else {\n        updatedSelections[currentQuestionIndex] = option !== undefined ? option : \"not-answered\";\n      }\n    } else if (type === \"checkbox\") {\n      const currentSelections = updatedSelections[currentQuestionIndex] || [];\n\n      // Toggle checkbox selection\n      if (currentSelections.includes(option)) {\n        updatedSelections[currentQuestionIndex] = currentSelections.filter(o => o !== option);\n      } else {\n        updatedSelections[currentQuestionIndex] = [...currentSelections, option];\n      }\n\n      // Check if any selections are made\n      if (updatedSelections[currentQuestionIndex].length === 0) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\"; // Mark as not-answered\n      } else if (updatedSelections[currentQuestionIndex] === \"not-answered\" || updatedSelections[currentQuestionIndex] === \"skipped\") {\n        updatedSelections[currentQuestionIndex] = []; // Clear \"not-answered\" status\n      }\n    }\n\n    // Update states\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n  };\n  const handleNextQuestion = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    // If no option is selected, mark as 'not-answered'\n    if (updatedSelections[currentQuestionIndex] === undefined) {\n      updatedSelections[currentQuestionIndex] = \"not-answered\";\n    }\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handlePreviousQuestion = () => {\n    const updatedSelections = [...highlightedOptions];\n    if (updatedSelections[currentQuestionIndex] === undefined) {\n      updatedSelections[currentQuestionIndex] = \"not-answered\";\n    }\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const handleSkip = () => {\n    const updatedSelections = [...highlightedOptions];\n    updatedSelections[currentQuestionIndex] = \"skipped\";\n    setHighlightedOptions(updatedSelections);\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handleQuestionClick = index => {\n    const updatedSelections = [...highlightedOptions];\n\n    // If the question is neither answered nor skipped, mark it as not-answered\n    if (updatedSelections[index] === undefined) {\n      updatedSelections[index] = \"not-answered\";\n    }\n    setHighlightedOptions(updatedSelections);\n    setCurrentQuestionIndex(index);\n  };\n  const handleSubmit = () => {\n    if (window.confirm(\"Are you sure you want to start the test?\")) {\n      console.log(\"Quiz Submitted:\", selectedOptions);\n      alert(\"Quiz Submitted!\");\n      navigate(\"/\");\n    }\n  };\n  const showProfile = profileDetails => {\n    const isExist = document.querySelector(\".profile-container\");\n    if (isExist) {\n      return;\n    }\n    const profileContainer = document.createElement(\"div\");\n    profileContainer.className = \"profile-container\";\n    const profileInfo = document.createElement(\"div\");\n    profileInfo.className = \"profile-info\";\n    Object.keys(profileDetails).map(async detail => {\n      const detailList = document.createElement(\"li\");\n      detailList.classList = \"detail\";\n      detailList.innerHTML = `<p><span>${detail}:</span>&nbsp;<span> ${profileDetails[detail]}</span></p>`;\n      profileInfo.appendChild(detailList);\n    });\n    profileContainer.appendChild(profileInfo);\n    document.body.appendChild(profileContainer);\n  };\n  useEffect(() => {\n    const bodyClick = event => {\n      if (event.target.closest(\"li.profile\")) {\n        return;\n      } else if (event.target.closest(\"div.profile-container\")) {\n        return;\n      }\n      const profileExist = document.querySelector(\".profile-container\");\n      if (profileExist) {\n        profileExist.remove();\n      }\n    };\n    document.body.addEventListener(\"click\", bodyClick);\n    return () => {\n      document.body.removeEventListener(\"click\", bodyClick);\n    };\n  }, []);\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedOption = highlightedOptions[currentQuestionIndex] || [];\n  const radius = 50;\n  const circumference = 2 * Math.PI * radius;\n  //const element = <FontAwesomeIcon icon={byPrefixAndName.fas[\"house\"]} />;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: \"Quizzards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => {\n              navigate(\"/admin\");\n            },\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#about\",\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            href: \"https://sanjaikumaran.online/contact/\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              showProfile(userData);\n            },\n            className: \"profile\",\n            children: /*#__PURE__*/_jsxDEV(CgProfile, {\n              style: {\n                fontSize: \"1.5rem\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-app\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.Question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"options\",\n              children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.Option.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleOptionSelect(option, currentQuestion.type),\n                className: `\n                option \n                ${currentQuestion.type === \"radio\" && selectedOption === option ? \"selected\" : \"\"}\n                ${currentQuestion.type === \"checkbox\" && selectedOption.includes(option) ? \"selected\" : \"\"}\n            `,\n                children: (currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.type) === \"radio\" ? /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: `question-${currentQuestionIndex}`,\n                    value: option,\n                    checked: selectedOption === option // Will reflect deselection\n                    ,\n                    onChange: () => handleOptionSelect(option, \"radio\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 25\n                  }, this), option]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: `question-${currentQuestionIndex}`,\n                    value: option,\n                    checked: selectedOption.includes(option),\n                    onChange: () => handleOptionSelect(option, \"checkbox\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 25\n                  }, this), option]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [currentQuestionIndex !== 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePreviousQuestion,\n            disabled: currentQuestionIndex === 0,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: currentQuestionIndex !== totalQuestions - 1 ? handleNextQuestion : handleSubmit,\n            className: currentQuestionIndex !== totalQuestions - 1 ? \"\" : \"submit-button\",\n            children: currentQuestionIndex !== totalQuestions - 1 ? \"Next\" : \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), currentQuestionIndex !== totalQuestions - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSkip,\n            children: \"Skip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question \", currentQuestionIndex + 1, \" of \", totalQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"header\",\n            children: \"Timer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer-circle\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"120\",\n                height: \"120\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  r: radius,\n                  cx: \"60\",\n                  cy: \"60\",\n                  fill: \"none\",\n                  stroke: \"#e7e7e7\",\n                  strokeWidth: \"8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                  r: radius,\n                  cx: \"60\",\n                  cy: \"60\",\n                  fill: \"none\",\n                  stroke: \"#007BFF\",\n                  strokeWidth: \"8\",\n                  strokeDasharray: circumference,\n                  strokeDashoffset: circumference - timeLeft / totalTime * circumference,\n                  style: {\n                    transition: \"stroke-dashoffset 1s linear\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timer-text\",\n                children: [Math.floor(timeLeft / 60), \"m \", timeLeft % 60, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Time Remaining\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-number-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"header\",\n            children: \"Questions List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-layout\",\n            children: Array.from({\n              length: totalQuestions\n            }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `question-number ${i === currentQuestionIndex ? \"current-question\" : \"\"} ${highlightedOptions[i] === \"skipped\" ? \"skipped\" : highlightedOptions[i] === \"not-answered\" ? \"not-answered\" : highlightedOptions[i] !== undefined ? \"answered\" : \"\"}`,\n              onClick: () => handleQuestionClick(i) // Handle question click\n              ,\n              children: i + 1\n            }, i + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Quiz, \"wUzO8AG5cG4mKLO/95G3bG0Ndl8=\", false, function () {\n  return [useNavigate];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","CgProfile","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","props","_s","initialTime","setInitialTime","userData","setUserData","navigate","timeLeft","setTimeLeft","totalTime","currentQuestionIndex","setCurrentQuestionIndex","selectedOptions","setSelectedOptions","questions","setQuestions","highlightedOptions","setHighlightedOptions","hosts","setHosts","JSON","parse","localStorage","getItem","localIps","split","length","post","collection","then","result","data","forEach","qn","questionsObj","map","question","type","Answer","intTimer","setInterval","prevTimeLeft","clearInterval","console","log","window","alert","totalQuestions","handleOptionSelect","option","updatedSelections","undefined","currentSelections","includes","filter","o","handleNextQuestion","handlePreviousQuestion","handleSkip","handleQuestionClick","index","handleSubmit","confirm","showProfile","profileDetails","isExist","document","querySelector","profileContainer","createElement","className","profileInfo","Object","keys","detail","detailList","classList","innerHTML","appendChild","body","bodyClick","event","target","closest","profileExist","remove","addEventListener","removeEventListener","currentQuestion","selectedOption","radius","circumference","Math","PI","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","rel","style","fontSize","Question","Option","name","value","checked","onChange","disabled","width","height","r","cx","cy","fill","stroke","strokeWidth","strokeDasharray","strokeDashoffset","transition","floor","Array","from","_","i","_c","$RefreshReg$"],"sources":["/home/sk/Documents/quiz-app/src/pages/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { CgProfile } from \"react-icons/cg\";\n\nimport \"../styles/Quiz.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Quiz = (props) => {\n  //const { initialTime } = props;\n  const [initialTime, setInitialTime] = useState(props.initialTime);\n  const [userData, setUserData] = useState();\n  const navigate = useNavigate();\n  const [timeLeft, setTimeLeft] = useState(initialTime);\n  const [totalTime] = useState(initialTime);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\n\n  const [hosts, setHosts] = useState([]);\n\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem(\"userData\") || \"{}\"),\n      localIps = localStorage.getItem(\"localIps\");\n    userData && setUserData(userData);\n\n    if (localIps) {\n      setHosts(localIps.split(\",\"));\n    }\n  }, [props]);\n\n  useEffect(() => {\n    hosts.length &&\n      axios\n        .post(`http://${hosts[0]}:5000/load-data`, { collection: \"Tests\" })\n        .then((result) => {\n          result.data.forEach((qn) => {\n            delete qn[\"_id\"];\n          });\n          const questionsObj = result.data.map((question) => {\n            return {\n              ...question,\n              type: question.Answer.length > 1 ? \"checkbox\" : \"radio\", // Multiple answers => checkbox, single answer => radio\n            };\n          });\n          setQuestions(questionsObj);\n        });\n  }, [hosts]);\n\n  useEffect(() => {\n    if (questions.length) {\n      const intTimer = setInterval(() => {\n        setTimeLeft((prevTimeLeft) => {\n          if (prevTimeLeft <= 0) {\n            clearInterval(intTimer);\n            return 0;\n          }\n          return prevTimeLeft - 1;\n        });\n      }, 1000);\n\n      // Cleanup function to clear interval when component unmounts or questions change\n      return () => clearInterval(intTimer);\n    }\n  }, [questions]);\n\n  useEffect(() => {\n    if (timeLeft < 1) {\n      console.log(timeLeft);\n      window.alert(\"Time Out!\\nYour test will be submitted in 10 secs\");\n      setInitialTime(10); // Resetting time to 10 after timeout\n    }\n  }, [timeLeft]);\n\n  const totalQuestions = questions.length;\n\n  const handleOptionSelect = (option, type) => {\n    const updatedSelections = [...highlightedOptions];\n\n    if (type === \"radio\") {\n      // Toggle selection for radio buttons\n      if (updatedSelections[currentQuestionIndex] === option) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\"; // Deselect if clicked again\n      } else {\n        updatedSelections[currentQuestionIndex] =\n          option !== undefined ? option : \"not-answered\";\n      }\n    } else if (type === \"checkbox\") {\n      const currentSelections = updatedSelections[currentQuestionIndex] || [];\n\n      // Toggle checkbox selection\n      if (currentSelections.includes(option)) {\n        updatedSelections[currentQuestionIndex] = currentSelections.filter(\n          (o) => o !== option\n        );\n      } else {\n        updatedSelections[currentQuestionIndex] = [\n          ...currentSelections,\n          option,\n        ];\n      }\n\n      // Check if any selections are made\n      if (updatedSelections[currentQuestionIndex].length === 0) {\n        updatedSelections[currentQuestionIndex] = \"not-answered\"; // Mark as not-answered\n      } else if (\n        updatedSelections[currentQuestionIndex] === \"not-answered\" ||\n        updatedSelections[currentQuestionIndex] === \"skipped\"\n      ) {\n        updatedSelections[currentQuestionIndex] = []; // Clear \"not-answered\" status\n      }\n    }\n\n    // Update states\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n  };\n\n  const handleNextQuestion = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    // If no option is selected, mark as 'not-answered'\n    if (updatedSelections[currentQuestionIndex] === undefined) {\n      updatedSelections[currentQuestionIndex] = \"not-answered\";\n    }\n\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const handlePreviousQuestion = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    if (updatedSelections[currentQuestionIndex] === undefined) {\n      updatedSelections[currentQuestionIndex] = \"not-answered\";\n    }\n\n    setHighlightedOptions(updatedSelections);\n    setSelectedOptions(updatedSelections);\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const handleSkip = () => {\n    const updatedSelections = [...highlightedOptions];\n\n    updatedSelections[currentQuestionIndex] = \"skipped\";\n\n    setHighlightedOptions(updatedSelections);\n\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handleQuestionClick = (index) => {\n    const updatedSelections = [...highlightedOptions];\n\n    // If the question is neither answered nor skipped, mark it as not-answered\n    if (updatedSelections[index] === undefined) {\n      updatedSelections[index] = \"not-answered\";\n    }\n\n    setHighlightedOptions(updatedSelections);\n    setCurrentQuestionIndex(index);\n  };\n\n  const handleSubmit = () => {\n    if (window.confirm(\"Are you sure you want to start the test?\")) {\n      console.log(\"Quiz Submitted:\", selectedOptions);\n      alert(\"Quiz Submitted!\");\n      navigate(\"/\");\n    }\n  };\n  const showProfile = (profileDetails) => {\n    const isExist = document.querySelector(\".profile-container\");\n    if (isExist) {\n      return;\n    }\n    const profileContainer = document.createElement(\"div\");\n    profileContainer.className = \"profile-container\";\n    const profileInfo = document.createElement(\"div\");\n    profileInfo.className = \"profile-info\";\n    Object.keys(profileDetails).map(async (detail) => {\n      const detailList = document.createElement(\"li\");\n      detailList.classList = \"detail\";\n      detailList.innerHTML = `<p><span>${detail}:</span>&nbsp;<span> ${profileDetails[detail]}</span></p>`;\n      profileInfo.appendChild(detailList);\n    });\n    profileContainer.appendChild(profileInfo);\n    document.body.appendChild(profileContainer);\n  };\n\n  useEffect(() => {\n    const bodyClick = (event) => {\n      if (event.target.closest(\"li.profile\")) {\n        return;\n      } else if (event.target.closest(\"div.profile-container\")) {\n        return;\n      }\n\n      const profileExist = document.querySelector(\".profile-container\");\n\n      if (profileExist) {\n        profileExist.remove();\n      }\n    };\n    document.body.addEventListener(\"click\", bodyClick);\n    return () => {\n      document.body.removeEventListener(\"click\", bodyClick);\n    };\n  }, []);\n\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedOption = highlightedOptions[currentQuestionIndex] || [];\n\n  const radius = 50;\n  const circumference = 2 * Math.PI * radius;\n  //const element = <FontAwesomeIcon icon={byPrefixAndName.fas[\"house\"]} />;\n  return (\n    <>\n      {/* Top Navigation Bar */}\n      <div>\n        <nav className=\"navbar\">\n          <div className=\"logo\">Quizzards</div>\n          <div className=\"nav-links\">\n            {/*{console.log(questions)}*/}\n            <span\n              onClick={() => {\n                navigate(\"/admin\");\n              }}\n            >\n              Home\n            </span>\n            <a href=\"#about\">About</a>\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://sanjaikumaran.online/contact/\"\n            >\n              Contact\n            </a>{\" \"}\n            <li\n              onClick={() => {\n                showProfile(userData);\n              }}\n              className=\"profile\"\n            >\n              {<CgProfile style={{ fontSize: \"1.5rem\" }} />}\n            </li>\n          </div>\n        </nav>\n      </div>\n\n      <div className=\"quiz-body\">\n        <div className=\"quiz-app\">\n          <div className=\"quiz-content\">\n            <div className=\"question-section\">\n              <h1>{currentQuestion?.Question}</h1>\n              <ul className=\"options\">\n                {currentQuestion?.Option.map((option, index) => (\n                  <li\n                    key={index}\n                    onClick={() =>\n                      handleOptionSelect(option, currentQuestion.type)\n                    }\n                    className={`\n                option \n                ${\n                  currentQuestion.type === \"radio\" && selectedOption === option\n                    ? \"selected\"\n                    : \"\"\n                }\n                ${\n                  currentQuestion.type === \"checkbox\" &&\n                  selectedOption.includes(option)\n                    ? \"selected\"\n                    : \"\"\n                }\n            `}\n                  >\n                    {currentQuestion?.type === \"radio\" ? (\n                      <label>\n                        <input\n                          type=\"radio\"\n                          name={`question-${currentQuestionIndex}`}\n                          value={option}\n                          checked={selectedOption === option} // Will reflect deselection\n                          onChange={() => handleOptionSelect(option, \"radio\")}\n                        />\n                        {option}\n                      </label>\n                    ) : (\n                      <label>\n                        <input\n                          type=\"checkbox\"\n                          name={`question-${currentQuestionIndex}`}\n                          value={option}\n                          checked={selectedOption.includes(option)}\n                          onChange={() =>\n                            handleOptionSelect(option, \"checkbox\")\n                          }\n                        />\n                        {option}\n                      </label>\n                    )}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"footer\">\n            {currentQuestionIndex !== 0 ? (\n              <button\n                onClick={handlePreviousQuestion}\n                disabled={currentQuestionIndex === 0}\n              >\n                Previous\n              </button>\n            ) : (\n              \"\"\n            )}\n            <button\n              onClick={\n                currentQuestionIndex !== totalQuestions - 1\n                  ? handleNextQuestion\n                  : handleSubmit\n              }\n              className={\n                currentQuestionIndex !== totalQuestions - 1\n                  ? \"\"\n                  : \"submit-button\"\n              }\n            >\n              {currentQuestionIndex !== totalQuestions - 1 ? \"Next\" : \"Submit\"}\n            </button>\n            {currentQuestionIndex !== totalQuestions - 1 && (\n              <button onClick={handleSkip}>Skip</button>\n            )}\n\n            <p>\n              Question {currentQuestionIndex + 1} of {totalQuestions}\n            </p>\n          </div>\n        </div>\n        <div>\n          {/* Timer Section */}\n          <div className=\"timer-section\">\n            <h1 className=\"header\">Timer</h1>\n            <div className=\"timer-container\">\n              <div className=\"timer-circle\">\n                <svg width=\"120\" height=\"120\">\n                  <circle\n                    r={radius}\n                    cx=\"60\"\n                    cy=\"60\"\n                    fill=\"none\"\n                    stroke=\"#e7e7e7\"\n                    strokeWidth=\"8\"\n                  ></circle>\n                  <circle\n                    r={radius}\n                    cx=\"60\"\n                    cy=\"60\"\n                    fill=\"none\"\n                    stroke=\"#007BFF\"\n                    strokeWidth=\"8\"\n                    strokeDasharray={circumference}\n                    strokeDashoffset={\n                      circumference - (timeLeft / totalTime) * circumference\n                    }\n                    style={{\n                      transition: \"stroke-dashoffset 1s linear\",\n                    }}\n                  ></circle>\n                </svg>\n                <div className=\"timer-text\">\n                  {Math.floor(timeLeft / 60)}m {timeLeft % 60}s\n                </div>\n              </div>\n              <div>Time Remaining</div>\n            </div>\n          </div>\n\n          {/* Question Number Section */}\n          <div className=\"question-number-container\">\n            <h1 className=\"header\">Questions List</h1>\n            <div className=\"grid-layout\">\n              {Array.from({ length: totalQuestions }, (_, i) => (\n                <div\n                  className={`question-number ${\n                    i === currentQuestionIndex ? \"current-question\" : \"\"\n                  } ${\n                    highlightedOptions[i] === \"skipped\"\n                      ? \"skipped\"\n                      : highlightedOptions[i] === \"not-answered\"\n                      ? \"not-answered\"\n                      : highlightedOptions[i] !== undefined\n                      ? \"answered\"\n                      : \"\"\n                  }`}\n                  key={i + 1}\n                  onClick={() => handleQuestionClick(i)} // Handle question click\n                >\n                  {i + 1}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}